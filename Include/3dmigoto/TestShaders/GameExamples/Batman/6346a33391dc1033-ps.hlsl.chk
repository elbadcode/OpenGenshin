// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:39:32 2019

cbuffer cb1 : register(b1)
{
  float4 cb1[32] : packoffset(c0);
}

cbuffer cb0 : register(b0)
{
  float4 cb0[38] : packoffset(c0);
}

SamplerState s0_s_s : register(s0);
SamplerState s1_s_s : register(s1);
SamplerState s2_s_s : register(s2);
SamplerState s3_s_s : register(s3);
SamplerState s4_s_s : register(s4);
SamplerState s5_s_s : register(s5);
SamplerState s6_s_s : register(s6);
SamplerState s7_s_s : register(s7);
SamplerState s8_s_s : register(s8);
SamplerState s9_s_s : register(s9);
Texture2D<float4> t0 : register(t0);
Texture2D<float4> t1 : register(t1);
Texture2D<float4> t2 : register(t2);
Texture2D<float4> t3 : register(t3);
Texture2D<float4> t4 : register(t4);
Texture2D<float4> t5 : register(t5);
Texture2D<float4> t6 : register(t6);
Texture2D<float4> t7 : register(t7);
Texture2D<float4> t8 : register(t8);
Texture2D<float4> t9 : register(t9);


// 3Dmigoto declarations
#define cmp -


void main(
  uint vCoverage : SV_Coverage,
  linear centroid float4 v0 : TEXCOORD10,
  linear centroid float4 v1 : TEXCOORD11,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  float4 v4 : TEXCOORD5,
  float4 v5 : TEXCOORD6,
  float4 v6 : TEXCOORD7,
  float3 v7 : TEXCOORD8,
  float3 v8 : SPRAY_VELOCIY_WS_POS0,
  float3 v9 : SPRAY_VELOCIY_PREV_WS_POS0,
  out float3 o0 : SV_TARGET0,
  out float3 o1 : SV_TARGET1,
  out float4 o2 : SV_TARGET2,
  out float4 o3 : SV_TARGET3,
  out float2 o4 : SV_TARGET4,
  out float o5 : SV_TARGET5,
  out uint oMask : SV_Coverage)
{
  const float4 icb[] = { { 0.015625, 0, 0, 0},
                              { 0.515625, 0, 0, 0},
                              { 0.140625, 0, 0, 0},
                              { 0.640625, 0, 0, 0},
                              { 0.046875, 0, 0, 0},
                              { 0.546875, 0, 0, 0},
                              { 0.171875, 0, 0, 0},
                              { 0.671875, 0, 0, 0},
                              { 0.765625, 0, 0, 0},
                              { 0.265625, 0, 0, 0},
                              { 0.890625, 0, 0, 0},
                              { 0.390625, 0, 0, 0},
                              { 0.796875, 0, 0, 0},
                              { 0.296875, 0, 0, 0},
                              { 0.921875, 0, 0, 0},
                              { 0.421875, 0, 0, 0},
                              { 0.203125, 0, 0, 0},
                              { 0.703125, 0, 0, 0},
                              { 0.078125, 0, 0, 0},
                              { 0.578125, 0, 0, 0},
                              { 0.234375, 0, 0, 0},
                              { 0.734375, 0, 0, 0},
                              { 0.109375, 0, 0, 0},
                              { 0.609375, 0, 0, 0},
                              { 0.953125, 0, 0, 0},
                              { 0.453125, 0, 0, 0},
                              { 0.828125, 0, 0, 0},
                              { 0.328125, 0, 0, 0},
                              { 0.984375, 0, 0, 0},
                              { 0.484375, 0, 0, 0},
                              { 0.859375, 0, 0, 0},
                              { 0.359375, 0, 0, 0},
                              { 0.062500, 0, 0, 0},
                              { 0.562500, 0, 0, 0},
                              { 0.187500, 0, 0, 0},
                              { 0.687500, 0, 0, 0},
                              { 0.031250, 0, 0, 0},
                              { 0.531250, 0, 0, 0},
                              { 0.156250, 0, 0, 0},
                              { 0.656250, 0, 0, 0},
                              { 0.812500, 0, 0, 0},
                              { 0.312500, 0, 0, 0},
                              { 0.937500, 0, 0, 0},
                              { 0.437500, 0, 0, 0},
                              { 0.781250, 0, 0, 0},
                              { 0.281250, 0, 0, 0},
                              { 0.906250, 0, 0, 0},
                              { 0.406250, 0, 0, 0},
                              { 0.250000, 0, 0, 0},
                              { 0.750000, 0, 0, 0},
                              { 0.125000, 0, 0, 0},
                              { 0.625000, 0, 0, 0},
                              { 0.218750, 0, 0, 0},
                              { 0.718750, 0, 0, 0},
                              { 0.093750, 0, 0, 0},
                              { 0.593750, 0, 0, 0},
                              { 1.000000, 0, 0, 0},
                              { 0.500000, 0, 0, 0},
                              { 0.875000, 0, 0, 0},
                              { 0.375000, 0, 0, 0},
                              { 0.968750, 0, 0, 0},
                              { 0.468750, 0, 0, 0},
                              { 0.843750, 0, 0, 0},
                              { 0.343750, 0, 0, 0} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = t3.SampleBias(s3_s_s, v2.xy, 0).xyz;
  r0.w = -0.333299994 + r0.x;
  r0.w = cmp(r0.w < 0);
  if (r0.w != 0) discard;
  oMask = vCoverage.x;
  o0.xyz = cb0[22].xyz;
  r1.xyzw = float4(4,3,3.0999999,3.0999999) * v3.xyxy;
  r0.w = t5.SampleBias(s5_s_s, r1.xy, 0).z;
  r0.w = r0.w * 2 + -1;
  r0.w = 0.0199999996 * r0.w;
  r1.x = dot(-v4.xyz, -v4.xyz);
  r1.x = rsqrt(r1.x);
  r2.xyz = -v4.xyz * r1.xxx;
  r1.x = dot(v1.xyz, v1.xyz);
  r1.x = rsqrt(r1.x);
  r3.xyz = v1.xyz * r1.xxx;
  r1.x = dot(v0.xyz, v0.xyz);
  r1.x = rsqrt(r1.x);
  r4.xyz = v0.xyz * r1.xxx;
  r5.xyz = r4.yzx * r3.zxy;
  r5.xyz = r3.yzx * r4.zxy + -r5.xyz;
  r5.xyz = v1.www * r5.xyz;
  r1.xy = r5.xy * r2.yy;
  r1.xy = r2.xx * r4.xy + r1.xy;
  r1.xy = r2.zz * r3.xy + r1.xy;
  r2.xyzw = float4(5,4,2.79999995,2.5999999) * v3.xyxy;
  r2.zw = r0.ww * r1.xy + r2.zw;
  r2.xy = t4.SampleBias(s4_s_s, r2.xy, 0).xy;
  r6.xz = float2(0,0);
  r6.yw = float2(-0.550000012,-0.5) * cb1[31].xx;
  r2.zw = r6.xy + r2.zw;
  r7.xyz = t5.SampleBias(s5_s_s, r2.zw, 0).xyw;
  r0.w = r7.x * 2 + -1;
  r0.w = r7.y * 2 + r0.w;
  r0.w = -1 + r0.w;
  r8.xyzw = float4(3.20000005,3.5,2.4000001,3) * v3.xyxy;
  r2.z = t5.SampleBias(s5_s_s, r8.xy, 0).z;
  r2.z = r2.z * 2 + -1;
  r2.z = 0.0199999996 * r2.z;
  r1.zw = r2.zz * r1.xy + r1.zw;
  r1.zw = r6.zw + r1.zw;
  r6.xyz = t5.SampleBias(s5_s_s, r1.zw, 0).xyw;
  r1.z = r6.x * 2 + -1;
  r1.z = r6.y * 2 + r1.z;
  r0.w = r1.z + r0.w;
  r0.w = -1 + r0.w;
  r9.xyzw = float4(3.79999995,3.79999995,4,4) * v3.xyxy;
  r1.z = t5.SampleBias(s5_s_s, r9.xy, 0).z;
  r9.xyzw = t6.SampleBias(s6_s_s, r9.zw, 0).xyzw;
  r1.z = r1.z * 2 + -1;
  r1.z = 0.0299999993 * r1.z;
  r1.xy = r1.zz * r1.xy + r8.zw;
  r6.x = 0;
  r6.y = -0.600000024 * cb1[31].x;
  r1.xy = r6.xy + r1.xy;
  r1.xyz = t5.SampleBias(s5_s_s, r1.xy, 0).xyw;
  r1.x = r1.x * 2 + -1;
  r1.x = r1.y * 2 + r1.x;
  r1.y = r6.z + r1.z;
  r1.y = r7.z + r1.y;
  r0.w = r1.x + r0.w;
  r0.w = -1 + r0.w;
  r0.w = cb0[24].z * r0.w;
  r1.xzw = float3(0,0,-1) + -cb0[23].xyz;
  r1.xzw = cb0[27].www * r1.xzw + cb0[23].xyz;
  r6.xyz = t0.SampleBias(s0_s_s, v2.xy, 0).xyz;
  r6.xyz = r6.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r7.xyzw = float4(6,6,4,4) * v2.xyxy;
  r8.xyz = t1.SampleBias(s1_s_s, r7.xy, 0).xyz;
  r10.xy = r8.xy * float2(2,2) + float2(-1,-1);
  r2.z = dot(r10.xy, r10.xy);
  r2.z = 1 + -r2.z;
  r10.z = sqrt(abs(r2.z));
  r8.xyw = r10.xyz + -r6.xyz;
  r11.xyz = t2.SampleBias(s2_s_s, v2.xy, 0).xyz;
  r2.z = -0.449999988 + r11.y;
  r2.z = saturate(6.66666508 * r2.z);
  r2.w = r2.z * r2.z;
  r2.z = -r2.z * 2 + 3;
  r2.z = r2.w * r2.z;
  r2.w = 0.400000006 * r11.y;
  r3.w = r0.y * -r2.w + r2.w;
  r7.zw = t2.SampleBias(s2_s_s, r7.zw, 0).yz;
  r7.xy = t2.SampleBias(s2_s_s, r7.xy, 0).yz;
  r3.w = r7.z * 0.850000024 + r3.w;
  r3.w = r7.w + r3.w;
  r2.z = saturate(r3.w * r2.z);
  r2.z = cb0[27].x * r2.z;
  r6.xyz = r2.zzz * r8.xyw + r6.xyz;
  r8.xyw = r10.xyz + -r6.xyz;
  r3.w = dot(cb0[27].yz, v5.yz);
  r10.xyzw = float4(3,3,10,10) * v2.xyxy;
  r12.xyz = t2.SampleBias(s2_s_s, r10.xy, 0).xyz;
  r4.w = t2.SampleBias(s2_s_s, r10.zw, 0).z;
  r3.w = r12.x * r3.w;
  r3.w = saturate(r3.w * r12.y);
  r6.xyz = r3.www * r8.xyw + r6.xyz;
  r8.xyw = float3(1,1,1) + -r6.xyz;
  r10.y = dot(r5.xyz, r8.xyw);
  r10.x = dot(r4.xyz, r8.xyw);
  r10.z = dot(r3.xyz, r8.xyw);
  r1.x = saturate(dot(r10.xyz, r1.xzw));
  r0.w = r1.x * r0.w;
  r1.z = r2.y + -r2.x;
  r1.w = cb0[27].w + cb0[23].w;
  r1.z = r1.w * r1.z + r2.x;
  r1.yz = r1.yz + r1.yw;
  r2.x = cmp(r1.w >= 0.00100000005);
  r1.z = r2.x ? r1.z : r1.w;
  r1.z = max(0, r1.z);
  r1.z = min(0.699999988, r1.z);
  r6.xyz = r1.zzz * r0.www + r6.xyz;
  r0.w = dot(r6.xyz, r6.xyz);
  r0.w = sqrt(r0.w);
  r6.xyz = r6.xyz / r0.www;
  r6.w = -1;
  r8.xyw = r9.xyz * float3(2,2,2) + r6.xyw;
  r9.z = r8.w * r6.z;
  r9.xy = float2(-1,-1) + r8.xy;
  r8.xyw = r9.xyz + -r6.xyz;
  r8.xyw = r1.www * r8.xyw + r6.xyz;
  r0.w = dot(r8.xyw, r8.xyw);
  r0.w = sqrt(r0.w);
  r8.xyw = r8.xyw / r0.www;
  r8.xyw = r8.xyw + -r6.xyz;
  r6.xyz = cb0[24].www * r8.xyw + r6.xyz;
  r0.w = dot(r6.xyz, r6.xyz);
  r0.w = rsqrt(r0.w);
  r6.xyz = r6.xyz * r0.www;
  r4.x = dot(r4.xyz, r6.xyz);
  r4.y = dot(r5.xyz, r6.xyz);
  r4.z = dot(r3.xyz, r6.xyz);
  o1.xyz = r4.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  r3.xyz = t8.SampleBias(s8_s_s, v2.xy, 0).xyz;
  r3.xyz = cb0[28].www * r3.xyz;
  r0.w = r7.z * 0.850000024 + r2.w;
  r0.w = saturate(r7.w + r0.w);
  r2.x = r7.y * r7.w;
  r2.y = cb0[29].x * r0.w;
  r4.xyz = t7.SampleBias(s7_s_s, v2.xy, 0).xyz;
  r2.y = r4.z * r2.y;
  r5.xyz = r2.xxx * float3(0.0505620018,0.00906900037,0.00596500002) + -r3.xyz;
  r3.xyz = r2.yyy * r5.xyz + r3.xyz;
  r5.xyz = r2.xxx * float3(0.438201994,0.398404986,0.290493995) + -r3.xyz;
  r3.xyz = r2.zzz * r5.xyz + r3.xyz;
  r2.w = saturate(r7.x);
  r5.xyz = r2.www * float3(0.263175011,0.172043994,0.108710997) + -r3.xyz;
  r2.w = cmp(cb0[29].y >= 0);
  r4.z = max(9.99999997e-07, r4.y);
  r4.z = log2(r4.z);
  r4.z = 15 * r4.z;
  r4.z = exp2(r4.z);
  r2.w = r2.w ? r4.z : 0;
  r4.z = dot(cb0[29].yy, v5.yz);
  r2.w = r4.z * 0.333000004 + r2.w;
  r2.w = saturate(r4.y * r2.w);
  r3.xyz = r2.www * r5.xyz + r3.xyz;
  r5.xyz = r12.xxx * float3(0.0991659984,0.0538920015,0.0276810005) + -r3.xyz;
  r3.xyz = r3.www * r5.xyz + r3.xyz;
  r5.xyz = float3(1,1,1) + -r3.xyz;
  r4.y = r7.y * r3.w;
  r6.xyz = float3(0.370786995,0.235611007,0.122653998) * r4.yyy;
  r3.xyz = r6.xyz * r5.xyz + r3.xyz;
  r5.xyz = r11.xxx * r3.xyz;
  r6.xyz = float3(0.200000003,0.200000003,0.200000003) * r5.xyz;
  r5.xyz = -r5.xyz * float3(0.200000003,0.200000003,0.200000003) + float3(0.595506012,0.544914007,0.371354997);
  r5.xyz = r8.zzz * r5.xyz + r6.xyz;
  r6.xyz = float3(0.182313994,0.166730002,0.113427997) + -r5.xyz;
  r5.xyz = r11.zzz * r6.xyz + r5.xyz;
  r5.xyz = r5.xyz + -r3.xyz;
  r4.y = dot(cb0[29].zw, v5.yz);
  r4.y = r4.y * r7.x;
  r4.z = r4.y * r7.x + -r4.y;
  r0.x = cb0[30].x * r0.x;
  r0.x = r0.x * r4.z + r4.y;
  r4.y = -0.5 + r0.x;
  r0.x = saturate(r0.x);
  r4.y = saturate(r4.y + r4.y);
  r4.z = r4.y * r4.y;
  r4.y = -r4.y * 2 + 3;
  r4.y = saturate(r4.z * r4.y + -0.25);
  r3.xyz = r4.yyy * r5.xyz + r3.xyz;
  r5.xyz = r2.xxx * float3(0.0505620018,0.00906900037,0.00596500002) + -r3.xyz;
  r2.x = 1 + -r4.x;
  r4.y = r2.x + -r4.x;
  r2.x = cb0[28].z * r2.x;
  r4.x = cb0[30].y * r4.y + r4.x;
  r4.y = cb0[30].y + -cb0[30].z;
  r4.y = cb0[30].y * r4.y + cb0[30].z;
  r0.w = r4.y * r0.w;
  r0.w = r4.x * r0.w;
  r3.xyz = r0.www * r5.xyz + r3.xyz;
  r4.x = 1.25 + -r1.z;
  r4.xyz = r4.xxx * r3.xyz + -r3.xyz;
  r3.xyz = cb0[24].xxx * r4.xyz + r3.xyz;
  r4.xyz = cb1[1].xyw * v4.yyy;
  r4.xyz = cb1[0].xyw * v4.xxx + r4.xyz;
  r4.xyz = cb1[2].xyw * v4.zzz + r4.xyz;
  r4.xyz = cb1[3].xyw * v4.www + r4.xyz;
  r4.xy = r4.xy / r4.zz;
  r4.xy = r4.xy * cb1[19].xy + cb1[19].wz;
  r4.xy = cb1[22].xy * r4.xy;
  r4.xy = floor(r4.xy);
  r4.xy = (uint2)r4.xy;
  bitmask.x = ((~(-1 << 3)) << 3) & 0xffffffff;  r4.x = (((uint)r4.x << 3) & bitmask.x) | ((uint)0 & ~bitmask.x);
  bitmask.x = ((~(-1 << 3)) << 0) & 0xffffffff;  r4.x = (((uint)r4.y << 0) & bitmask.x) | ((uint)r4.x & ~bitmask.x);
  r4.x = icb[r4.x+0].x * 0.00393699994;
  r5.xyz = float3(1,1,1) + -cb0[22].xyz;
  o2.xyz = r3.xyz * r5.xyz + r4.xxx;
  r3.x = asint(cb0[37].y);
  o2.w = 0.00392200006 * r3.x;
  r3.x = 1 + -r12.x;
  r3.x = r3.x * r0.y + -r0.y;
  r0.y = cb0[28].y * r3.x + r0.y;
  r0.z = cb0[31].x * r0.z;
  r0.z = cb0[28].w * r0.z;
  r0.z = r2.y * -r0.z + r0.z;
  r2.y = 0.980000019 + -r0.y;
  r0.y = r2.w * r2.y + r0.y;
  r2.y = r12.z * 0.100000001 + -r0.y;
  r0.y = r3.w * r2.y + r0.y;
  r2.y = r7.y * 0.0500000007 + -r0.y;
  r0.x = r0.x * r2.y + r0.y;
  r0.x = 1 + -r0.x;
  r3.xy = v3.xy * float2(0.25,0.25) + cb0[26].xy;
  r0.y = t9.SampleBias(s9_s_s, r3.xy, 0).w;
  r0.y = r0.y * 0.150000006 + r1.y;
  r1.y = r1.w * r9.w;
  r2.y = cb0[24].w * -r9.w;
  r1.w = r1.w * r2.y + 1;
  r1.y = cb0[24].w * r1.y;
  r0.y = r1.y * 0.400000006 + r0.y;
  r0.y = r0.y * r1.x;
  r1.x = cb0[24].z * r0.y + cb0[31].y;
  r0.y = cb0[24].z * r0.y + r0.x;
  r0.x = r1.z * r1.x + r0.x;
  r0.x = saturate(1 + -r0.x);
  r0.y = 1 + -r0.y;
  r0.x = r0.x + -r0.y;
  r0.x = cb0[24].y * r0.x + r0.y;
  r0.x = min(r0.x, r1.w);
  o3.y = max(0, r0.x);
  r0.x = max(9.99999997e-07, r12.x);
  r0.y = r0.x * r0.x;
  r0.x = r0.x * r0.y;
  r0.x = r0.x * r12.x;
  r0.x = r0.x * 0.280124009 + r4.w;
  r0.x = r0.x + -r0.z;
  r0.x = cb0[28].y * r0.x + r0.z;
  r0.yz = float2(10,5) * v2.xy;
  r0.y = t2.SampleBias(s2_s_s, r0.yz, 0).z;
  r0.y = r0.y * r0.x + -r0.x;
  r0.x = r2.x * r0.y + r0.x;
  r0.x = r2.z * -r0.x + r0.x;
  r0.x = r2.w * -r0.x + r0.x;
  r0.y = r12.z * 0.200000003 + -r0.x;
  r0.x = r3.w * r0.y + r0.x;
  r0.x = r0.w * -r0.x + r0.x;
  r0.y = 0.0500000007 + -r0.x;
  r0.x = r1.z * r0.y + r0.x;
  o3.x = cb0[30].w * r0.x;
  o3.zw = float2(0,0);
  r0.xy = v6.xy / v6.zz;
  r0.zw = v7.xy / v7.zz;
  r0.xy = r0.xy + -r0.zw;
  o4.xy = float2(-0.5,0.5) * r0.xy;
  r0.xyz = v9.xyz + -v8.xyz;
  r0.x = dot(r0.xyz, r0.xyz);
  o5.x = sqrt(r0.x);
  return;
}
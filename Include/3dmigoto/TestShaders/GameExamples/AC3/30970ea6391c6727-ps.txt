//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 g_FogColor;                 // Offset:  256 Size:    16 [unused]
//   float4 g_FogParams;                // Offset:  272 Size:    16 [unused]
//   float4 g_FogWeatherParams;         // Offset: 1440 Size:    16 [unused]
//   float4 g_FogSunBackColor;          // Offset:  496 Size:    16 [unused]
//   float3x3 Operator374_1_matrix;     // Offset: 2048 Size:    44
//   float3x3 Operator485_2_matrix;     // Offset: 2096 Size:    44
//   float3x3 Operator328_3_matrix;     // Offset: 2144 Size:    44
//   float3x3 Operator329_4_matrix;     // Offset: 2192 Size:    44
//   
//   struct
//   {
//       
//       float4 m_PositionFar;          // Offset:  512
//       float4 m_ColorFade;            // Offset:  528
//
//   } g_OmniLights[4];                 // Offset:  512 Size:   128
//   
//   struct
//   {
//       
//       float3 m_Direction;            // Offset:  640
//       float4 m_Color;                // Offset:  656
//
//   } g_DirectLights[2];               // Offset:  640 Size:    64
//   
//   struct
//   {
//       
//       float4 m_PositionFar;          // Offset:  704
//       float4 m_ColorFade;            // Offset:  720
//       float3 m_Direction;            // Offset:  736
//       float4 m_ConeAngles;           // Offset:  752
//
//   } g_SpotLights[2];                 // Offset:  704 Size:   128 [unused]
//   
//   struct
//   {
//       
//       float3 m_Direction;            // Offset:  832
//       float4 m_Color;                // Offset:  848
//       float3 m_SpecularDirection;    // Offset:  864
//
//   } g_ShadowedDirect;                // Offset:  832 Size:    44 [unused]
//   float4 g_ProjWorldToLight[8];      // Offset:  880 Size:   128 [unused]
//   float4 g_ProjShadowParams[2];      // Offset: 1904 Size:    32 [unused]
//   float g_HasSunDX11;                // Offset: 4016 Size:     4 [unused]
//   float4 g_LayeredSkyUserColor3;     // Offset:   48 Size:    16
//   float g_AlphaTestValue;            // Offset: 1808 Size:     4 [unused]
//   float4 g_TileOffset;               // Offset: 1536 Size:    16 [unused]
//   float4 g_UnusedPredicated1;        // Offset: 1552 Size:    16 [unused]
//   float4 g_UnusedPredicated2;        // Offset: 1568 Size:    16 [unused]
//   float4 g_UnusedPredicated3;        // Offset: 1584 Size:    16 [unused]
//   float4 g_VPosToUV;                 // Offset:    0 Size:    16
//   float4 g_ReverseProjectionParams;  // Offset: 1600 Size:    16 [unused]
//   float2 g_ReverseProjectionParams2; // Offset: 1616 Size:     8 [unused]
//   float4x4 g_ViewToWorld;            // Offset: 1632 Size:    64 [unused]
//   float4x4 g_WorldToView;            // Offset: 1696 Size:    64 [unused]
//   float4 g_EyePosition;              // Offset:  192 Size:    16
//   float4 g_AmbientCube[6];           // Offset:  384 Size:    96
//   
//   struct
//   {
//       
//       float2 m_VPOS;                 // Offset: 4032
//       float2 m_ScreenPosition;       // Offset: 4040
//       float3 m_WorldNormal;          // Offset: 4048
//       float3 m_VertexWorldNormal;    // Offset: 4064
//       float3 m_TangentSpaceNormal;   // Offset: 4080
//       float3 m_WorldPosition;        // Offset: 4096
//       float3 m_WorldEyeVector;       // Offset: 4112
//       float3 m_NormalizedWorldEyeVector;// Offset: 4128
//       float4 m_UnitLightSpacePos;    // Offset: 4144
//       float3 m_LightSpaceNormal;     // Offset: 4160
//       float4 m_Albedo;               // Offset: 4176
//       float m_alpha;                 // Offset: 4192
//       float m_WeatherExposed;        // Offset: 4196
//       float m_DistanceAttenuation;   // Offset: 4200
//       float4 m_LightColor;           // Offset: 4208
//       float3 m_IncidentLightAngle;   // Offset: 4224
//       float3 m_SpecularIncidentLightAngle;// Offset: 4240
//       float m_SpecularInfluence;     // Offset: 4252
//       float m_Alpha;                 // Offset: 4256
//       float m_SpecularPower;         // Offset: 4260
//       float4 m_DiffuseColor;         // Offset: 4272
//       float m_SpecularGlossiness;    // Offset: 4288
//       float m_SpecularIntensity;     // Offset: 4292
//       float m_SpecularAlphaOpacityScaleFactor;// Offset: 4296
//       float4 m_EmissiveColor;        // Offset: 4304
//       float3 m_ShadowResult;         // Offset: 4320
//       float m_LinearDepth;           // Offset: 4332
//
//   } c;                               // Offset: 4032 Size:   304 [unused]
//   bool g_HasSunOther;                // Offset: 4336 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// WaveTexture_0                     sampler      NA          NA    0        1
// Layer0Reflection_0                sampler      NA          NA    1        1
// g_DepthSampler                    sampler      NA          NA    8        1
// WaveTexture_0                     texture  float4          2d    0        1
// Layer0Reflection_0                texture  float4        cube    1        1
// g_DepthSampler                    texture  float4          2d    8        1
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float     zw
// TEXCOORD                 1   xyzw        2     NONE   float       
// COLOR                    0   xyzw        3     NONE   float   xyzw
// COLOR                    1   xyzw        4     NONE   float    yz 
// TEXCOORD                 2   xyzw        5     NONE   float   xyzw
// TEXCOORD                 3   xyzw        6     NONE   float   xyz 
// TEXCOORD                 4   xyzw        7     NONE   float   xyz 
// TEXCOORD                 5   xyzw        8     NONE   float   xyz 
// TEXCOORD                 6   xyzw        9     NONE   float       
// SV_IsFrontFace           0   x          10    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[139], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.zw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.yz
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 10
mul r0.xy, v0.xyxx, cb0[0].xyxx
lt r0.z, v5.w, l(0.000000)
discard_nz r0.z
mov r1.xy, v5.xyxx
mov r1.z, l(1.000000)
dp3 r2.x, r1.xyzx, cb0[134].xyzx
dp3 r2.y, r1.xyzx, cb0[135].xyzx
sample r2.xyzw, r2.xyxx, t0.xyzw, s0
add r0.zw, r2.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
add r0.zw, r0.zzzw, r0.zzzw
dp3 r3.x, r1.yxzy, cb0[137].xyzx
dp3 r3.y, r1.yxzy, cb0[138].xyzx
mad r2.yz, r0.zzwz, v4.zzzz, r3.xxyx
sample r3.xyzw, r2.yzyy, t0.xyzw, s0
add r2.yz, r3.xxyx, l(0.000000, -0.500000, -0.500000, 0.000000)
mul r2.xy, r2.xxxx, r2.yzyy
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), r0.zwzz
dp3 r3.x, r1.xyzx, cb0[128].xyzx
dp3 r3.y, r1.xyzx, cb0[129].xyzx
sample r3.xyzw, r3.xyxx, t0.xyzw, s0
mul r1.w, r3.x, r3.x
mul r1.w, r1.w, v4.y
mul r2.z, r1.w, l(8.000000)
mul r2.xy, r2.zzzz, r2.xyxx
dp3 r2.z, v6.xyzx, v6.xyzx
rsq r2.z, r2.z
mul r3.xyz, r2.zzzz, v6.xyzx
dp3 r2.z, v7.xyzx, v7.xyzx
rsq r2.z, r2.z
mul r4.xyz, r2.zzzz, v7.xyzx
dp3 r2.z, v8.xyzx, v8.xyzx
rsq r2.z, r2.z
mul r5.xyz, r2.zzzz, v8.xyzx
mul r2.yzw, r2.yyyy, r4.xxyz
mad r2.xyz, r2.xxxx, r3.xyzx, r2.yzwy
mad r2.xyz, r5.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r2.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
add r3.xyz, -v5.xyzx, cb0[12].xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
dp3 r4.x, r1.xyzx, cb0[131].xyzx
dp3 r4.y, r1.xyzx, cb0[132].xyzx
mad r0.zw, r0.zzzw, v4.zzzz, r4.xxxy
sample r4.xyzw, r0.zwzz, t0.xyzw, s0
sample r0.xyzw, r0.xyxx, t8.xyzw, s8
add r0.x, r0.x, -v1.w
mul_sat r0.x, r0.x, l(0.500000)
add r0.x, -r0.x, l(1.000000)
mul r0.x, r0.x, r0.x
mad r0.y, r1.w, l(8.000000), r0.x
mad r1.xyz, r4.wwww, r0.yyyy, v3.xyzx
mad r0.x, r4.w, r0.y, -r0.x
add r0.x, r0.x, l(1.100000)
mul r0.x, r0.x, v3.w
add r4.xyz, v5.xzyx, -cb0[12].xzyx
dp3 r0.z, r4.xyzx, r4.xyzx
rsq r0.z, r0.z
mul r4.xyz, r0.zzzz, r4.xyzx
dp3 r0.z, r4.xzyx, r2.xyzx
add r0.z, r0.z, r0.z
mad r4.xyz, r2.xzyx, -r0.zzzz, r4.xyzx
sample r5.xyzw, r4.xyzx, t1.xyzw, s1
mul r4.xyz, r5.xyzx, cb0[3].xyzx
mad r0.y, -r4.w, r0.y, l(1.000000)
mov r5.xyz, v5.xyzx
mov r5.w, l(0)
add r5.xyzw, -r5.xyzw, cb0[12].xyzw
dp4 r0.z, r5.xyzw, r5.xyzw
rsq r0.z, r0.z
mul r5.xyz, r0.zzzz, r5.xyzx
dp3 r0.z, r2.xyzx, r5.xyzx
add r0.z, -r0.z, l(1.000000)
mad r0.z, r0.z, r0.z, l(0.100000)
min r0.z, r0.z, l(1.000000)
mul r0.y, r0.z, r0.y
dp3_sat r0.z, r2.xyzx, cb0[40].xyzx
mul r5.xyz, r0.zzzz, cb0[41].xyzx
mad r6.xyz, r3.xyzx, r2.wwww, cb0[40].xyzx
dp3 r0.w, r6.xyzx, r6.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx
dp3_sat r0.w, r2.xyzx, r6.xyzx
log r0.w, r0.w
mul r0.w, r0.w, l(1782.887573)
exp r0.w, r0.w
mul r0.z, r0.w, r0.z
mul r0.z, r0.z, cb0[41].w
mul r0.z, r0.z, l(5.372663)
mul r6.xyz, r0.zzzz, cb0[41].xyzx
mad r5.xyz, r1.xyzx, r5.xyzx, r6.xyzx
mov r6.xyz, r5.xyzx
mov r0.w, r0.z
mov r1.w, l(0)
loop 
  ige r3.w, r1.w, l(4)
  breakc_nz r3.w
  ishl r3.w, r1.w, l(1)
  add r7.xyz, -v5.xyzx, cb0[r3.w + 32].xyzx
  dp3 r4.w, r7.xyzx, r7.xyzx
  add r5.w, -r4.w, cb0[r3.w + 32].w
  mul_sat r5.w, r5.w, |cb0[r3.w + 33].w|
  lt r6.w, l(0.000000), r5.w
  if_nz r6.w
    rsq r4.w, r4.w
    mul r7.xyz, r4.wwww, r7.xyzx
    ge r4.w, cb0[r3.w + 33].w, l(0.000000)
    and r4.w, r4.w, l(0x3f800000)
    dp3_sat r6.w, r2.xyzx, r7.xyzx
    mul r8.xyz, r6.wwww, cb0[r3.w + 33].xyzx
    mul r9.xyz, r1.xyzx, r5.wwww
    mad r7.xyz, r3.xyzx, r2.wwww, r7.xyzx
    dp3 r7.w, r7.xyzx, r7.xyzx
    rsq r7.w, r7.w
    mul r7.xyz, r7.wwww, r7.xyzx
    dp3_sat r7.x, r2.xyzx, r7.xyzx
    log r7.x, r7.x
    mul r7.x, r7.x, l(1782.887573)
    exp r7.x, r7.x
    mul r6.w, r6.w, r7.x
    mul r4.w, r4.w, r6.w
    mul r4.w, r5.w, r4.w
    mul r5.w, r4.w, l(5.372663)
    mad r0.w, r4.w, l(5.372663), r0.w
    mul r7.xyz, r5.wwww, cb0[r3.w + 33].xyzx
    mad r7.xyz, r9.xyzx, r8.xyzx, r7.xyzx
    add r6.xyz, r6.xyzx, r7.xyzx
  endif 
  iadd r1.w, r1.w, l(1)
endloop 
mul r3.xyz, r2.xyzx, r2.xyzx
ge r5.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
ge r2.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
and r2.xyz, r2.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r7.xyzw, r3.xxxx, cb0[24].xyzw
mul r8.xyzw, r3.xxxx, cb0[25].xyzw
mul r8.xyzw, r2.xxxx, r8.xyzw
mad r7.xyzw, r7.xyzw, r5.xxxx, r8.xyzw
mul r8.xyzw, r3.yyyy, cb0[26].xyzw
mad r7.xyzw, r8.xyzw, r5.yyyy, r7.xyzw
mul r8.xyzw, r3.yyyy, cb0[27].xyzw
mad r7.xyzw, r8.xyzw, r2.yyyy, r7.xyzw
mul r8.xyzw, r3.zzzz, cb0[28].xyzw
mad r5.xyzw, r8.xyzw, r5.zzzz, r7.xyzw
mul r3.xyzw, r3.zzzz, cb0[29].xyzw
mad r2.xyzw, r3.xyzw, r2.zzzz, r5.xyzw
mul r2.xyz, r2.wwww, r2.xyzx
mad r1.xyz, r2.xyzx, r1.xyzx, r6.xyzx
mad o0.xyz, r4.xyzx, r0.yyyy, r1.xyzx
mad o0.w, r0.w, l(0.125000), r0.x
div o1.xyz, v1.zzzz, v1.wwww
mov o1.w, r0.x
ret 
// Approximately 155 instruction slots used
 
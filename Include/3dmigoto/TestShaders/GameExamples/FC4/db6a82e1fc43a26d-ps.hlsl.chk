// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:40:09 2019

cbuffer CPostFxHDRBloomEffectsParameterProvider : register(b0)
{
  float4 _BloomSmoothingParams : packoffset(c0);
  float4 _BokehParams : packoffset(c1);
  float4 _ColorAdjustment : packoffset(c2);
  float4 _ColorBurnColorNormalized : packoffset(c3);
  float4 _ColorBurnParameters : packoffset(c4);
  float4 _ColorMaskAlphaOffset : packoffset(c5);
  float4 _ColorMaskColor : packoffset(c6);
  float4 _ColorMaskUVScaleBias : packoffset(c7);
  float4 _ColorSeparationOpacity : packoffset(c8);
  float4 _ColorSeparationUVScaleBias0 : packoffset(c9);
  float4 _ColorSeparationUVScaleBias1 : packoffset(c10);
  float4 _ColorSeparationUVScaleBias2 : packoffset(c11);
  float4 _CombineSettings : packoffset(c12);
  float4 _DistortionSharpnessAndFactor : packoffset(c13);
  float4 _FocusDistances : packoffset(c14);
  float4 _LoResTextureSize : packoffset(c15);
  float4 _LuminanceParams : packoffset(c16);
  float4 _OverlayColor : packoffset(c17);
  float4 _SourceDistortionTextureScaleBias : packoffset(c18);
  float4 _VignetteNoiseParams : packoffset(c19);
  float2 _ExposureZoom : packoffset(c20);
  float3 _ColorBurnColor : packoffset(c21);
  float _FocusPlane : packoffset(c21.w);
}

SamplerState PointTextureSampler_s_s : register(s0);
SamplerState LinearTextureSampler_s_s : register(s1);
Texture2D<float4> ColorSampler : register(t0);
Texture2D<float4> ColorAndMaskTexture : register(t1);
Texture2D<float4> CombinedBloomTexture : register(t2);
Texture2D<float> LinearDepthSampler : register(t3);
Texture2D<float4> BlurredSceneSampler : register(t4);
Texture3D<float4> ColorRemap0VolumeSampler : register(t5);
Texture2D<float4> DistortionTexture : register(t6);


// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  uint v2 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = DistortionTexture.SampleLevel(LinearTextureSampler_s_s, v1.xy, 0).xyz;
  r0.x = 6.28319979 * r0.x;
  sincos(r0.x, r0.x, r1.x);
  r1.y = r0.x;
  r2.xyzw = r1.xxyy * r0.zzzz + v1.xxyy;
  r0.xz = r1.xy * r0.zz;
  r1.xy = float2(10,10) * r2.xz;
  r1.zw = r2.yw * float2(-10,-10) + float2(10,10);
  r1.xy = saturate(min(r1.xy, r1.zw));
  r1.zw = r0.xz * r1.xy + v1.xy;
  r0.xz = r1.xy * r0.xz;
  r0.w = DistortionTexture.SampleLevel(LinearTextureSampler_s_s, r1.zw, 0).w;
  r0.xz = r0.xz * r0.ww + v1.xy;
  r1.xyz = ColorSampler.SampleLevel(PointTextureSampler_s_s, r0.xz, 0).xyz;
  r2.xyz = BlurredSceneSampler.SampleLevel(LinearTextureSampler_s_s, r0.xz, 0).xyz;
  r3.xyzw = ColorAndMaskTexture.SampleLevel(LinearTextureSampler_s_s, r0.xz, 0).xyzw;
  r0.xzw = r2.xyz + -r1.xyz;
  r0.xyz = r0.yyy * r0.xzw + r1.xyz;
  r1.xyz = r2.xyz + -r0.xyz;
  r0.xyz = -_DistortionSharpnessAndFactor.xxx * r1.xyz + r0.xyz;
  r1.xyz = r3.xyz + -r0.xyz;
  r0.w = LinearDepthSampler.SampleLevel(PointTextureSampler_s_s, v1.xy, 0).x;
  r2.xy = r0.ww * _FocusDistances.xz + _FocusDistances.yw;
  r0.w = cmp(r0.w < _FocusPlane);
  r0.w = r0.w ? r2.x : r2.y;
  r0.w = min(1, abs(r0.w));
  r0.w = r0.w * r0.w;
  r0.w = saturate(r0.w * _BokehParams.z + -0.5);
  r0.w = max(r0.w, r3.w);
  r0.w = min(1, r0.w);
  r0.xyz = r0.www * r1.xyz + r0.xyz;
  r1.xyz = CombinedBloomTexture.SampleLevel(LinearTextureSampler_s_s, v1.xy, 0).xyz;
  r0.xyz = r1.xyz + r0.xyz;
  r1.xy = float2(-0.5,-0.5) + v1.xy;
  r0.w = dot(r1.xy, r1.xy);
  r0.w = 1 + -r0.w;
  r0.w = max(0, r0.w);
  r0.w = log2(r0.w);
  r0.w = _VignetteNoiseParams.x * r0.w;
  r0.w = exp2(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r1.xyz = r0.xyz * float3(9.77999973,9.77999973,9.77999973) + float3(4.80000019,4.80000019,4.80000019);
  r1.xyz = r1.xyz * r0.xyz + float3(1.5,1.5,1.5);
  r1.xyz = float3(1,1,1) / r1.xyz;
  r2.xyz = r0.xyz * float3(10,10,10) + float3(1.29999995,1.29999995,1.29999995);
  r0.xyz = r2.xyz * r0.xyz;
  r0.xyz = saturate(r0.xyz * r1.xyz);
  r1.w = dot(float3(0.298900008,0.587000012,0.114), r0.xyz);
  r0.xyz = -r1.www + r0.xyz;
  r0.xyz = _OverlayColor.www * r0.xyz + r1.www;
  r2.xyz = log2(abs(r0.xyz));
  r2.xyz = float3(0.416667014,0.416667014,0.416667014) * r2.xyz;
  r2.xyz = exp2(r2.xyz);
  r2.xyz = r2.xyz * float3(1.05499995,1.05499995,1.05499995) + float3(-0.0549999997,-0.0549999997,-0.0549999997);
  r3.xyz = cmp(float3(0.00313100009,0.00313100009,0.00313100009) >= r0.xyz);
  r0.xyz = float3(12.9200001,12.9200001,12.9200001) * r0.xyz;
  r0.xyz = r3.xyz ? r0.xyz : r2.xyz;
  r0.xyz = r0.xyz * float3(0.96875,0.96875,0.96875) + float3(0.015625,0.015625,0.015625);
  r0.xyz = ColorRemap0VolumeSampler.SampleLevel(LinearTextureSampler_s_s, r0.xyz, 0).xyz;
  r2.xyz = float3(1,1,1) + -r0.xyz;
  r2.xyz = r2.xyz + r2.xyz;
  r3.xyz = float3(1,1,1) + -_OverlayColor.xyz;
  r2.xyz = -r2.xyz * r3.xyz + float3(1,1,1);
  r3.xyz = _OverlayColor.xyz * r0.xyz;
  r0.xyz = cmp(r0.xyz >= float3(0.5,0.5,0.5));
  r0.xyz = r0.xyz ? float3(1,1,1) : 0;
  r2.xyz = -r3.xyz * float3(2,2,2) + r2.xyz;
  r3.xyz = r3.xyz + r3.xyz;
  r0.xyz = r0.xyz * r2.xyz + r3.xyz;
  r0.xyz = log2(abs(r0.xyz));
  r0.xyz = _ColorAdjustment.zzz * r0.xyz;
  r0.xyz = exp2(r0.xyz);
  r0.xyz = saturate(r0.xyz * _ColorAdjustment.yyy + _ColorAdjustment.xxx);
  r2.xy = floor(v0.xy);
  r2.xy = (uint2)r2.xy;
  r0.w = mad((int)r2.x, 0x0019660d, (int)r2.y);
  r2.x = (uint)_VignetteNoiseParams.z;
  r0.w = (int)r0.w + (int)r2.x;
  r2.x = (int)r0.w ^ 61;
  r0.w = (uint)r0.w >> 16;
  r0.w = (int)r0.w ^ (int)r2.x;
  r0.w = (int)r0.w * 9;
  r2.x = (uint)r0.w >> 4;
  r0.w = (int)r0.w ^ (int)r2.x;
  r0.w = (int)r0.w * 0x27d4eb2d;
  r2.x = (uint)r0.w >> 15;
  r0.w = (int)r0.w ^ (int)r2.x;
  r0.w = (uint)r0.w;
  r0.w = r0.w * 0 + -1;
  r1.xyz = r0.www * _VignetteNoiseParams.yyy + r0.xyz;
  o0.xyzw = r1.xyzw;
  o1.x = dot(r1.xyz, float3(0.212599993,0.715200007,0.0722000003));
  o1.yzw = float3(0,0,0);
  return;
}
// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:40:00 2019
cbuffer cb1 : register(b1)
{
  float4 cb1[1];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[2];
}




// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : CUSTOM0,
  float4 v1 : CUSTOM1,
  float4 v2 : CUSTOM2,
  float2 v3 : CUSTOM3,
  float2 v4 : CUSTOM4,
  float2 v5 : CUSTOM5,
  float2 v6 : CUSTOM6,
  out float4 o0 : IO0_unClippedPos0,
  out float4 o1 : IO1_edgeuv0,
  out float o2 : IO2_UI_UserBig0,
  out float p2 : IO4_UI_UserSmall0,
  out float p2 : IO6_UI_RenderType0,
  out float4 o3 : IO3_Gfx_ClipPosition0,
  out float2 o4 : IO5_Gfx_UV0,
  out float4 o5 : IO7_Gfx_Color0,
  out float4 o6 : SV_Position0)
{
// Needs manual fix for instruction:
// unknown dcl_: dcl_resource_raw t0
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = float2(255,255) * v2.zw;
  r0.xy = (int2)r0.xy;
  r1.x = (uint)r0.x << 6;
// No code for instruction (needs manual fix):
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r1.xyzw, r1.x, t0.xyzw
  bitmask.x = ((~(-1 << 26)) << 6) & 0xffffffff;  r2.x = (((uint)r0.x << 6) & bitmask.x) | ((uint)16 & ~bitmask.x);
  bitmask.y = ((~(-1 << 26)) << 6) & 0xffffffff;  r2.y = (((uint)r0.x << 6) & bitmask.y) | ((uint)32 & ~bitmask.y);
  bitmask.z = ((~(-1 << 26)) << 6) & 0xffffffff;  r2.z = (((uint)r0.x << 6) & bitmask.z) | ((uint)48 & ~bitmask.z);
// No code for instruction (needs manual fix):
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r3.xyzw, r2.x, t0.xyzw
  r3.xyzw = v0.yyyy * r3.xyzw;
  r1.xyzw = r1.xyzw * v0.xxxx + r3.xyzw;
// No code for instruction (needs manual fix):
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r3.xyzw, r2.y, t0.xyzw
// No code for instruction (needs manual fix):
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r2.xyzw, r2.z, t0.xyzw
  r1.xyzw = r3.xyzw * v0.zzzz + r1.xyzw;
  r1.xyzw = r1.xyzw + r2.xyzw;
  o0.xyzw = r1.xyzw;
  r0.x = -1 + r1.w;
  r0.x = cb1[0].z * r0.x + 1;
  o1.xy = v6.xy * r0.xx;
  o1.z = r0.x;
  r0.z = v0.w;
  r0.w = v2.y;
  o2.xyz = r0.zwy;
  r0.xyzw = cb0[0].xyzw * r1.xyww;
  r0.xy = r0.xy + r0.zw;
  r0.zw = cb0[1].xy * cb0[0].xy;
  r0.xy = r0.zw * r1.ww + r0.xy;
  r1.xy = float2(1,-1) * r0.xy;
  o3.xyzw = r1.xyzw;
  o6.xyzw = r1.xyzw;
  o4.xy = v3.xy;
  o5.xyzw = v1.xyzw;
  return;
}
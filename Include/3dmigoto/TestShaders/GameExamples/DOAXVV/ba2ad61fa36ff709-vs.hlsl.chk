// ---- Created with 3Dmigoto v1.3.16 on Thu Aug 31 07:32:00 2023

cbuffer bool_register_block : register(b1)
{
  bool gUseMultiUV : packoffset(c0);
  bool gPointLightEnable0 : packoffset(c0.y);
  bool gPointLightEnable1 : packoffset(c0.z);
  bool gPointLightEnable2 : packoffset(c0.w);
  bool gPointLightEnable3 : packoffset(c1);
  bool gEnvMappingEnable : packoffset(c1.y);
  bool gShadowEnable : packoffset(c1.z);
  bool gLightScatterEnable : packoffset(c1.w);
  bool gFogEnable : packoffset(c2);
  bool gVertexBlendEnable2 : packoffset(c2.z);
  bool gVertexBlendEnable3 : packoffset(c2.w);
  bool gVertexBlendEnable4 : packoffset(c3);
  bool gUseInputVertexColor : packoffset(c3.y);
  int2 bool_register_block_padding : packoffset(c3.z);
}

cbuffer model_high_frequency_block : register(b7)
{
  row_major float4x4 gStaticTransformMatrix : packoffset(c0);
  float4 gUVOffset0 : packoffset(c4);
  float4 gUVOffset1 : packoffset(c5);
  float4 gUVOffset2 : packoffset(c6);
  float4 gShadowVector : packoffset(c7);
  float4 gShadowOffset : packoffset(c8);
}

cbuffer model_low_frequency_block : register(b9)
{
  row_major float4x4 gViewProjection : packoffset(c0);
  float4 gEyePosition : packoffset(c4);
  row_major float4x4 gViewMatrix : packoffset(c5);
  row_major float4x4 gShadowMatrix : packoffset(c9);
  float4 gClipPlane0 : packoffset(c13);
  float4 gFogMiddle : packoffset(c14);
  float4 gFogFarMiddle : packoffset(c15);
  float4 gFogDistance : packoffset(c16);
  float4 gFogDensity : packoffset(c17);
  float4 gHeightFogMiddle : packoffset(c18);
  float4 gHeightFogFarMiddle : packoffset(c19);
  float4 gHeightFogDistance : packoffset(c20);
  float4 gHeightFogDensity : packoffset(c21);
  row_major float4x4 gSecondShadowMatrix : packoffset(c22);
}

cbuffer skinning_matrix_block : register(b2)
{
  row_major float3x4 gSkinningMatrices[256] : packoffset(c0);
}



// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  float4 v4 : TEXCOORD2,
  float3 v5 : NORMAL0,
  float4 v6 : TANGENT0,
  float4 v7 : BLENDWEIGHT0,
  float4 v8 : BLENDWEIGHT1,
  float4 v9 : BLENDWEIGHT2,
  uint4 v10 : BLENDINDICES0,
  uint4 v11 : BLENDINDICES1,
  uint4 v12 : BLENDINDICES2,
  out float4 o0 : SV_Position0,
  out float4 o1 : COLOR1,
  out float3 o2 : COLOR0,
  out float4 o3 : TEXCOORD0,
  out float4 o4 : TEXCOORD1,
  out float4 o5 : TEXCOORD2,
  out float4 o6 : TEXCOORD3,
  out float4 o7 : TEXCOORD4,
  out float4 o8 : TEXCOORD5)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10;
  uint4 bitmask, uiDest;
  float4 fDest;

  if (gVertexBlendEnable2 != 0) {
    r0.x = (int)v10.x * 3;
    r0.yzw = gSkinningMatrices[v10.x]._m00_m01_m02 * v7.xxx;
    r1.x = 0;
    r1.yzw = gSkinningMatrices[v10.x]._m10_m11_m12 * v7.xxx;
    r2.xyz = gSkinningMatrices[v10.x]._m20_m21_m22 * v7.xxx;
    r3.w = 0;
    r4.xyz = r0.yzw;
    r5.xyz = r1.yzw;
    r6.xyz = r2.xyz;
    r7.xyz = r1.xxx;
    r8.x = 1;
    while (true) {
      r2.w = cmp((int)r8.x >= 4);
      if (r2.w != 0) break;
      r8.xyz = (int3)r8.xxx + int3(1,-1,-4);
      r2.w = -(int)r8.y;
      r9.xy = cmp((uint2)r8.yy < int2(1,2));
      r9.z = r9.y ? r2.w : 0;
      r9.w = r9.y ? 0 : r8.z;
      r3.xyz = r9.xzw ? v10.yzw : 0;
      r3.xy = (int2)r3.yw | (int2)r3.xz;
      r2.w = (int)r3.y | (int)r3.x;
      r2.w = (int)r2.w * 3;
      r3.x = gSkinningMatrices[r2.w/3]._m03 + -gSkinningMatrices[v10.x]._m03;
      r3.y = gSkinningMatrices[r2.w/3]._m13 + -gSkinningMatrices[v10.x]._m13;
      r3.z = gSkinningMatrices[r2.w/3]._m23 + -gSkinningMatrices[v10.x]._m23;
      r4.w = dot(v7.yzw, icb[r8.y+0].xyz);
      r4.xyz = gSkinningMatrices[r2.w/3]._m00_m01_m02 * r4.www + r4.xyz;
      r5.xyz = gSkinningMatrices[r2.w/3]._m10_m11_m12 * r4.www + r5.xyz;
      r6.xyz = gSkinningMatrices[r2.w/3]._m20_m21_m22 * r4.www + r6.xyz;
      r7.xyz = r3.xyz * r4.www + r7.xyz;
    }
    r0.y = cmp(0 < v8.x);
    if (r0.y != 0) {
      r0.yzw = r4.xyz;
      r1.xyz = r5.xyz;
      r2.xyz = r6.xyz;
      r3.xyz = r7.xyz;
      r1.w = 0;
      while (true) {
        r2.w = cmp((int)r1.w >= 4);
        if (r2.w != 0) break;
        r2.w = -(int)r1.w;
        r8.xyz = cmp((uint3)r1.www < int3(1,2,3));
        r9.y = r8.y ? r2.w : 0;
        r10.xy = (int2)r1.ww + int2(-3,1);
        r9.z = r8.y ? 0 : r10.x;
        r9.w = cmp((int)r8.z == 0);
        r9.x = r8.x;
        r8.xyzw = r9.xyzw ? v11.xyzw : 0;
        r8.xy = (int2)r8.yw | (int2)r8.xz;
        r2.w = (int)r8.y | (int)r8.x;
        r2.w = (int)r2.w * 3;
        r8.x = gSkinningMatrices[r2.w/3]._m03 + -gSkinningMatrices[v10.x]._m03;
        r8.y = gSkinningMatrices[r2.w/3]._m13 + -gSkinningMatrices[v10.x]._m13;
        r8.z = gSkinningMatrices[r2.w/3]._m23 + -gSkinningMatrices[v10.x]._m23;
        r3.w = dot(v8.xyzw, icb[r1.w+0].xyzw);
        r0.yzw = gSkinningMatrices[r2.w/3]._m00_m01_m02 * r3.www + r0.yzw;
        r1.xyz = gSkinningMatrices[r2.w/3]._m10_m11_m12 * r3.www + r1.xyz;
        r2.xyz = gSkinningMatrices[r2.w/3]._m20_m21_m22 * r3.www + r2.xyz;
        r3.xyz = r8.xyz * r3.www + r3.xyz;
        r1.w = r10.y;
      }
      r4.xyz = r0.yzw;
      r5.xyz = r1.xyz;
      r6.xyz = r2.xyz;
      r7.xyz = r3.xyz;
      r0.y = cmp(0 < v9.x);
      if (r0.y != 0) {
        r0.yzw = r4.xyz;
        r1.xyz = r5.xyz;
        r2.xyz = r6.xyz;
        r3.xyz = r7.xyz;
        r1.w = 0;
        while (true) {
          r2.w = cmp((int)r1.w >= 4);
          if (r2.w != 0) break;
          r2.w = -(int)r1.w;
          r8.xyz = cmp((uint3)r1.www < int3(1,2,3));
          r9.y = r8.y ? r2.w : 0;
          r10.xy = (int2)r1.ww + int2(-3,1);
          r9.z = r8.y ? 0 : r10.x;
          r9.w = cmp((int)r8.z == 0);
          r9.x = r8.x;
          r8.xyzw = r9.xyzw ? v12.xyzw : 0;
          r8.xy = (int2)r8.yw | (int2)r8.xz;
          r2.w = (int)r8.y | (int)r8.x;
          r2.w = (int)r2.w * 3;
          r8.x = gSkinningMatrices[r2.w/3]._m03 + -gSkinningMatrices[v10.x]._m03;
          r8.y = gSkinningMatrices[r2.w/3]._m13 + -gSkinningMatrices[v10.x]._m13;
          r8.z = gSkinningMatrices[r2.w/3]._m23 + -gSkinningMatrices[v10.x]._m23;
          r3.w = dot(v9.xyzw, icb[r1.w+0].xyzw);
          r0.yzw = gSkinningMatrices[r2.w/3]._m00_m01_m02 * r3.www + r0.yzw;
          r1.xyz = gSkinningMatrices[r2.w/3]._m10_m11_m12 * r3.www + r1.xyz;
          r2.xyz = gSkinningMatrices[r2.w/3]._m20_m21_m22 * r3.www + r2.xyz;
          r3.xyz = r8.xyz * r3.www + r3.xyz;
          r1.w = r10.y;
        }
        r4.xyz = r0.yzw;
        r5.xyz = r1.xyz;
        r6.xyz = r2.xyz;
        r7.xyz = r3.xyz;
      }
    }
    r0.y = dot(v0.xyz, r4.xyz);
    r1.x = r0.y + r7.x;
    r0.y = dot(v0.xyz, r5.xyz);
    r1.y = r0.y + r7.y;
    r0.y = dot(v0.xyz, r6.xyz);
    r1.z = r0.y + r7.z;
    r2.x = gSkinningMatrices[v10.x]._m03;
    r2.y = gSkinningMatrices[v10.x]._m13;
    r2.z = gSkinningMatrices[v10.x]._m23;
    r0.xyw = r2.xyz + r1.xyz;
    r1.xyzw = gViewProjection._m10_m11_m12_m13 * r0.yyyy;
    r1.xyzw = r0.xxxx * gViewProjection._m00_m01_m02_m03 + r1.xyzw;
    r1.xyzw = r0.wwww * gViewProjection._m20_m21_m22_m23 + r1.xyzw;
    o0.xyzw = gViewProjection._m30_m31_m32_m33 + r1.xyzw;
    r1.x = dot(r4.xyz, v5.xyz);
    r1.y = dot(r5.xyz, v5.xyz);
    r1.z = dot(r6.xyz, v5.xyz);
    r1.xyz = float3(9.99999975e-06,0,0) + r1.xyz;
    r1.w = dot(r1.xyz, r1.xyz);
    r1.w = rsqrt(r1.w);
    r1.xyz = r1.yzx * r1.www;
    r2.x = dot(r4.xyz, v6.xyz);
    r2.y = dot(r5.xyz, v6.xyz);
    r2.z = dot(r6.xyz, v6.xyz);
    r2.xyz = float3(9.99999975e-06,0,0) + r2.xyz;
    r1.w = dot(r2.xyz, r2.xyz);
    r1.w = rsqrt(r1.w);
    r2.xyz = r2.zxy * r1.www;
    r3.w = r0.x;
    r4.w = r0.y;
  } else {
    r5.xyz = gStaticTransformMatrix._m10_m11_m12 * v0.yyy;
    r5.xyz = v0.xxx * gStaticTransformMatrix._m00_m01_m02 + r5.xyz;
    r5.xyz = v0.zzz * gStaticTransformMatrix._m20_m21_m22 + r5.xyz;
    r0.xyw = gStaticTransformMatrix._m30_m31_m32 + r5.xyz;
    r5.xyzw = gViewProjection._m10_m11_m12_m13 * r0.yyyy;
    r5.xyzw = r0.xxxx * gViewProjection._m00_m01_m02_m03 + r5.xyzw;
    r5.xyzw = r0.wwww * gViewProjection._m20_m21_m22_m23 + r5.xyzw;
    o0.xyzw = gViewProjection._m30_m31_m32_m33 + r5.xyzw;
    r5.xyz = gStaticTransformMatrix._m10_m11_m12 * v5.yyy;
    r5.xyz = v5.xxx * gStaticTransformMatrix._m00_m01_m02 + r5.xyz;
    r5.xyz = v5.zzz * gStaticTransformMatrix._m20_m21_m22 + r5.xyz;
    r5.xyz = float3(9.99999975e-06,0,0) + r5.xyz;
    r1.w = dot(r5.xyz, r5.xyz);
    r1.w = rsqrt(r1.w);
    r1.xyz = r5.yzx * r1.www;
    r5.xyz = gStaticTransformMatrix._m10_m11_m12 * v6.yyy;
    r5.xyz = v6.xxx * gStaticTransformMatrix._m00_m01_m02 + r5.xyz;
    r5.xyz = v6.zzz * gStaticTransformMatrix._m20_m21_m22 + r5.xyz;
    r5.xyz = float3(9.99999975e-06,0,0) + r5.xyz;
    r1.w = dot(r5.xyz, r5.xyz);
    r1.w = rsqrt(r1.w);
    r2.xyz = r5.zxy * r1.www;
    r3.w = r0.x;
    r4.w = r0.y;
  }
  r5.xyz = r2.zxy * r1.yzx;
  r5.xyz = r1.xyz * r2.xyz + -r5.xyz;
  r5.xyz = v6.www * r5.xyz;
  r6.xyz = gViewMatrix._m10_m11_m12 * r2.zzz;
  r2.yzw = r2.yyy * gViewMatrix._m00_m01_m02 + r6.xyz;
  r3.xyz = r2.xxx * gViewMatrix._m20_m21_m22 + r2.yzw;
  r2.xyz = gViewMatrix._m10_m11_m12 * r5.yyy;
  r2.xyz = r5.xxx * gViewMatrix._m00_m01_m02 + r2.xyz;
  r4.xyz = r5.zzz * gViewMatrix._m20_m21_m22 + r2.xyz;
  r2.xyz = gViewMatrix._m10_m11_m12 * r1.xxx;
  r2.xyz = r1.zzz * gViewMatrix._m00_m01_m02 + r2.xyz;
  r0.xyz = r1.yyy * gViewMatrix._m20_m21_m22 + r2.xyz;
  r2.xyzw = gUVOffset0.xyzw + v2.xyzw;
  r5.xyzw = gUVOffset1.xyzw + v3.xyzw;
  r6.xyzw = gUVOffset2.xyzw + v4.xyzw;
  o3.xyzw = gUseMultiUV ? r2.xyzw : r2.xyxy;
  o4.xyzw = gUseMultiUV ? r5.xyzw : r2.xyxy;
  o5.xyzw = gUseMultiUV ? r6.xyzw : r2.xyxy;
  o2.xyz = gUseInputVertexColor ? v1.xyz : float3(1,1,1);
  o1.w = dot(r1.zxy, gShadowVector.xyz);
  o1.xyz = float3(0,0,0);
  o6.xyzw = r3.xyzw;
  o7.xyzw = r4.xyzw;
  o8.xyzw = r0.xyzw;
  return;
}
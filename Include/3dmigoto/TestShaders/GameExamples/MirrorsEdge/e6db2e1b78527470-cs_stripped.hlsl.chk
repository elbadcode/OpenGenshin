// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:41:23 2019
struct t24_t {
  float val[1];
};
StructuredBuffer<t24_t> t24 : register(t24);

struct t20_t {
  float val[1];
};
StructuredBuffer<t20_t> t20 : register(t20);

struct t19_t {
  float val[4];
};
StructuredBuffer<t19_t> t19 : register(t19);

Texture2D<float4> t10 : register(t10);

Texture2D<float4> t6 : register(t6);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb0 : register(b0)
{
  float4 cb0[27];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[896];
}




// 3Dmigoto declarations
#define cmp -


void main)
{
// Needs manual fix for instruction:
// unknown dcl_: dcl_uav_typed_texture2d (float,float,float,float) u0
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13;
  uint4 bitmask, uiDest;
  float4 fDest;

// Needs manual fix for instruction:
// unknown dcl_: dcl_tgsm_raw g0, 4
// Needs manual fix for instruction:
// unknown dcl_: dcl_tgsm_raw g1, 4
// Needs manual fix for instruction:
// unknown dcl_: dcl_thread_group 16, 16, 1
  r0.x = t24[vThreadGroupID.x].val[0/4];
  r1.x = (uint)r0.x >> 16;
  r1.yzw = (int3)r0.xxx & int3(0xffff,0xffff,0xffff);
  r0.xyzw = mad((int4)r1.xyzw, int4(16,16,16,16), (int4)vThreadIDInGroup.xyyy);
  if (vThreadIDInGroupFlattened.x == 0) {
    r1.x = mad((int)r1.w, asint(cb0[8].z), (int)r1.x);
    r1.x = t19[r1.x].val[0/4];
    r1.y = t19[r1.x].val[0/4+1];
    r1.y = (int)r1.y & 0x0000ffff;
  // No code for instruction (needs manual fix):
    store_raw g0.x, l(0), r1.x
  // No code for instruction (needs manual fix):
    store_raw g1.x, l(0), r1.y
  }
  GroupMemoryBarrierWithGroupSync();
  r1.xy = (uint2)r0.xw;
  r1.zw = float2(0.5,0.5) + r1.xy;
  r1.zw = cb0[5].zw * r1.zw;
  r2.xy = (int2)r1.xy;
  r2.zw = float2(0,0);
  r3.xyzw = t0.Load(r2.xyw).xyzw;
  r4.xyzw = t1.Load(r2.xyw).xyzw;
  r1.xy = t2.Load(r2.xyw).yz;
  r2.z = t6.Load(r2.xyz).x;
  r4.w = 6 * r4.w;
  r4.w = round(r4.w);
  r4.w = (uint)r4.w;
  r5.xy = r3.xy * float2(2,2) + float2(-1,-1);
  r3.x = dot(r5.xy, r5.xy);
  r3.x = min(1, r3.x);
  r3.x = 1 + -r3.x;
  r5.z = sqrt(r3.x);
  r3.x = (int)r4.w * 3;
  r6.x = dot(r5.xyz, cb0[r3.x+9].xyz);
  r6.y = dot(r5.xyz, cb0[r3.x+10].xyz);
  r6.z = dot(r5.xyz, cb0[r3.x+11].xyz);
  r3.x = 1 + -r3.z;
  r3.y = 3 * r3.w;
  r3.y = round(r3.y);
  r3.y = (int)r3.y;
  r3.y = cmp((int)r3.y == 1);
  r1.x = r3.y ? 0 : r1.x;
  r3.y = 1 + -r1.x;
  r3.yzw = r4.xyz * r3.yyy;
  r1.y = r1.y * r1.y;
  r4.w = 0.159999996 * r1.y;
  r4.xyz = -r1.yyy * float3(0.159999996,0.159999996,0.159999996) + r4.xyz;
  r4.xyz = r1.xxx * r4.xyz + r4.www;
  r1.x = dot(r4.xyz, float3(0.330000013,0.330000013,0.330000013));
  r1.x = saturate(50 * r1.x);
  r1.y = r3.x * r3.x;
  r5.xy = r1.zw * float2(2,2) + float2(-1,-1);
  r2.xy = float2(1,-1) * r5.xy;
  r2.w = 1;
  r5.x = dot(r2.xyzw, cb0[0].xyzw);
  r5.y = dot(r2.xyzw, cb0[1].xyzw);
  r5.z = dot(r2.xyzw, cb0[2].xyzw);
  r2.x = dot(r2.xyzw, cb0[3].xyzw);
  r2.x = 1 / r2.x;
  r2.yzw = r5.xyz * r2.xxx;
  r4.w = dot(-r2.yzw, -r2.yzw);
  r4.w = rsqrt(r4.w);
  r7.xyz = r4.www * -r2.yzw;
  r5.w = dot(r6.xyz, r7.xyz);
  r6.w = saturate(r5.w);
  r1.z = t10.SampleLevel(s0_s, r1.zw, 0).x;
// No code for instruction (needs manual fix):
ld_raw r1.w, l(0), g0.xxxx
// No code for instruction (needs manual fix):
ld_raw r7.x, l(0), g1.xxxx
  r7.x = (int)r1.w + (int)r7.x;
  r5.w = 9.99999975e-06 + abs(r5.w);
  r7.yzw = r1.xxx + -r4.xyz;
  r1.x = max(0.00200000009, r1.y);
  r1.x = r1.x * r1.x;
  r8.x = -r5.w * r1.x + r5.w;
  r8.x = r8.x * r5.w + r1.x;
  r8.x = sqrt(r8.x);
  r8.y = r3.x * -0.337748349 + 1;
  r8.z = 1 + -r5.w;
  r8.w = r8.z * r8.z;
  r8.w = r8.w * r8.w;
  r8.z = r8.w * r8.z;
  r9.xyz = float3(0,0,0);
  r10.xyz = float3(0,0,0);
  r8.w = r1.w;
  while (true) {
    r9.w = cmp((uint)r8.w >= (uint)r7.x);
    if (r9.w != 0) break;
    r9.w = t20[r8.w].val[0/4];
    r9.w = (int)r9.w * 7;
    r11.xyz = -r5.xyz * r2.xxx + cb1[r9.w+0].xyz;
    r10.w = dot(r11.xyz, r11.xyz);
    r11.w = rsqrt(r10.w);
    r11.xyz = r11.xyz * r11.www;
    r11.w = cb1[r9.w+1].w + r10.w;
    r11.w = max(9.99999975e-05, r11.w);
    r11.w = 1 / r11.w;
    r10.w = cb1[r9.w+0].w * r10.w;
    r10.w = -r10.w * r10.w + 1;
    r10.w = max(0, r10.w);
    r10.w = r10.w * r10.w;
    r10.w = r11.w * r10.w;
    r11.w = dot(cb1[r9.w+2].xyz, r11.xyz);
    r11.w = saturate(r11.w * cb1[r9.w+5].x + cb1[r9.w+5].y);
    r11.w = r11.w * r11.w;
    r10.w = r11.w * r10.w;
    r11.w = saturate(dot(r6.xyz, r11.xyz));
    r10.w = r11.w * r10.w;
    r12.x = cmp(0 < r10.w);
    if (r12.x != 0) {
      r12.xyz = -r2.yzw * r4.www + r11.xyz;
      r12.w = dot(r12.xyz, r12.xyz);
      r12.w = rsqrt(r12.w);
      r12.xyz = r12.xyz * r12.www;
      r11.x = saturate(dot(r11.xyz, r12.xyz));
      r11.y = saturate(dot(r6.xyz, r12.xyz));
      r11.z = 1 + -r11.x;
      r12.x = r11.z * r11.z;
      r12.x = r12.x * r12.x;
      r11.z = r12.x * r11.z;
      r12.xyz = r7.yzw * r11.zzz + r4.xyz;
      r11.z = -r11.w * r1.x + r11.w;
      r11.z = r11.z * r11.w + r1.x;
      r11.z = sqrt(r11.z);
      r11.z = r11.z * r5.w;
      r11.z = r11.w * r8.x + r11.z;
      r11.z = 0.5 / r11.z;
      r12.w = r11.y * r1.x + -r11.y;
      r11.y = r12.w * r11.y + 1;
      r11.y = r11.y * r11.y;
      r11.y = r1.x / r11.y;
      r11.y = r11.z * r11.y;
      r12.xyz = r12.xyz * r11.yyy;
      r11.x = r11.x * r11.x;
      r11.x = dot(r11.xx, r3.xx);
      r11.x = r3.x * 0.5 + r11.x;
      r11.y = 1 + -r11.w;
      r11.z = r11.y * r11.y;
      r11.z = r11.z * r11.z;
      r11.y = r11.z * r11.y;
      r11.x = -1 + r11.x;
      r11.y = r11.x * r11.y + 1;
      r11.x = r11.x * r8.z + 1;
      r11.x = r11.y * r11.x;
      r11.x = r11.x * r8.y;
      r11.y = cb1[r9.w+2].w * r10.w;
      r11.yzw = cb1[r9.w+1].xyz * r11.yyy;
      r11.xyz = r11.xxx * r11.yzw;
      r10.w = cb1[r9.w+3].w * r10.w;
      r13.xyz = cb1[r9.w+1].xyz * r10.www;
      r12.xyz = r13.xyz * r12.xyz;
    } else {
      r11.xyz = float3(0,0,0);
      r12.xyz = float3(0,0,0);
    }
    r10.xyz = r11.xyz + r10.xyz;
    r9.xyz = r12.xyz + r9.xyz;
    r8.w = (int)r8.w + 1;
  }
  r1.x = -1 + r1.z;
  r1.x = cb0[8].y * r1.x + 1;
  r2.xyz = r10.xyz * r1.xxx;
  r1.x = r6.w + r1.z;
  r1.y = r1.y * -16 + -1;
  r1.y = exp2(r1.y);
  r1.x = log2(r1.x);
  r1.x = r1.y * r1.x;
  r1.x = exp2(r1.x);
  r1.x = r1.x + r1.z;
  r1.x = saturate(-1 + r1.x);
  r1.xyz = r9.xyz * r1.xxx;
  r2.xyz = r3.yzw * r2.xyz;
  r1.xyz = float3(0.318309873,0.318309873,0.318309873) * r1.xyz;
  r1.xyz = r2.xyz * float3(0.318309873,0.318309873,0.318309873) + r1.xyz;
  r1.xyz = cb0[4].zzz * r1.xyz;
  r1.xyz = min(float3(65504,65504,65504), r1.xyz);
  r1.w = 0;
// No code for instruction (needs manual fix):
store_uav_typed u0.xyzw, r0.xyzw, r1.xyzw
  return;
}
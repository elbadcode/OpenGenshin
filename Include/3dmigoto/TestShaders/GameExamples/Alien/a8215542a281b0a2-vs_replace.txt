// Two errors here.
// First, array index is coming in too small, always 4.  Needs to be 6 here.
// redefine of src0, src1.  No good answer for that, as sizes can change.

cbuffer cbDefaultXSC : register(b0)
{
  float4x4 ViewProj : packoffset(c0);
  float4x4 ViewMatrix : packoffset(c4);
  float4x4 SecondaryProj : packoffset(c8);
  float4x4 SecondaryViewProj : packoffset(c12);
  float4x4 SecondaryInvViewProj : packoffset(c16);
  float4 ConstantColour : packoffset(c20);
  float4 Time : packoffset(c21);
  float4 CameraPosition : packoffset(c22);
  float4 InvProjectionParams : packoffset(c23);
  float4 SecondaryInvProjectionParams : packoffset(c24);
  float4 ShaderDebugParams : packoffset(c25);
  float4 ToneMappingDebugParams : packoffset(c26);
  float4 HDR_EncodeScale2 : packoffset(c27);
  float4 EmissiveSurfaceMultiplier : packoffset(c28);
  float4 AlphaLight_OffsetScale : packoffset(c29);
  float4 TessellationScaleFactor : packoffset(c30);
  float4 FogNearColour : packoffset(c31);
  float4 FogFarColour : packoffset(c32);
  float4 FogParams : packoffset(c33);
  float4 AdvanceEnvironmentShaderDebugParams : packoffset(c34);
  float4 SMAA_RTMetrics : packoffset(c35);
}

cbuffer cbDefaultVSC : register(b1)
{
  float4x4 ProjMatrix : packoffset(c0);
  float4x4 TextureTransform : packoffset(c4);
  float4x4 InvViewProj : packoffset(c8);
  float4x4 PrevViewProj : packoffset(c12);
  float4x4 PrevSecViewProj : packoffset(c16);
  float4 TextureScaleBias : packoffset(c20);
  float4 RenderTargetSizeVS : packoffset(c21);
  float4 RenderTargetResolutionVS : packoffset(c22);
  float4 MorphTargetParams : packoffset(c23);
  float4 OnePixelStepForS0VS : packoffset(c24);
  float4 ScreenRes[2] : packoffset(c25);
  float4 ClearSurfaceColor : packoffset(c27);
  float4 ClearSurfaceDepth : packoffset(c28);
  float4 VertexDepthClamp : packoffset(c29);
  float4 FlareScreenAspect : packoffset(c30);
  float4 DecalParams : packoffset(c31);
  float4 UserClipPlane0 : packoffset(c32);
  float4 UserClipPlane1 : packoffset(c33);
  float4 UserClipPlane2 : packoffset(c34);
  float4 UserClipPlane3 : packoffset(c35);
  float4 DecalScaleParams : packoffset(c36);
  float4 MipLevel : packoffset(c37);
}
Texture2D<float4> SamplerPosition_TEX : register(t0);
Texture2D<float4> SamplerMisc_TEX : register(t2);

Texture2D<float4> StereoParams : register(t125);

void main(
  uint v0 : SV_VertexID0,
  out float4 o0 : SV_Position0,
  out float3 o1 : TEXCOORD0,
  out float p1 : TEXCOORD3,
  out float2 o2 : TEXCOORD1,
  out float p2 : TEXCOORD2)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask;
  float4 x0[6];
  x0[0].xy = float2(-1.000000e+000,-1.000000e+000);
  x0[1].xy = float2(1.000000e+000,-1.000000e+000);
  x0[2].xy = float2(1.000000e+000,1.000000e+000);
  x0[3].xy = float2(1.000000e+000,1.000000e+000);
  x0[4].xy = float2(-1.000000e+000,1.000000e+000);
  x0[5].xy = float2(-1.000000e+000,-1.000000e+000);
  uint1 src0 = v0.x;
  uint1 src1 = 6;
  r0.x = src0 / src1;
  r1.x = src0 % src1;
  r0.yz = x0[r1.x+0].xy;
  r1.xy = float2(2.500000e-001,2.500000e-001) * r0.yz;
  o2.xy = r0.yz;
  r1.zw = float2(0.000000e+000,1.000000e+000);
  r2.x = (int)r0.x & 255;
  r2.y = (uint)r0.x >> 8;
  uint1 src2 = r0.x;
  uint1 src3 = 60;
  r0.x = src2 % src3;
  r2.zw = float2(0.000000e+000,0.000000e+000);
  r3.xyzw = SamplerPosition_TEX.Load(r2.xyw).xyzw;
  r0.y = SamplerMisc_TEX.Load(r2.xyz).w;
  p1.x = r0.y;
  r2.xyz = r3.xyz;
  r2.w = 1.000000000e+000;
  r3.x = dot(r2.xyzw, ViewMatrix._m00_m10_m20_m30);
  r3.y = dot(r2.xyzw, ViewMatrix._m01_m11_m21_m31);
  r3.z = dot(r2.xyzw, ViewMatrix._m02_m12_m22_m32);
  o1.xyz = r2.xyz;
  r1.xyz = r3.xyz + r1.xyz;
  r2.x = dot(r1.xyzw, ProjMatrix._m00_m10_m20_m30);
  r2.y = dot(r1.xyzw, ProjMatrix._m01_m11_m21_m31);
  r2.z = dot(r1.xyzw, ProjMatrix._m02_m12_m22_m32);
  r2.w = dot(r1.xyzw, ProjMatrix._m03_m13_m23_m33);
  r0.y = 1.000000000e+000 < r3.w;
  r0.z = -8.000000119e-001 + r3.w;
  r0.z = saturate(5.000000000e+000 * r0.z);
  r0.z = -1.000000000e+000 + r0.z;
  r1.xyzw = r0.yyyy ? float4(1.000000e+008,1.000000e+008,1.000000e+007,1.000000e+007) : r2.xyzw;
  o0.xyzw = r0.xxxx ? r1.xyzw : float4(1.000000e+008,1.000000e+008,1.000000e+007,1.000000e+007);
  r0.x = r0.z * 2.000000000e+000 + 3.000000000e+000;
  r0.y = r0.z * r0.z;
  p2.x = r0.x * r0.y;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cbDefaultXSC
// {
//
//   float4x4 ViewProj;                 // Offset:    0 Size:    64 [unused]
//   float4x4 ViewMatrix;               // Offset:   64 Size:    64
//   float4x4 SecondaryProj;            // Offset:  128 Size:    64 [unused]
//   float4x4 SecondaryViewProj;        // Offset:  192 Size:    64 [unused]
//   float4x4 SecondaryInvViewProj;     // Offset:  256 Size:    64 [unused]
//   float4 ConstantColour;             // Offset:  320 Size:    16 [unused]
//   float4 Time;                       // Offset:  336 Size:    16 [unused]
//   float4 CameraPosition;             // Offset:  352 Size:    16 [unused]
//   float4 InvProjectionParams;        // Offset:  368 Size:    16 [unused]
//   float4 SecondaryInvProjectionParams;// Offset:  384 Size:    16 [unused]
//   float4 ShaderDebugParams;          // Offset:  400 Size:    16 [unused]
//   float4 ToneMappingDebugParams;     // Offset:  416 Size:    16 [unused]
//   float4 HDR_EncodeScale2;           // Offset:  432 Size:    16 [unused]
//   float4 EmissiveSurfaceMultiplier;  // Offset:  448 Size:    16 [unused]
//   float4 AlphaLight_OffsetScale;     // Offset:  464 Size:    16 [unused]
//   float4 TessellationScaleFactor;    // Offset:  480 Size:    16 [unused]
//   float4 FogNearColour;              // Offset:  496 Size:    16 [unused]
//   float4 FogFarColour;               // Offset:  512 Size:    16 [unused]
//   float4 FogParams;                  // Offset:  528 Size:    16 [unused]
//   float4 AdvanceEnvironmentShaderDebugParams;// Offset:  544 Size:    16 [unused]
//   float4 SMAA_RTMetrics;             // Offset:  560 Size:    16 [unused]
//
// }
//
// cbuffer cbDefaultVSC
// {
//
//   float4x4 ProjMatrix;               // Offset:    0 Size:    64
//   float4x4 TextureTransform;         // Offset:   64 Size:    64 [unused]
//   float4x4 InvViewProj;              // Offset:  128 Size:    64 [unused]
//   float4x4 PrevViewProj;             // Offset:  192 Size:    64 [unused]
//   float4x4 PrevSecViewProj;          // Offset:  256 Size:    64 [unused]
//   float4 TextureScaleBias;           // Offset:  320 Size:    16 [unused]
//   float4 RenderTargetSizeVS;         // Offset:  336 Size:    16 [unused]
//   float4 RenderTargetResolutionVS;   // Offset:  352 Size:    16 [unused]
//   float4 MorphTargetParams;          // Offset:  368 Size:    16 [unused]
//   float4 OnePixelStepForS0VS;        // Offset:  384 Size:    16 [unused]
//   float4 ScreenRes[2];               // Offset:  400 Size:    32 [unused]
//   float4 ClearSurfaceColor;          // Offset:  432 Size:    16 [unused]
//   float4 ClearSurfaceDepth;          // Offset:  448 Size:    16 [unused]
//   float4 VertexDepthClamp;           // Offset:  464 Size:    16 [unused]
//   float4 FlareScreenAspect;          // Offset:  480 Size:    16 [unused]
//   float4 DecalParams;                // Offset:  496 Size:    16 [unused]
//   float4 UserClipPlane0;             // Offset:  512 Size:    16 [unused]
//   float4 UserClipPlane1;             // Offset:  528 Size:    16 [unused]
//   float4 UserClipPlane2;             // Offset:  544 Size:    16 [unused]
//   float4 UserClipPlane3;             // Offset:  560 Size:    16 [unused]
//   float4 DecalScaleParams;           // Offset:  576 Size:    16 [unused]
//   float4 MipLevel;                   // Offset:  592 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// SamplerPosition_TEX               texture  float4          2d    0        1
// SamplerMisc_TEX                   texture  float4          2d    2        1
// cbDefaultXSC                      cbuffer      NA          NA    0        1
// cbDefaultVSC                      cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 3      w        1     NONE   float      w
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 2     z         2     NONE   float     z 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_sgv v0.x, vertex_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xy
dcl_output o2.z
dcl_temps 4
dcl_indexableTemp x0[6], 4
mov x0[0].xy, l(-1.000000,-1.000000,0,0)
mov x0[1].xy, l(1.000000,-1.000000,0,0)
mov x0[2].xy, l(1.000000,1.000000,0,0)
mov x0[3].xy, l(1.000000,1.000000,0,0)
mov x0[4].xy, l(-1.000000,1.000000,0,0)
mov x0[5].xy, l(-1.000000,-1.000000,0,0)
udiv r0.x, r1.x, v0.x, l(6)
mov r0.yz, x0[r1.x + 0].xxyx
mul r1.xy, r0.yzyy, l(0.250000, 0.250000, 0.000000, 0.000000)
mov o2.xy, r0.yzyy
mov r1.zw, l(0,0,0,1.000000)
and r2.x, r0.x, l(255)
ushr r2.y, r0.x, l(8)
udiv null, r0.x, r0.x, l(60)
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.xyww, t0.xyzw
ld_indexable(texture2d)(float,float,float,float) r0.y, r2.xyzw, t2.xwyz
mov o1.w, r0.y
mov r2.xyz, r3.xyzx
mov r2.w, l(1.000000)
dp4 r3.x, r2.xyzw, cb0[4].xyzw
dp4 r3.y, r2.xyzw, cb0[5].xyzw
dp4 r3.z, r2.xyzw, cb0[6].xyzw
mov o1.xyz, r2.xyzx
add r1.xyz, r1.xyzx, r3.xyzx
dp4 r2.x, r1.xyzw, cb1[0].xyzw
dp4 r2.y, r1.xyzw, cb1[1].xyzw
dp4 r2.z, r1.xyzw, cb1[2].xyzw
dp4 r2.w, r1.xyzw, cb1[3].xyzw
lt r0.y, l(1.000000), r3.w
add r0.z, r3.w, l(-0.800000)
mul_sat r0.z, r0.z, l(5.000000)
add r0.z, r0.z, l(-1.000000)
movc r1.xyzw, r0.yyyy, l(100000000.000000,100000000.000000,10000000.000000,10000000.000000), r2.xyzw
movc o0.xyzw, r0.xxxx, r1.xyzw, l(100000000.000000,100000000.000000,10000000.000000,10000000.000000)
mad r0.x, r0.z, l(2.000000), l(3.000000)
mul r0.y, r0.z, r0.z
mul o2.z, r0.y, r0.x
ret 
// Approximately 39 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

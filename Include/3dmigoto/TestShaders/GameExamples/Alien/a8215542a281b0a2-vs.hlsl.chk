// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:39:27 2019

cbuffer cbDefaultXSC : register(b0)
{
  float4x4 ViewProj : packoffset(c0);
  float4x4 ViewMatrix : packoffset(c4);
  float4x4 SecondaryProj : packoffset(c8);
  float4x4 SecondaryViewProj : packoffset(c12);
  float4x4 SecondaryInvViewProj : packoffset(c16);
  float4 ConstantColour : packoffset(c20);
  float4 Time : packoffset(c21);
  float4 CameraPosition : packoffset(c22);
  float4 InvProjectionParams : packoffset(c23);
  float4 SecondaryInvProjectionParams : packoffset(c24);
  float4 ShaderDebugParams : packoffset(c25);
  float4 ToneMappingDebugParams : packoffset(c26);
  float4 HDR_EncodeScale2 : packoffset(c27);
  float4 EmissiveSurfaceMultiplier : packoffset(c28);
  float4 AlphaLight_OffsetScale : packoffset(c29);
  float4 TessellationScaleFactor : packoffset(c30);
  float4 FogNearColour : packoffset(c31);
  float4 FogFarColour : packoffset(c32);
  float4 FogParams : packoffset(c33);
  float4 AdvanceEnvironmentShaderDebugParams : packoffset(c34);
  float4 SMAA_RTMetrics : packoffset(c35);
}

cbuffer cbDefaultVSC : register(b1)
{
  float4x4 ProjMatrix : packoffset(c0);
  float4x4 TextureTransform : packoffset(c4);
  float4x4 InvViewProj : packoffset(c8);
  float4x4 PrevViewProj : packoffset(c12);
  float4x4 PrevSecViewProj : packoffset(c16);
  float4 TextureScaleBias : packoffset(c20);
  float4 RenderTargetSizeVS : packoffset(c21);
  float4 RenderTargetResolutionVS : packoffset(c22);
  float4 MorphTargetParams : packoffset(c23);
  float4 OnePixelStepForS0VS : packoffset(c24);
  float4 ScreenRes[2] : packoffset(c25);
  float4 ClearSurfaceColor : packoffset(c27);
  float4 ClearSurfaceDepth : packoffset(c28);
  float4 VertexDepthClamp : packoffset(c29);
  float4 FlareScreenAspect : packoffset(c30);
  float4 DecalParams : packoffset(c31);
  float4 UserClipPlane0 : packoffset(c32);
  float4 UserClipPlane1 : packoffset(c33);
  float4 UserClipPlane2 : packoffset(c34);
  float4 UserClipPlane3 : packoffset(c35);
  float4 DecalScaleParams : packoffset(c36);
  float4 MipLevel : packoffset(c37);
}

Texture2D<float4> SamplerPosition_TEX : register(t0);
Texture2D<float4> SamplerMisc_TEX : register(t2);


// 3Dmigoto declarations
#define cmp -


void main(
  uint v0 : SV_VertexID0,
  out float4 o0 : SV_Position0,
  out float3 o1 : TEXCOORD0,
  out float p1 : TEXCOORD3,
  out float2 o2 : TEXCOORD1,
  out float p2 : TEXCOORD2)
{
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v0.x, vertex_id
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 x0[6];
  x0[0].xy = float2(-1,-1);
  x0[1].xy = float2(1,-1);
  x0[2].xy = float2(1,1);
  x0[3].xy = float2(1,1);
  x0[4].xy = float2(-1,1);
  x0[5].xy = float2(-1,-1);
  uiDest.x = (uint)v0.x / 6;
  r1.x = (uint)v0.x % 6;
  r0.x = uiDest.x;
  r0.yz = x0[r1.x+0].xy;
  r1.xy = float2(0.25,0.25) * r0.yz;
  o2.xy = r0.yz;
  r1.zw = float2(0,1);
  r2.x = (int)r0.x & 255;
  r2.y = (uint)r0.x >> 8;
  r0.x = (uint)r0.x % 60;
  r2.zw = float2(0,0);
  r3.xyzw = SamplerPosition_TEX.Load(r2.xyw).xyzw;
  r0.y = SamplerMisc_TEX.Load(r2.xyz).w;
  p1.x = r0.y;
  r2.xyz = r3.xyz;
  r2.w = 1;
  r3.x = dot(r2.xyzw, ViewMatrix._m00_m10_m20_m30);
  r3.y = dot(r2.xyzw, ViewMatrix._m01_m11_m21_m31);
  r3.z = dot(r2.xyzw, ViewMatrix._m02_m12_m22_m32);
  o1.xyz = r2.xyz;
  r1.xyz = r3.xyz + r1.xyz;
  r2.x = dot(r1.xyzw, ProjMatrix._m00_m10_m20_m30);
  r2.y = dot(r1.xyzw, ProjMatrix._m01_m11_m21_m31);
  r2.z = dot(r1.xyzw, ProjMatrix._m02_m12_m22_m32);
  r2.w = dot(r1.xyzw, ProjMatrix._m03_m13_m23_m33);
  r0.y = cmp(1 < r3.w);
  r0.z = -0.800000012 + r3.w;
  r0.z = saturate(5 * r0.z);
  r0.z = -1 + r0.z;
  r1.xyzw = r0.yyyy ? float4(100000000,100000000,10000000,10000000) : r2.xyzw;
  o0.xyzw = r0.xxxx ? r1.xyzw : float4(100000000,100000000,10000000,10000000);
  r0.x = r0.z * 2 + 3;
  r0.y = r0.z * r0.z;
  p2.x = r0.x * r0.y;
  return;
}
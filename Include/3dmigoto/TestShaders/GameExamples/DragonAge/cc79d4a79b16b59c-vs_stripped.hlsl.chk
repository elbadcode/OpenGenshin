// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:40:02 2019
struct t3_t {
  float val[8];
};
StructuredBuffer<t3_t> t3 : register(t3);




// 3Dmigoto declarations
#define cmp -


void main(
  uint v0 : SV_VertexID0,
  uint v1 : SV_InstanceID0,
  out float4 o0 : SV_Position0,
  out float4 o1 : COLOR0,
  out float2 o2 : TEXCOORD0)
{
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v0.x, vertex_id
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v1.x, instance_id
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  bitmask.x = ((~(-1 << 1)) << 1) & 0xffffffff;  r0.x = (((uint)v0.x << 1) & bitmask.x) | ((uint)0 & ~bitmask.x);
  r0.z = (int)v0.x & 2;
  r0.xy = (uint2)r0.xz;
  r0.zw = r0.xy * float2(1,-1) + float2(-1,1);
  o2.xy = float2(0.5,0.5) * r0.xy;
  r1.x = t3[v1.x].val[0/4];
  r1.y = t3[v1.x].val[0/4+1];
  r1.z = t3[v1.x].val[0/4+2];
  r1.w = t3[v1.x].val[0/4+3];
  r0.xy = r1.zw + r1.zw;
  o0.xy = r0.zw * r0.xy + r1.xy;
  o0.zw = float2(0,1);
  o1.x = t3[v1.x].val[16/4];
  o1.y = t3[v1.x].val[16/4+1];
  o1.z = t3[v1.x].val[16/4+2];
  o1.w = t3[v1.x].val[16/4+3];
  return;
}
// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:39:41 2019
cbuffer cb3 : register(b3)
{
  float4 cb3[38];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[12];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[18];
}




// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : POSITION0,
  float2 v1 : NORMAL0,
  float2 v2 : TEXCOORD0,
  float4 v3 : COLOR0,
  out float4 o0 : SV_Position0,
  out float3 o1 : NORMAL0,
  out float4 o2 : TEXCOORD0,
  out float4 o3 : TEXCOORD1,
  out float4 o4 : TEXCOORD2,
  out float4 o5 : TEXCOORD3,
  out float4 o6 : TEXCOORD4,
  out float4 o7 : TEXCOORD5)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  sincos(v2.x, r0.x, r1.x);
  r0.y = (int)v0.w;
  r2.x = -r0.x;
  r2.y = r1.x;
  r2.z = r0.x;
  r1.x = dot(v1.xy, r2.yz);
  r1.y = dot(v1.xy, r2.xy);
  r2.xyzw = cb1[9].xyzw * v0.yyyy;
  r2.xyzw = v0.xxxx * cb1[8].xyzw + r2.xyzw;
  r2.xyzw = v0.zzzz * cb1[10].xyzw + r2.xyzw;
  r2.xyzw = cb1[11].xyzw + r2.xyzw;
  r0.xz = r2.xy + r1.xy;
  r1.xyzw = cb3[5].xyzw * r0.zzzz;
  r1.xyzw = r0.xxxx * cb3[4].xyzw + r1.xyzw;
  r1.xyzw = r2.zzzz * cb3[6].xyzw + r1.xyzw;
  r1.xyzw = r2.wwww * cb3[7].xyzw + r1.xyzw;
  r3.xyzw = cb3[9].xyzw * r0.zzzz;
  r3.xyzw = r0.xxxx * cb3[8].xyzw + r3.xyzw;
  r3.xyzw = r2.zzzz * cb3[10].xyzw + r3.xyzw;
  r2.xyzw = r2.wwww * cb3[11].wxyz + r3.wxyz;
  r0.x = dot(v1.xy, v1.xy);
  r0.x = sqrt(r0.x);
  o3.y = r0.x / cb0[3].y;
  r0.z = cb0[12].z * v2.y;
  r0.w = r0.z / cb0[12].x;
  r3.x = cmp(r0.w >= -r0.w);
  r0.w = frac(abs(r0.w));
  r0.w = r3.x ? r0.w : -r0.w;
  r0.w = cb0[12].x * r0.w;
  r3.x = v2.y * cb0[12].z + -r0.w;
  r0.w = floor(r0.w);
  r3.y = v2.y * cb0[12].z + 1;
  r3.z = cmp(cb0[12].z < r3.y);
  if (r3.z != 0) {
    r3.y = -cb0[12].z + r3.y;
  }
  r3.z = r3.y / cb0[12].x;
  r3.w = cmp(r3.z >= -r3.z);
  r3.z = frac(abs(r3.z));
  r3.z = r3.w ? r3.z : -r3.z;
  r3.w = cb0[12].x * r3.z;
  r3.y = -r3.z * cb0[12].x + r3.y;
  r3.z = floor(r3.w);
  r3.xy = cb0[13].xx * r3.xy;
  r4.y = r0.w * cb0[13].x + cb0[11].z;
  r4.w = r3.x * cb0[13].y + cb0[11].w;
  r5.y = r3.z * cb0[13].x + cb0[11].z;
  r5.w = r3.y * cb0[13].y + cb0[11].w;
  r3.xz = cb0[r0.y+14].xy;
  r3.yw = float2(1,1);
  r4.xz = cb0[11].xy;
  o2.x = dot(r3.xy, r4.xy);
  o2.y = dot(r3.zw, r4.zw);
  r5.xz = cb0[11].xy;
  o2.z = dot(r3.xy, r5.xy);
  o2.w = dot(r3.zw, r5.zw);
  r3.xyz = -cb3[37].xyz + r1.xyz;
  r0.y = dot(r3.xyz, r3.xyz);
  r0.y = sqrt(r0.y);
  r0.w = -cb0[1].z + r0.y;
  r0.w = cb0[1].y + -r0.w;
  r0.w = saturate(r0.w / cb0[1].y);
  r0.w = 1 + -r0.w;
  r0.w = v3.w * r0.w;
  o3.x = frac(r0.z);
  r0.z = 1 / r2.x;
  r3.y = r2.y * r0.z;
  o4.x = r3.y * 0.5 + 0.5;
  r0.z = -r2.z * r0.z;
  o4.y = r0.z * 0.5 + 0.5;
  r0.z = cb3[1].z * r1.y;
  r0.z = r1.x * cb3[0].z + r0.z;
  r0.z = r1.z * cb3[2].z + r0.z;
  r0.z = r1.w * cb3[3].z + r0.z;
  o4.z = r0.z / cb0[3].y;
  r0.z = cmp(r0.w < cb0[1].x);
  if (r0.z != 0) {
    r2.x = -1;
  }
  r0.z = -cb3[33].x + r0.y;
  r0.z = saturate(cb3[33].y * r0.z);
  r1.w = cb3[33].z * r0.z;
  r3.xy = r3.xz / r0.yy;
  r0.y = saturate(dot(r3.xy, cb3[31].xz));
  r3.xyz = -cb3[30].xyz + cb3[29].xyz;
  r3.xyz = r0.yyy * r3.xyz + cb3[30].xyz;
  o6.xyz = r3.xyz * r1.www;
  o6.w = -r0.z * cb3[33].z + 1;
  o7.xyz = cb3[37].xyz + -r1.xyz;
  r0.y = dot(-cb3[6].xyz, -cb3[6].xyz);
  r0.y = rsqrt(r0.y);
  o1.xyz = -cb3[6].xyz * r0.yyy;
  o0.xyzw = r2.yzwx;
  o5.xyz = v3.xyz;
  o5.w = r0.w;
  o7.w = r0.x;
  return;
}
// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:39:41 2019
Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerComparisonState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb4 : register(b4)
{
  float4 cb4[14];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[23];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[29];
}




// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = t0.Sample(s5_s, v1.xy).xyzw;
  r0.w = 255 * r0.w;
  r0.w = round(r0.w);
  r1.xyz = t1.Sample(s4_s, v1.xy).xyz;
  r1.xyz = r1.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = rsqrt(r1.w);
  r1.xyz = r1.xyz * r1.www;
  r0.x = dot(r0.xyz, float3(1,0.00392200006,1.49999996e-05));
  r0.x = cb0[27].x * r0.x;
  r0.xyz = v2.xyz * r0.xxx;
  r2.xy = float2(1,1) / cb3[20].zw;
  r2.xy = v1.xy * r2.xy;
  r1.w = 5 * cb0[20].z;
  r2.z = -cb0[20].z * 5 + 1;
  r2.w = saturate(dot(r1.xyz, cb0[22].yzw));
  r2.w = 1 + -r2.w;
  r2.w = r2.w * r2.w;
  r2.w = cb0[22].x * r2.w;
  r1.xyz = r1.xyz * r2.www + r0.xyz;
  r3.xyz = cb0[1].xyz * r1.yyy;
  r3.xyz = r1.xxx * cb0[0].xyz + r3.xyz;
  r3.xyz = r1.zzz * cb0[2].xyz + r3.xyz;
  r3.xyz = cb0[3].xyz + r3.xyz;
  r2.w = min(r3.x, r3.y);
  r2.w = cmp(r1.w < r2.w);
  r4.x = max(r3.x, r3.y);
  r4.x = cmp(r4.x < r2.z);
  r2.w = r2.w ? r4.x : 0;
  if (r2.w != 0) {
    r3.w = 0.25 * r3.y;
    r2.w = 1;
    r3.xyz = r3.xwz;
    r4.y = cb0[21].x;
    r4.z = 0;
  } else {
    r5.xyz = cb0[5].xyz * r1.yyy;
    r5.xyz = r1.xxx * cb0[4].xyz + r5.xyz;
    r5.xyz = r1.zzz * cb0[6].xyz + r5.xyz;
    r3.xyz = cb0[7].xyz + r5.xyz;
    r4.w = min(r3.x, r3.y);
    r4.w = cmp(r1.w < r4.w);
    r5.x = max(r3.x, r3.y);
    r5.x = cmp(r5.x < r2.z);
    r4.w = r4.w ? r5.x : 0;
    if (r4.w != 0) {
      r3.w = r3.y * 0.25 + 0.25;
      r2.w = 1;
      r3.xyz = r3.xwz;
      r4.y = cb0[21].y;
      r4.z = 0;
    } else {
      r5.xyz = cb0[9].xyz * r1.yyy;
      r5.xyz = r1.xxx * cb0[8].xyz + r5.xyz;
      r5.xyz = r1.zzz * cb0[10].xyz + r5.xyz;
      r3.xyz = cb0[11].xyz + r5.xyz;
      r4.w = min(r3.x, r3.y);
      r4.w = cmp(r1.w < r4.w);
      r5.x = max(r3.x, r3.y);
      r5.x = cmp(r5.x < r2.z);
      r4.w = r4.w ? r5.x : 0;
      r5.x = cmp(r3.z < 1);
      r4.w = r4.w ? r5.x : 0;
      r5.x = cmp(r3.z >= 0);
      r4.w = r4.w ? r5.x : 0;
      if (r4.w != 0) {
        r3.w = r3.y * 0.25 + 0.5;
        r2.w = 1;
        r3.xyz = r3.xwz;
        r4.y = cb0[21].z;
        r4.z = 0;
      } else {
        r5.xyz = cb0[13].xyz * r1.yyy;
        r5.xyz = r1.xxx * cb0[12].xyz + r5.xyz;
        r1.xyz = r1.zzz * cb0[14].xyz + r5.xyz;
        r3.xyz = cb0[15].xyz + r1.xyz;
        r1.x = min(r3.x, r3.y);
        r1.x = cmp(r1.w < r1.x);
        r1.y = max(r3.x, r3.y);
        r1.y = cmp(r1.y < r2.z);
        r1.x = r1.y ? r1.x : 0;
        r1.y = cmp(r3.z < 1);
        r1.x = r1.y ? r1.x : 0;
        r1.y = cmp(r3.z >= 0);
        r1.x = r1.y ? r1.x : 0;
        r4.z = ~(int)r1.x;
        if (r1.x != 0) {
          r1.x = r3.y * 0.25 + 0.75;
          r1.yz = float2(1,1) / cb3[22].xy;
          r3.w = r3.y * 0.25 + 0.75;
          r1.yz = saturate(r3.xw * r1.yz);
          r5.xy = r1.yz * float2(-2,-2) + float2(3,3);
          r1.yz = r1.yz * r1.yz;
          r1.yz = r5.xy * r1.yz;
          r5.xy = float2(1,1) + -cb3[22].zw;
          r5.zw = -cb3[22].zw + r3.xw;
          r5.xy = float2(1,1) / r5.xy;
          r5.xy = saturate(r5.zw * r5.xy);
          r5.zw = r5.xy * float2(-2,-2) + float2(3,3);
          r5.xy = r5.xy * r5.xy;
          r5.xy = -r5.zw * r5.xy + float2(1,1);
          r1.y = min(r1.y, r1.z);
          r1.z = min(r5.x, r5.y);
          r2.w = min(r1.y, r1.z);
          r3.y = r1.x;
          r4.y = cb0[21].w;
        } else {
          r2.w = 1;
          r4.x = 1;
        }
      }
    }
  }
  r1.xy = float2(0.03125,0.03125) * r2.xy;
  r1.xy = t2.Sample(s0_s, r1.xy).xy;
  if (r4.z == 0) {
    r1.xyzw = r1.xyyx * float4(2,2,2,2) + float4(-1,-1,-1,-1);
    r2.x = min(0.999000013, r3.z);
    r2.yz = cb0[20].zw * r4.yy;
    r3.z = t5.SampleCmpLevelZero(s1_s, r3.xy, r2.x).x;
    r5.xyzw = float4(0.527836978,0.527836978,0.085868001,-0.085868001) * r1.wzzw;
    r4.yz = r5.xy + r5.zw;
    r4.yz = r4.yz * r2.yz + r3.xy;
    r3.w = t5.SampleCmpLevelZero(s1_s, r4.yz, r2.x).x;
    r3.z = r3.z + r3.w;
    r5.xyzw = float4(-0.0400880016,-0.0400880016,-0.536086977,0.536086977) * r1.wzzw;
    r4.yz = r5.xy + r5.zw;
    r4.yz = r4.yz * r2.yz + r3.xy;
    r3.w = t5.SampleCmpLevelZero(s1_s, r4.yz, r2.x).x;
    r3.z = r3.z + r3.w;
    r5.xyzw = float4(-0.670445025,-0.670445025,0.179949,-0.179949) * r1.wzzw;
    r4.yz = r5.xy + r5.zw;
    r4.yz = r4.yz * r2.yz + r3.xy;
    r3.w = t5.SampleCmpLevelZero(s1_s, r4.yz, r2.x).x;
    r3.z = r3.z + r3.w;
    r5.xyzw = float4(-0.419418007,-0.419418007,0.616038978,-0.616038978) * r1.wzzw;
    r4.yz = r5.xy + r5.zw;
    r4.yz = r4.yz * r2.yz + r3.xy;
    r3.w = t5.SampleCmpLevelZero(s1_s, r4.yz, r2.x).x;
    r3.z = r3.z + r3.w;
    r5.xyzw = float4(0.440452993,0.440452993,0.639398992,-0.639398992) * r1.wzzw;
    r4.yz = r5.xy + r5.zw;
    r4.yz = r4.yz * r2.yz + r3.xy;
    r3.w = t5.SampleCmpLevelZero(s1_s, r4.yz, r2.x).x;
    r3.z = r3.z + r3.w;
    r5.xyzw = float4(-0.757088006,-0.757088006,-0.349334002,0.349334002) * r1.wzzw;
    r4.yz = r5.xy + r5.zw;
    r4.yz = r4.yz * r2.yz + r3.xy;
    r3.w = t5.SampleCmpLevelZero(s1_s, r4.yz, r2.x).x;
    r3.z = r3.z + r3.w;
    r1.xyzw = float4(0.574618995,0.574618995,-0.685878992,0.685878992) * r1.xyzw;
    r1.xy = r1.xy + r1.zw;
    r1.xy = r1.xy * r2.yz + r3.xy;
    r1.x = t5.SampleCmpLevelZero(s1_s, r1.xy, r2.x).x;
    r1.x = r3.z + r1.x;
    r1.x = r1.x * 0.125 + -1;
    r4.x = r2.w * r1.x + 1;
  }
  r1.xy = cb3[5].xz * r0.yy;
  r0.xy = r0.xx * cb3[4].xz + r1.xy;
  r0.xy = r0.zz * cb3[6].xz + r0.xy;
  r0.xy = cb3[7].xz + r0.xy;
  r0.xy = r0.xy * cb0[28].xy + cb0[28].zw;
  r0.x = t3.Sample(s2_s, r0.xy).y;
  r0.y = 1 + -cb0[27].y;
  r0.x = saturate(r0.x * cb4[8].y + cb4[8].x);
  r0.x = cb0[27].y * r0.x + r0.y;
  r0.x = min(r4.x, r0.x);
  r0.yz = float2(0.03125,0.0625) * r0.ww;
  r0.yz = frac(r0.yz);
  r0.yz = cmp(r0.yz >= float2(0.5,0.5));
  r0.yz = r0.yz ? float2(1,1) : 0;
  r0.x = saturate(r0.x + r0.y);
  r0.y = t4.Sample(s3_s, v1.xy).x;
  r0.w = 1 + -r0.y;
  r0.y = r0.z * r0.w + r0.y;
  r0.y = -1 + r0.y;
  r0.y = cb4[13].z * r0.y + 1;
  o0.w = r0.x * r0.y;
  o0.xyz = float3(1,1,1);
  return;
}
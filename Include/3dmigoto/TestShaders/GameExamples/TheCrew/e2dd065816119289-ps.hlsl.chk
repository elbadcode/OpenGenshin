// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:41:50 2019

struct t0_struct
{
    float t0_float;                // Offset:    0
};

struct t1_struct
{
    float4 t1_index0;              // Offset:    0
    float3 t1_index16;             // Offset:   16
};

struct t2_struct
{
    float2 t2_float2;              // Offset:    0
};

struct t3_struct
{
    float t3_float;                // Offset:    0
};

cbuffer cb0 : register(b0)
{
  float4 cb0[12] : packoffset(c0);
}

cbuffer cb1 : register(b1)
{
  float4 cb1[12] : packoffset(c0);
}

cbuffer cb2 : register(b2)
{
  float4 cb2[16] : packoffset(c0);
}

cbuffer cb3 : register(b3)
{
  float4 cb3[5] : packoffset(c0);
}

SamplerState s0_s_s : register(s0);
SamplerState s1_s_s : register(s1);
StructuredBuffer<t0_struct> t0_buff : register(t0);
StructuredBuffer<t1_struct> t1_buff : register(t1);
StructuredBuffer<t2_struct> t2_buff : register(t2);
StructuredBuffer<t3_struct> t3_buff : register(t3);
Texture2DMS<float4> t4 : register(t4);
Texture2DMS<float4> t5 : register(t5);
Texture2D<float4> t6 : register(t6);
Texture2D<float4> t7 : register(t7);


// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 x0[16];
  x0[0].x = cb3[0].z;
  x0[1].x = cb3[0].w;
  x0[2].x = cb3[1].x;
  x0[3].x = cb3[1].y;
  x0[4].x = cb3[1].z;
  x0[5].x = cb3[1].w;
  x0[6].x = cb3[2].x;
  x0[7].x = cb3[2].y;
  x0[8].x = cb3[2].z;
  x0[9].x = cb3[2].w;
  x0[10].x = cb3[3].x;
  x0[11].x = cb3[3].y;
  x0[12].x = cb3[3].z;
  x0[13].x = cb3[3].w;
  x0[14].x = cb3[4].x;
  x0[15].x = cb3[4].y;
  r0.xy = cb0[11].zw * v0.xy;
  t4.GetDimensions(fDest.x, fDest.y, fDest.z);
  r0.zw = fDest.xy;
  r0.zw = r0.xy * r0.zw;
  r1.xy = (int2)r0.zw;
  r1.zw = float2(0,0);
  r1.xyzw = t4.Load(r1.xy, 0).xyzw;
  r2.xy = t6.Sample(s0_s_s, r0.xy).xy;
  t5.GetDimensions(fDest.x, fDest.y, fDest.z);
  r0.zw = fDest.xy;
  r0.zw = r0.xy * r0.zw;
  r3.xy = (int2)r0.zw;
  r3.zw = float2(0,0);
  r3.xyzw = t5.Load(r3.xy, 0).xyzw;
  r0.z = 255 * r3.z;
  r0.z = (uint)r0.z;
  r0.z = (int)r0.z & 15;
  if (r0.z == 0) {
    r0.w = 0.0773990005 * r3.x;
    r2.w = 0.0549999997 + r3.x;
    r2.w = 0.947866976 * r2.w;
    r2.w = log2(r2.w);
    r2.w = 2.4000001 * r2.w;
    r2.w = exp2(r2.w);
    r3.z = cmp(0.0404499993 >= r3.x);
    r0.w = r3.z ? r0.w : r2.w;
    r4.xyz = r1.xyz + r1.xyz;
    r2.w = dot(r4.xyz, float3(0.298999995,0.587000012,0.114));
    r2.w = saturate(r0.w / r2.w);
    r1.xyz = -r2.www * r4.xyz + r4.xyz;
    r3.z = r2.w * 2 + -1;
    r3.z = max(0, r3.z);
    r4.xyz = r2.www * r4.xyz + -r0.www;
    r4.xyz = r3.zzz * r4.xyz + r0.www;
    r3.xw = float2(0,0);
  } else {
    r4.xyz = float3(0,0,0);
  }
  r0.x = t7.Sample(s1_s_s, r0.xy).x;
  r0.x = cb0[9].y * r0.x;
  r0.yw = float2(0.03125,0.03125) * cb0[11].xy;
  r0.yw = ceil(r0.yw);
  r0.yw = float2(32,32) * r0.yw;
  r2.w = asint(cb3[0].x);
  r3.z = r0.x / cb3[0].y;
  r3.z = log2(r3.z);
  r3.z = 1 + r3.z;
  r3.z = saturate(r3.z / r2.w);
  r2.w = r3.z * r2.w;
  r2.w = (int)r2.w;
  r2.w = x0[r2.w+0].x;
  r5.xy = (uint2)r2.ww >> int2(24,16);
  r5.xy = (int2)r5.xy & int2(255,255);
  r2.w = (int)r2.w & 0x0000ffff;
  r5.yz = (int2)r5.xy;
  r5.yz = v0.xy * r5.yz;
  r0.yw = r5.yz / r0.yw;
  r0.yw = (int2)r0.yw;
  r0.w = mad((int)r0.w, (int)r5.x, (int)r2.w);
  r0.y = (int)r0.y + (int)r0.w;
  r0.y = t3_buff[r0.y].t3_float;
  r0.w = (uint)r0.y >> 24;
  r0.w = (int)r0.w & 255;
  r2.w = cmp((int)r0.w == 0);
  if (r0.w == 0) {
    o0.xyzw = float4(0,0,0,0);
  }
  if (r2.w == 0) {
    r2.z = 1;
    r2.w = dot(r2.xyz, r2.xyz);
    r2.xyz = r2.xyz / r2.www;
    r2.xyz = r2.xyz * float3(2,2,2) + float3(0,0,-1);
    r5.xy = cb0[10].zw * v1.xy;
    r0.y = (int)r0.y & 0x00ffffff;
    r5.z = -1;
    r6.xyz = r5.xyz * r0.xxx;
    r0.w = (int)r0.w + (int)r0.y;
    r7.xyz = float3(0,0,0);
    r8.xyz = float3(0,0,0);
    r9.xy = float2(0,1);
    r2.w = 1e+10;
    r3.z = r0.y;
    while (true) {
      r4.w = cmp((int)r0.w == (int)r3.z);
      if (r4.w != 0) break;
      r9.z = t2_buff[r3.z].t2_float2.x;
      r9.w = t2_buff[r3.z].t2_float2.y;
      r4.w = (uint)r9.z >> 16;
      r4.w = (int)r4.w & 0x0000ffff;
      r5.w = (int)r9.z & 0x0000ffff;
      r10.x = t1_buff[r4.w].t1_index0.x;
      r10.y = t1_buff[r4.w].t1_index0.y;
      r10.z = t1_buff[r4.w].t1_index0.z;
      r10.w = t1_buff[r4.w].t1_index0.w;
      r11.x = t1_buff[r5.w].t1_index0.x;
      r11.y = t1_buff[r5.w].t1_index0.y;
      r11.z = t1_buff[r5.w].t1_index0.z;
      r11.w = t1_buff[r5.w].t1_index0.w;
      r12.xyz = r5.xyz * r0.xxx + -r10.xyz;
      r11.xyzw = r11.xyzw + -r10.xyzw;
      r6.w = dot(r12.xyz, r11.xyz);
      r7.w = dot(r11.xyz, r11.xyz);
      r6.w = saturate(r6.w / r7.w);
      r10.xyzw = r6.wwww * r11.xyzw + r10.xyzw;
      r10.xyz = -r5.xyz * r0.xxx + r10.xyz;
      r11.x = t1_buff[r4.w].t1_index16.x;
      r11.y = t1_buff[r4.w].t1_index16.y;
      r11.z = t1_buff[r4.w].t1_index16.z;
      r12.x = t1_buff[r5.w].t1_index16.x;
      r12.y = t1_buff[r5.w].t1_index16.y;
      r12.z = t1_buff[r5.w].t1_index16.z;
      r12.xyz = r12.xyz + -r11.xyz;
      r11.xyz = r6.www * r12.xyz + r11.xyz;
      r4.w = dot(r10.xyz, r10.xyz);
      r4.w = sqrt(r4.w);
      r5.w = 0.899999976 * r10.w;
      r4.w = r4.w / r5.w;
      r5.w = r4.w + -r2.w;
      r5.w = saturate(r5.w * 5 + 0.5);
      r6.w = -r4.w + r2.w;
      r4.w = r5.w * r6.w + r4.w;
      r6.w = 0.100000001 * r5.w;
      r7.w = 1 + -r5.w;
      r2.w = -r6.w * r7.w + r4.w;
      r12.xyz = -r10.xyz + r7.xyz;
      r7.xyz = r5.www * r12.xyz + r10.xyz;
      r10.xyz = -r11.xyz + r8.xyz;
      r8.xyz = r5.www * r10.xyz + r11.xyz;
      r4.w = -r10.w + r9.x;
      r9.x = r5.w * r4.w + r10.w;
      r4.w = r9.y + -r9.w;
      r9.y = r5.w * r4.w + r9.w;
      r3.z = (int)r3.z + 1;
    }
    r0.x = saturate(r2.w);
    r0.y = r0.x * r0.x + 1;
    r0.y = sqrt(r0.y);
    r0.x = r0.x / r0.y;
    r0.x = 0.707107008 + -r0.x;
    r0.x = r0.x * r9.y;
    r0.x = r3.y * r0.x;
    r0.x = 1.41421402 * r0.x;
    r0.y = 0.5 * r9.x;
    r5.xyz = r0.yyy * cb0[6].xyz + r7.xyz;
    r0.y = dot(r5.xyz, r5.xyz);
    r0.y = rsqrt(r0.y);
    r7.xyz = r5.xyz * r0.yyy;
    r0.w = dot(r6.xyz, r6.xyz);
    r3.y = sqrt(r0.w);
    r3.y = -200 + r3.y;
    r3.y = saturate(0.00124999997 * r3.y);
    r3.y = 1 + r3.y;
    r0.x = r3.y * r0.x;
    r0.w = rsqrt(r0.w);
    r6.xyz = r6.xyz * r0.www;
    r0.w = saturate(dot(r2.xyz, r7.xyz));
    r2.w = 1 + r2.w;
    r2.w = 1.79999995 * r2.w;
    r0.w = -r0.w * r0.w + 1;
    r0.w = sqrt(r0.w);
    r0.w = r2.w * r0.w + 1;
    r0.w = 1 / r0.w;
    r5.xyz = -r5.xyz * r0.yyy + r2.xyz;
    r5.xyz = r0.www * r5.xyz + r7.xyz;
    r0.y = dot(r5.xyz, r5.xyz);
    r0.y = rsqrt(r0.y);
    r7.xyz = r5.xyz * r0.yyy;
    r8.xyz = r0.xxx * r8.xyz;
    r0.x = saturate(dot(r2.xyz, r7.xyz));
    r8.xyz = r8.xyz * r0.xxx;
    r0.w = 1 + -r1.w;
    r2.w = dot(r2.xyz, -r6.xyz);
    r2.w = max(9.99999997e-07, abs(r2.w));
    r5.xyz = r5.xyz * r0.yyy + -r6.xyz;
    r0.y = dot(r5.xyz, r5.xyz);
    r0.y = rsqrt(r0.y);
    r5.xyz = r5.xyz * r0.yyy;
    r0.y = saturate(dot(r7.xyz, r5.xyz));
    r3.y = saturate(dot(r2.xyz, r5.xyz));
    if (r0.z == 0) {
      r3.z = r0.w * r0.w;
      r3.z = max(0.000500000024, r3.z);
      r4.w = 2 + -r1.w;
      r4.w = 0.5 * r4.w;
      r4.w = r4.w * r4.w;
      r4.w = max(0.000500000024, r4.w);
      r5.w = r0.w * -0.337747991 + 1;
      r6.w = r0.y * r0.y;
      r6.w = dot(r6.ww, r0.ww);
      r6.w = r0.w * 0.5 + r6.w;
      r6.w = -1 + r6.w;
      r7.w = r0.x * -5.55471992 + -6.98316002;
      r7.w = r7.w * r0.x;
      r7.w = exp2(r7.w);
      r7.w = r6.w * r7.w + 1;
      r8.w = r2.w * -5.55471992 + -6.98316002;
      r8.w = r8.w * r2.w;
      r8.w = exp2(r8.w);
      r6.w = r6.w * r8.w + 1;
      r6.w = r7.w * r6.w;
      r5.w = r6.w * r5.w;
      r5.w = 0.318309993 * r5.w;
      r9.xyz = float3(1,1,1) + -r4.xyz;
      r6.w = r0.y * -5.55471992 + -6.98316002;
      r6.w = r6.w * r0.y;
      r6.w = exp2(r6.w);
      r4.xyz = r9.xyz * r6.www + r4.xyz;
      r6.w = 0.5 * r4.w;
      r4.w = -r4.w * 0.5 + 1;
      r7.w = r0.x * r4.w + r6.w;
      r7.w = 1 / r7.w;
      r4.w = r2.w * r4.w + r6.w;
      r4.w = 1 / r4.w;
      r4.w = r7.w * r4.w;
      r4.w = 0.25 * r4.w;
      r6.w = r3.z * r3.z;
      r7.w = r3.y * r3.y;
      r3.z = r3.z * r3.z + -1;
      r3.z = r7.w * r3.z + 1;
      r3.z = r3.z * r3.z;
      r3.z = 3.14159298 * r3.z;
      r3.z = r6.w / r3.z;
      r4.xyz = r3.zzz * r4.xyz;
      r4.xyz = r4.xyz * r4.www;
      r4.xyz = r5.www * r1.xyz + r4.xyz;
    } else {
      r3.z = -cb2[r0.z+0].y + 1;
      r9.xyz = r3.xxx * -r1.xyz + r1.xyz;
      r10.xyz = float3(-0.0399999991,-0.0399999991,-0.0399999991) + r1.xyz;
      r10.xyz = r3.xxx * r10.xyz + float3(0.0399999991,0.0399999991,0.0399999991);
      r0.z = cb2[r0.z+0].x + -1;
      r0.z = r3.w * r0.z + 1;
      r3.z = r3.z + -r0.w;
      r3.z = r3.w * r3.z + r0.w;
      r11.xyz = float3(0.0399999991,0.0399999991,0.0399999991) + -r10.xyz;
      r10.xyz = r3.www * r11.xyz + r10.xyz;
      r4.w = r0.w * r0.w;
      r4.w = max(0.000500000024, r4.w);
      r1.w = 2 + -r1.w;
      r1.w = 0.5 * r1.w;
      r1.w = r1.w * r1.w;
      r1.w = max(0.000500000024, r1.w);
      r5.w = r3.z * r3.z;
      r5.w = max(0.000500000024, r5.w);
      r3.z = 1 + r3.z;
      r3.z = 0.5 * r3.z;
      r3.z = r3.z * r3.z;
      r3.z = max(0.000500000024, r3.z);
      r11.xyz = float3(1,1,1) + -r10.xyz;
      r6.w = r0.y * -5.55471992 + -6.98316002;
      r6.w = r6.w * r0.y;
      r6.w = exp2(r6.w);
      r10.xyz = r11.xyz * r6.www + r10.xyz;
      r11.xyz = -r10.xyz * r3.www + float3(1,1,1);
      r6.w = 0.5 * r3.z;
      r3.z = -r3.z * 0.5 + 1;
      r7.w = r0.x * r3.z + r6.w;
      r7.w = 1 / r7.w;
      r3.z = r2.w * r3.z + r6.w;
      r3.z = 1 / r3.z;
      r3.z = r7.w * r3.z;
      r3.z = 0.25 * r3.z;
      r10.xyz = r10.xyz * r3.zzz;
      r3.z = r5.w * r5.w;
      r3.y = r3.y * r3.y;
      r5.w = r5.w * r5.w + -1;
      r3.y = r3.y * r5.w + 1;
      r3.y = r3.y * r3.y;
      r3.y = 3.14159298 * r3.y;
      r3.y = r3.z / r3.y;
      r3.z = dot(r7.xyz, -r5.xyz);
      r5.w = r3.z * -0.260500014 + 0.669130027;
      r3.z = r5.w * r3.z + -0.74921;
      r12.xyz = r3.zzz * -r5.xyz;
      r7.xyz = r7.xyz * float3(-0.666670024,-0.666670024,-0.666670024) + r12.xyz;
      r3.z = dot(-r6.xyz, -r5.xyz);
      r5.w = r3.z * -0.260500014 + 0.669130027;
      r3.z = r5.w * r3.z + -0.74921;
      r12.xyz = r3.zzz * -r5.xyz;
      r6.xyz = r6.xyz * float3(0.666670024,0.666670024,0.666670024) + r12.xyz;
      r3.z = dot(r6.xyz, r5.xyz);
      r3.z = -r3.z * r3.z + 1;
      r5.x = cmp(0.444444001 < r3.z);
      if (r5.x != 0) {
        r5.y = 1;
      }
      if (r5.x == 0) {
        r3.z = -r3.z * 2.25 + 1;
        r3.z = sqrt(r3.z);
        r5.x = r3.z * -5.55471992 + -6.98316002;
        r3.z = r5.x * r3.z;
        r3.z = exp2(r3.z);
        r5.y = r3.z * 0.959999979 + 0.0399999991;
      }
      r3.z = -r5.y * r3.w + 1;
      r5.xyz = r6.xyz + r7.xyz;
      r5.w = dot(r5.xyz, r5.xyz);
      r5.w = rsqrt(r5.w);
      r5.xyz = r5.xyz * r5.www;
      r5.x = saturate(dot(r2.xyz, r5.xyz));
      r5.y = saturate(dot(r2.xyz, r7.xyz));
      r2.x = saturate(dot(r2.xyz, r6.xyz));
      r1.xyz = log2(r1.xyz);
      r1.xyz = r1.xyz * r0.zzz;
      r1.xyz = exp2(r1.xyz);
      r1.xyz = r1.xyz * r3.xxx;
      r1.xyz = r1.xyz * r3.www;
      r1.xyz = float3(0.853100002,0.882367015,0.871563971) * r1.xyz;
      r0.z = r0.w * -0.337747991 + 1;
      r0.y = r0.y * r0.y;
      r0.y = dot(r0.yy, r0.ww);
      r0.y = r0.w * 0.5 + r0.y;
      r0.y = -1 + r0.y;
      r0.w = r0.x * -5.55471992 + -6.98316002;
      r0.x = r0.w * r0.x;
      r0.x = exp2(r0.x);
      r0.x = r0.y * r0.x + 1;
      r0.w = r2.w * -5.55471992 + -6.98316002;
      r0.w = r0.w * r2.w;
      r0.w = exp2(r0.w);
      r0.y = r0.y * r0.w + 1;
      r0.x = r0.x * r0.y;
      r0.x = r0.x * r0.z;
      r0.y = 0.5 * r1.w;
      r0.z = -r1.w * 0.5 + 1;
      r0.w = r5.y * r0.z + r0.y;
      r0.w = 1 / r0.w;
      r0.y = r2.x * r0.z + r0.y;
      r0.y = 1 / r0.y;
      r0.y = r0.w * r0.y;
      r0.xy = float2(0.318309993,0.25) * r0.xy;
      r0.yzw = r1.xyz * r0.yyy;
      r1.x = r4.w * r4.w;
      r1.y = r5.x * r5.x;
      r1.z = r4.w * r4.w + -1;
      r1.y = r1.y * r1.z + 1;
      r1.y = r1.y * r1.y;
      r1.y = 3.14159298 * r1.y;
      r1.x = r1.x / r1.y;
      r0.yzw = r1.xxx * r0.yzw;
      r0.xyz = r0.xxx * r9.xyz + r0.yzw;
      r0.xyz = r11.xyz * r0.xyz;
      r0.xyz = r0.xyz * r3.zzz;
      r4.xyz = r10.xyz * r3.yyy + r0.xyz;
    }
    r0.xyz = r8.xyz * r4.xyz;
    r0.w = cb1[11].y + cb1[11].y;
    r0.xyz = r0.xyz * r0.www;
    r0.w = t0_buff[0].t0_float;
    r0.xyz = r0.xyz * r0.www;
    o0.xyz = min(float3(55000,55000,55000), r0.xyz);
    o0.w = 1;
  }
  return;
}
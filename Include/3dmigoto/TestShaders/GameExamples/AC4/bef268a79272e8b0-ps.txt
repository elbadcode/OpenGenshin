//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer RainDropSystemConstantscb
// {
//
//   struct RainDropSystemConstants
//   {
//       
//       float4x4 m_View;               // Offset:    0
//       float4x4 m_InvView;            // Offset:   64
//       float4x4 m_ViewProjection;     // Offset:  128
//       float4x4 m_InvViewProjection;  // Offset:  192
//       float4x4 m_InvProjection;      // Offset:  256
//       float4 m_ZConstants;           // Offset:  320
//       float4 m_CameraPosition;       // Offset:  336
//       float4 m_CameraDirection;      // Offset:  352
//       float4 m_FocusDistances;       // Offset:  368
//       float4 m_RainDropParams;       // Offset:  384
//       float4 m_ShapeParams_And_DOF_InterpolationDistanceRatio;// Offset:  400
//       uint4 m_ClusterIndex;          // Offset:  416
//       uint4 m_RainDropCountInCluster;// Offset:  432
//       float4 m_DeltaTime;            // Offset:  448
//       uint4 m_ActiveClustersFlag;    // Offset:  464
//       float4 m_ScreenSize;           // Offset:  480
//       float4 m_UseExtraLights;       // Offset:  496
//       float4 m_OmniLight0_PositionFar;// Offset:  512
//       float4 m_OmniLight0_ColorFade; // Offset:  528
//       float4 m_OmniLight1_PositionFar;// Offset:  544
//       float4 m_OmniLight1_ColorFade; // Offset:  560
//       float4 m_OmniLight2_PositionFar;// Offset:  576
//       float4 m_OmniLight2_ColorFade; // Offset:  592
//       float4 m_OmniLight3_PositionFar;// Offset:  608
//       float4 m_OmniLight3_ColorFade; // Offset:  624
//       float4 m_OmniLight4_PositionFar;// Offset:  640
//       float4 m_OmniLight4_ColorFade; // Offset:  656
//       float4 m_OmniLight5_PositionFar;// Offset:  672
//       float4 m_OmniLight5_ColorFade; // Offset:  688
//       float4 m_OmniLight6_PositionFar;// Offset:  704
//       float4 m_OmniLight6_ColorFade; // Offset:  720
//       float4 m_OmniLight7_PositionFar;// Offset:  736
//       float4 m_OmniLight7_ColorFade; // Offset:  752
//       float4 m_DirectionLight0_Direction;// Offset:  768
//       float4 m_DirectionLight0_Color;// Offset:  784
//       float4 m_SpotLight0_PositionFar;// Offset:  800
//       float4 m_SpotLight0_ColorFade; // Offset:  816
//       float4 m_SpotLight0_Direction; // Offset:  832
//       float4 m_SpotLight0_ConeAngles;// Offset:  848
//       float4 m_XYExtents;            // Offset:  864
//       float4 m_ZExtents;             // Offset:  880
//       float4 m_StartVelocity;        // Offset:  896
//       float4 m_StartVelocityVariance;// Offset:  912
//       float4 m_StartDirection;       // Offset:  928
//       float4 m_StartDirectionVariance;// Offset:  944
//       float4 m_RainDropRippleLife;   // Offset:  960
//       float4 m_RainDropRippleLifeVariance;// Offset:  976
//       float4 m_RandomSeed;           // Offset:  992
//       uint4 m_InitialRandomIndexAndMax;// Offset: 1008
//       float4 m_BounceParams;         // Offset: 1024
//       float4 m_GlobalWind;           // Offset: 1040
//       float4 m_GlobalWindPrecomputed;// Offset: 1056
//       float4 m_GlobalWindPrecomputed2;// Offset: 1072
//       float4 m_RippleParamsSet1;     // Offset: 1088
//       float4 m_RippleParamsSet2;     // Offset: 1104
//       float4 m_RippleParamsSet3;     // Offset: 1120
//       float4 m_DropletParamsSet1;    // Offset: 1136
//       float4 m_DropletParamsSet2;    // Offset: 1152
//       float4 m_RippleImpactSurfaceSizeAndInvSize;// Offset: 1168
//       float4 m_DropletSurfaceSizeAndInvSize;// Offset: 1184
//       float4x4 m_RainMatrix;         // Offset: 1200
//       float4 m_RainScale;            // Offset: 1264
//       float4 m_RainOffset;           // Offset: 1280
//       float4 m_WorldAOParameters;    // Offset: 1296
//       float4 m_WorldAORangeParameters;// Offset: 1312
//       float4 m_WorldLightmapUVParameters;// Offset: 1328
//
//   } g_RainDropSystemConstants;       // Offset:    0 Size:  1344
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// TrilinearAndWrapSamplerState      sampler      NA          NA    1        1
// LinearAndClampSamplerState        sampler      NA          NA    3        1
// SourceRippleHeightTexture         texture   float          2d    1        1
// DepthTexture                      texture   float          2d    2        1
// NormalTexture                     texture  float4          2d    3        1
// AlbedoTexture                     texture  float4          2d    4        1
// WorldAOTexture                    texture  float4          2d   14        1
// RainDropSystemConstantscb         cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb2[84], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 6
add r0.xy, v0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
ftoi r0.xy, r0.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.x, r0.xyww, t4.wxyz
add r1.y, r1.x, l(-0.000100)
lt r1.y, r1.y, l(0.000000)
discard_nz r1.y
resinfo_indexable(texture2d)(float,float,float,float) r1.yz, l(0), t3.zxyw
ld_indexable(texture2d)(float,float,float,float) r2.z, r0.xyww, t2.yzxw
div r1.yz, l(1.000000, 1.000000, 1.000000, 1.000000), r1.yyzy
mad r2.xy, v0.xyxx, r1.yzyy, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r2.xyz, r2.xyzx, l(2.000000, -2.000000, 1.000000, 0.000000)
mov r2.w, l(1.000000)
dp4 r3.x, r2.xyzw, cb2[12].xyzw
dp4 r3.y, r2.xyzw, cb2[13].xyzw
dp4 r3.z, r2.xyzw, cb2[14].xyzw
dp4 r1.y, r2.xyzw, cb2[15].xyzw
div r1.yzw, r3.xxyz, r1.yyyy
add r1.yzw, r1.yyzw, cb2[21].xxyz
add r2.xyz, -r1.yzwy, cb2[21].xyzx
dp3 r2.x, r2.xyzx, r2.xyzx
sqrt r2.x, r2.x
ld_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyzw, t3.xyzw
mad r0.xyzw, r0.zxyz, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.100000, -1.000000, -1.000000, -1.000000)
mov_sat r0.x, r0.x
mul r0.x, r0.x, r0.x
dp2_sat r0.x, r0.xxxx, r1.xxxx
add r1.x, r0.x, l(-0.010000)
lt r1.x, r1.x, l(0.000000)
lt r2.y, l(80.000000), r2.x
or r1.x, r1.x, r2.y
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb2[68].x
mov r3.x, -cb2[73].z
mov r3.yw, l(0,0,0,0)
mad r2.zw, r1.yyyz, r2.yyyy, r3.xxxy
sample_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t1.yzxw, s1
mov r3.z, cb2[73].z
mad r4.xy, r1.yzyy, r2.yyyy, r3.zwzz
sample_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t1.yzwx, s1
mov r4.xz, l(0,0,0,0)
mov r4.y, -cb2[73].w
mad r5.xy, r1.yzyy, r2.yyyy, r4.xyxx
sample_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t1.xyzw, s1
mov r4.w, cb2[73].w
mad r5.yz, r1.yyzy, r2.yyyy, r4.zzwz
sample_indexable(texture2d)(float,float,float,float) r2.y, r5.yzyy, t1.yxzw, s1
mad r3.xyzw, r1.yzyz, cb2[70].wwww, r3.xyzw
sample_indexable(texture2d)(float,float,float,float) r3.x, r3.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r3.y, r3.zwzz, t1.yxzw, s1
mad r4.xyzw, r1.yzyz, cb2[70].wwww, r4.xyzw
sample_indexable(texture2d)(float,float,float,float) r3.z, r4.xyxx, t1.yzxw, s1
sample_indexable(texture2d)(float,float,float,float) r3.w, r4.zwzz, t1.yzwx, s1
if_nz r1.x
  mad o0.xyz, r0.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  mov o0.w, l(1.000000)
  ret 
endif 
ne r1.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb2[24].z
if_nz r1.x
  mad r1.xyz, r0.yzwy, cb2[81].xxyx, r1.yzwy
  mad r1.xy, r1.xyxx, cb2[83].zwzz, cb2[83].xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t14.xyzw, s3, l(0.000000)
  mad r1.x, r1.x, cb2[82].z, cb2[82].w
  add r1.y, r1.z, cb2[82].x
  add r1.x, -r1.x, r1.y
  div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb2[82].x
  mul_sat r1.x, r1.y, r1.x
  mul r1.y, r1.x, r1.x
  mul r1.y, r1.y, r1.y
  mul r1.z, r1.y, r1.x
  mad r1.x, r1.x, r1.y, l(-0.010000)
  lt r1.x, r1.x, l(0.000000)
  discard_nz r1.x
else 
  mov r1.z, l(1.000000)
endif 
add r1.x, -r2.z, r2.w
add r1.y, -r5.x, r2.y
add r1.w, -r3.x, r3.y
add r2.y, -r3.z, r3.w
mul r2.x, r2.x, l(0.050000)
min r2.x, r2.x, l(1.000000)
add r1.w, -r1.x, r1.w
mad r3.x, r2.x, r1.w, r1.x
add r1.x, -r1.y, r2.y
mad r3.y, r2.x, r1.x, r1.y
mov r3.z, l(1.000000)
mul r1.xyw, r0.xxxx, r3.xyxz
mul r1.xyw, r1.xyxw, cb2[68].wwww
mad r0.xyz, r1.xywx, r1.zzzz, r0.yzwy
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad o0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 96 instruction slots used
 
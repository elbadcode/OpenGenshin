//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 g_AmbientCube[3];           // Offset:    0 Size:    48 [unused]
//   float4 g_LayeredSkyUserColor;      // Offset:   48 Size:    16 [unused]
//   float4 g_LayeredSkyUserColor3;     // Offset:   64 Size:    16 [unused]
//   float4 g_LayeredSkyUserColor4;     // Offset:   80 Size:    16 [unused]
//   float4 g_CurrentTime;              // Offset:   96 Size:    16 [unused]
//   float4 g_HorizonTextureBlend;      // Offset:  112 Size:    16 [unused]
//   float4 g_SunColor;                 // Offset:  128 Size:    16 [unused]
//   float4 g_SunDirection;             // Offset:  144 Size:    16 [unused]
//   float4 g_WorldLoadingRange;        // Offset:  160 Size:    16 [unused]
//   float4 g_GlobalWindPS;             // Offset:  176 Size:    16 [unused]
//   float4 g_SkySpritePosition;        // Offset:  192 Size:    16 [unused]
//   float4 g_VPOSReverseParams;        // Offset:  208 Size:    16 [unused]
//   float4 RainUVScroll;               // Offset:  240 Size:    16 [unused]
//   float4 g_RenderingReflections;     // Offset:  272 Size:    16 [unused]
//   float4 g_ViewportScaleOffset;      // Offset:  288 Size:    16 [unused]
//   float4 g_VPosToUV;                 // Offset:  304 Size:    16 [unused]
//   float4 g_ReverseProjectionParams;  // Offset:  320 Size:    16 [unused]
//   float2 g_ReverseProjectionParams2; // Offset:  336 Size:     8 [unused]
//   float4x4 g_ViewToWorld;            // Offset:  352 Size:    64 [unused]
//   float4x4 g_WorldToView;            // Offset:  416 Size:    64
//   float4 g_WorldEntityPosition;      // Offset:  480 Size:    16 [unused]
//   float4 g_EntityRandomSeed;         // Offset:  496 Size:    16 [unused]
//   float4 g_BoundingVolumeSize;       // Offset:  512 Size:    16 [unused]
//   float4 g_EntityToCameraDistance;   // Offset:  528 Size:    16 [unused]
//   float4 g_LODBlendFactor;           // Offset:  544 Size:    16 [unused]
//   float4 g_WeatherInfo;              // Offset:  560 Size:    16 [unused]
//   float4 g_FogWeatherParams;         // Offset:  576 Size:    16 [unused]
//   float4 g_FogParams;                // Offset:  592 Size:    16 [unused]
//   float4 g_MainPlayerPosition;       // Offset:  608 Size:    16 [unused]
//   float4 g_EyeDirection;             // Offset:  624 Size:    16 [unused]
//   float4 g_EyePosition;              // Offset:  640 Size:    16 [unused]
//   float4 g_DisolveFactor;            // Offset:  656 Size:    16 [unused]
//   float4 g_LightShaftColor;          // Offset:  672 Size:    16 [unused]
//   float4 g_LightShaftFade;           // Offset:  688 Size:    16 [unused]
//   float4 g_LightShaftFade2;          // Offset:  704 Size:    16 [unused]
//   float4 g_EagleVisionColor;         // Offset:  720 Size:    16 [unused]
//   float4 g_FogColor;                 // Offset:  960 Size:    16 [unused]
//   float4 g_FogSunBackColor;          // Offset:  976 Size:    16 [unused]
//   float g_AlphaTestValue;            // Offset:  992 Size:     4 [unused]
//   float4 g_NormalScale;              // Offset: 1008 Size:    16 [unused]
//   
//   struct OmniLight
//   {
//       
//       float4 m_PositionFar;          // Offset: 1024
//       float4 m_ColorFade;            // Offset: 1040
//
//   } g_OmniLights[4];                 // Offset: 1024 Size:   128 [unused]
//   
//   struct DirectLight
//   {
//       
//       float3 m_Direction;            // Offset: 1152
//       float4 m_Color;                // Offset: 1168
//
//   } g_DirectLights[2];               // Offset: 1152 Size:    64 [unused]
//   
//   struct SpotLight
//   {
//       
//       float4 m_PositionFar;          // Offset: 1216
//       float4 m_ColorFade;            // Offset: 1232
//       float4 m_Direction;            // Offset: 1248
//       float4 m_ConeAngles;           // Offset: 1264
//
//   } g_SpotLights[2];                 // Offset: 1216 Size:   128 [unused]
//   
//   struct SunLight
//   {
//       
//       float3 m_Direction;            // Offset: 1344
//       float4 m_Color;                // Offset: 1360
//       float3 m_SpecularDirection;    // Offset: 1376
//
//   } g_ShadowedDirect;                // Offset: 1344 Size:    44 [unused]
//   float4 g_ProjWorldToLight[8];      // Offset: 1392 Size:   128 [unused]
//   float4 g_LightingIrradianceCoeffsR;// Offset: 1520 Size:    16 [unused]
//   float4 g_LightingIrradianceCoeffsG;// Offset: 1536 Size:    16 [unused]
//   float4 g_LightingIrradianceCoeffsB;// Offset: 1552 Size:    16 [unused]
//   float4 g_ProjShadowParams[2];      // Offset: 1568 Size:    32 [unused]
//   float4 g_EntityUniqueIDCol;        // Offset: 1920 Size:    16 [unused]
//   float4 g_MaterialUniqueIDCol;      // Offset: 1936 Size:    16 [unused]
//   float4 g_ShaderUniqueIDCol;        // Offset: 1952 Size:    16 [unused]
//   float4 g_SelectionOverlayCol;      // Offset: 1968 Size:    16 [unused]
//   float4 g_ConstDebugReferencePS;    // Offset: 1984 Size:    16 [unused]
//   float4 g_PickingID;                // Offset: 2000 Size:    16 [unused]
//   float4 g_PixelPosToUV;             // Offset: 2048 Size:    16
//   float4 g_ScreenResolution;         // Offset: 2064 Size:    16
//   float4 g_SSAOControl;              // Offset: 2080 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// linearSamp                        sampler      NA          NA    1        1
// CS_Z_buffer                       texture   float          2d    0        1
// Normals                           texture  float4          2d    1        1
// reproject                         texture  float4          2d    3        1
// motion                            texture  float2          2d    4        1
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[131], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 10
ftoi r0.xy, v0.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.x, r0.xyww, t0.xyzw
round_z r1.yz, v0.xxyx
mad r2.xy, r1.yzyy, cb0[128].xyxx, cb0[128].zwzz
mul r2.xy, r1.xxxx, r2.xyxx
mul_sat r1.w, r1.x, l(-0.011111)
mul r2.w, r1.w, l(256.000000)
round_ni r2.w, r2.w
mul r3.y, r2.w, l(0.003906)
mad r3.z, r1.w, l(256.000000), -r2.w
lt r2.w, r1.x, l(-90.000000)
lt r3.x, l(-0.400000), r1.x
or r2.w, r2.w, r3.x
ilt r3.xw, r0.xxxy, l(16, 0, 0, 16)
or r3.x, r3.w, r3.x
or r2.w, r2.w, r3.x
add r3.xw, l(-16.000000, 0.000000, 0.000000, -16.000000), cb0[129].xxxy
ge r1.yz, r1.yyzy, r3.xxwx
or r1.y, r1.z, r1.y
or r1.y, r1.y, r2.w
imul null, r1.z, l(3), r0.x
imad r2.w, r0.x, r0.y, r0.y
xor r1.z, r1.z, r2.w
imul null, r1.z, r1.z, l(10)
itof r1.z, r1.z
add r1.z, r1.z, cb0[130].z
ld_indexable(texture2d)(float,float,float,float) r4.xyz, r0.xyww, t1.xyzw
add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r4.xyz, r4.xyzx, r4.xyzx
dp3 r5.x, r4.xyzx, cb0[26].xyzx
dp3 r5.y, r4.xyzx, cb0[27].xyzx
dp3 r5.z, r4.xyzx, cb0[28].xyzx
dp3 r2.w, r5.xyzx, r5.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, r5.xyzx
resinfo_indexable(texture2d)(float,float,float,float)_uint r2.w, l(0), t0.xzwy
utof r2.w, r2.w
mul r2.w, r2.w, l(-0.933333)
min r3.x, r1.x, l(-0.100000)
div r2.w, r2.w, r3.x
add r5.xyzw, r1.zzzz, l(13.416364, 40.249092, 67.081818, 93.914543)
sincos r3.x, r6.x, r5.x
mul r7.xyzw, r2.wwww, l(0.045455, 0.136364, 0.227273, 0.318182)
log r8.xyzw, r7.xyzw
round_ni r8.xyzw, r8.xyzw
ftoi r8.xyzw, r8.xyzw
iadd r8.xyzw, r8.xyzw, l(-3, -3, -3, -3)
imax r8.xyzw, r8.xyzw, l(0, 0, 0, 0)
imin r8.xyzw, r8.xyzw, l(5, 5, 5, 5)
mov r6.y, r3.x
mul r3.xw, r6.xxxy, r7.xxxx
ftoi r3.xw, r3.xxxw
iadd r3.xw, r3.xxxw, r0.xxxy
ishr r6.xy, r3.xwxx, r8.xxxx
mov r6.zw, r8.xxxx
ld_indexable(texture2d)(float,float,float,float) r6.z, r6.xyzw, t0.yzxw
itof r3.xw, r3.xxxw
mad r3.xw, r3.xxxw, cb0[128].xxxy, cb0[128].zzzw
mul r6.xy, r6.zzzz, r3.xwxx
mov r2.z, r1.x
add r6.xyz, -r2.xyzx, r6.xyzx
dp3 r3.x, r6.xyzx, r6.xyzx
dp3 r3.w, r6.xyzx, r4.xyzx
add r4.w, -r3.x, l(1.440000)
max r4.w, r4.w, l(0.000000)
mul r5.x, r4.w, r4.w
mul r4.w, r4.w, r5.x
add r3.w, r3.w, l(-0.025000)
add r3.x, r3.x, l(0.020000)
div r3.x, r3.w, r3.x
sincos r5.x, r6.x, r5.y
mov r6.y, r5.x
mul r5.xy, r6.xyxx, r7.yyyy
ftoi r5.xy, r5.xyxx
iadd r5.xy, r5.xyxx, r0.xyxx
ishr r6.xy, r5.xyxx, r8.yyyy
mov r6.zw, r8.yyyy
ld_indexable(texture2d)(float,float,float,float) r6.z, r6.xyzw, t0.yzxw
itof r5.xy, r5.xyxx
mad r5.xy, r5.xyxx, cb0[128].xyxx, cb0[128].zwzz
mul r6.xy, r6.zzzz, r5.xyxx
add r6.xyz, -r2.xyzx, r6.xyzx
dp3 r3.w, r6.xyzx, r6.xyzx
dp3 r5.x, r6.xyzx, r4.xyzx
add r5.y, -r3.w, l(1.440000)
max r5.y, r5.y, l(0.000000)
mul r6.x, r5.y, r5.y
mul r5.y, r5.y, r6.x
add r5.x, r5.x, l(-0.025000)
add r3.w, r3.w, l(0.020000)
div r3.w, r5.x, r3.w
max r3.xw, r3.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r3.w, r3.w, r5.y
mad r3.x, r4.w, r3.x, r3.w
sincos r5.x, r6.x, r5.z
mov r6.y, r5.x
mul r5.xy, r6.xyxx, r7.zzzz
ftoi r5.xy, r5.xyxx
iadd r5.xy, r5.xyxx, r0.xyxx
ishr r6.xy, r5.xyxx, r8.zzzz
mov r6.zw, r8.zzzz
ld_indexable(texture2d)(float,float,float,float) r6.z, r6.xyzw, t0.yzxw
itof r5.xy, r5.xyxx
mad r5.xy, r5.xyxx, cb0[128].xyxx, cb0[128].zwzz
mul r6.xy, r6.zzzz, r5.xyxx
add r5.xyz, -r2.xyzx, r6.xyzx
dp3 r3.w, r5.xyzx, r5.xyzx
dp3 r4.w, r5.xyzx, r4.xyzx
add r5.x, -r3.w, l(1.440000)
max r5.x, r5.x, l(0.000000)
mul r5.y, r5.x, r5.x
mul r5.x, r5.x, r5.y
add r4.w, r4.w, l(-0.025000)
add r3.w, r3.w, l(0.020000)
div r3.w, r4.w, r3.w
max r3.w, r3.w, l(0.000000)
mad r3.x, r5.x, r3.w, r3.x
sincos r5.x, r6.x, r5.w
mov r6.y, r5.x
mul r5.xy, r6.xyxx, r7.wwww
ftoi r5.xy, r5.xyxx
iadd r5.xy, r5.xyxx, r0.xyxx
ishr r6.xy, r5.xyxx, r8.wwww
mov r6.zw, r8.wwww
ld_indexable(texture2d)(float,float,float,float) r6.z, r6.xyzw, t0.yzxw
itof r5.xy, r5.xyxx
mad r5.xy, r5.xyxx, cb0[128].xyxx, cb0[128].zwzz
mul r6.xy, r6.zzzz, r5.xyxx
add r5.xyz, -r2.xyzx, r6.xyzx
dp3 r3.w, r5.xyzx, r5.xyzx
dp3 r4.w, r5.xyzx, r4.xyzx
add r5.x, -r3.w, l(1.440000)
max r5.x, r5.x, l(0.000000)
mul r5.y, r5.x, r5.x
mul r5.x, r5.x, r5.y
add r4.w, r4.w, l(-0.025000)
add r3.w, r3.w, l(0.020000)
div r3.w, r4.w, r3.w
max r3.w, r3.w, l(0.000000)
mad r3.x, r5.x, r3.w, r3.x
add r5.xyzw, r1.zzzz, l(120.747276, 147.580002, 174.412720, 201.245453)
sincos r5.x, r6.x, r5.x
mul r7.xyzw, r2.wwww, l(0.409091, 0.500000, 0.590909, 0.681818)
log r8.xyzw, r7.xyzw
round_ni r8.xyzw, r8.xyzw
ftoi r8.xyzw, r8.xyzw
iadd r8.xyzw, r8.xyzw, l(-3, -3, -3, -3)
imax r8.xyzw, r8.xyzw, l(0, 0, 0, 0)
imin r8.xyzw, r8.xyzw, l(5, 5, 5, 5)
mov r6.y, r5.x
mul r6.xy, r6.xyxx, r7.xxxx
ftoi r6.xy, r6.xyxx
iadd r6.xy, r6.xyxx, r0.xyxx
ishr r9.xy, r6.xyxx, r8.xxxx
mov r9.zw, r8.xxxx
ld_indexable(texture2d)(float,float,float,float) r9.z, r9.xyzw, t0.yzxw
itof r6.xy, r6.xyxx
mad r6.xy, r6.xyxx, cb0[128].xyxx, cb0[128].zwzz
mul r9.xy, r9.zzzz, r6.xyxx
add r6.xyz, -r2.xyzx, r9.xyzx
dp3 r3.w, r6.xyzx, r6.xyzx
dp3 r4.w, r6.xyzx, r4.xyzx
add r5.x, -r3.w, l(1.440000)
max r5.x, r5.x, l(0.000000)
mul r6.x, r5.x, r5.x
mul r5.x, r5.x, r6.x
add r4.w, r4.w, l(-0.025000)
add r3.w, r3.w, l(0.020000)
div r3.w, r4.w, r3.w
max r3.w, r3.w, l(0.000000)
mad r3.x, r5.x, r3.w, r3.x
sincos r5.x, r6.x, r5.y
mov r6.y, r5.x
mul r5.xy, r6.xyxx, r7.yyyy
ftoi r5.xy, r5.xyxx
iadd r5.xy, r5.xyxx, r0.xyxx
ishr r6.xy, r5.xyxx, r8.yyyy
mov r6.zw, r8.yyyy
ld_indexable(texture2d)(float,float,float,float) r6.z, r6.xyzw, t0.yzxw
itof r5.xy, r5.xyxx
mad r5.xy, r5.xyxx, cb0[128].xyxx, cb0[128].zwzz
mul r6.xy, r6.zzzz, r5.xyxx
add r6.xyz, -r2.xyzx, r6.xyzx
dp3 r3.w, r6.xyzx, r6.xyzx
dp3 r4.w, r6.xyzx, r4.xyzx
add r5.x, -r3.w, l(1.440000)
max r5.x, r5.x, l(0.000000)
mul r5.y, r5.x, r5.x
mul r5.x, r5.x, r5.y
add r4.w, r4.w, l(-0.025000)
add r3.w, r3.w, l(0.020000)
div r3.w, r4.w, r3.w
max r3.w, r3.w, l(0.000000)
mad r3.x, r5.x, r3.w, r3.x
sincos r5.x, r6.x, r5.z
mov r6.y, r5.x
mul r5.xy, r6.xyxx, r7.zzzz
ftoi r5.xy, r5.xyxx
iadd r5.xy, r5.xyxx, r0.xyxx
ishr r6.xy, r5.xyxx, r8.zzzz
mov r6.zw, r8.zzzz
ld_indexable(texture2d)(float,float,float,float) r6.z, r6.xyzw, t0.yzxw
itof r5.xy, r5.xyxx
mad r5.xy, r5.xyxx, cb0[128].xyxx, cb0[128].zwzz
mul r6.xy, r6.zzzz, r5.xyxx
add r5.xyz, -r2.xyzx, r6.xyzx
dp3 r3.w, r5.xyzx, r5.xyzx
dp3 r4.w, r5.xyzx, r4.xyzx
add r5.x, -r3.w, l(1.440000)
max r5.x, r5.x, l(0.000000)
mul r5.y, r5.x, r5.x
mul r5.x, r5.x, r5.y
add r4.w, r4.w, l(-0.025000)
add r3.w, r3.w, l(0.020000)
div r3.w, r4.w, r3.w
max r3.w, r3.w, l(0.000000)
mad r3.x, r5.x, r3.w, r3.x
sincos r5.x, r6.x, r5.w
mov r6.y, r5.x
mul r5.xy, r6.xyxx, r7.wwww
ftoi r5.xy, r5.xyxx
iadd r5.xy, r5.xyxx, r0.xyxx
ishr r6.xy, r5.xyxx, r8.wwww
mov r6.zw, r8.wwww
ld_indexable(texture2d)(float,float,float,float) r6.z, r6.xyzw, t0.yzxw
itof r5.xy, r5.xyxx
mad r5.xy, r5.xyxx, cb0[128].xyxx, cb0[128].zwzz
mul r6.xy, r6.zzzz, r5.xyxx
add r5.xyz, -r2.xyzx, r6.xyzx
dp3 r3.w, r5.xyzx, r5.xyzx
dp3 r4.w, r5.xyzx, r4.xyzx
add r5.x, -r3.w, l(1.440000)
max r5.x, r5.x, l(0.000000)
mul r5.y, r5.x, r5.x
mul r5.x, r5.x, r5.y
add r4.w, r4.w, l(-0.025000)
add r3.w, r3.w, l(0.020000)
div r3.w, r4.w, r3.w
max r3.w, r3.w, l(0.000000)
mad r3.x, r5.x, r3.w, r3.x
add r5.xyz, r1.zzzz, l(228.078186, 254.910904, 281.743622, 0.000000)
sincos r5.x, r6.x, r5.x
mul r7.xyz, r2.wwww, l(0.772727, 0.863636, 0.954545, 0.000000)
log r8.xyz, r7.xyzx
round_ni r8.xyz, r8.xyzx
ftoi r8.xyz, r8.xyzx
iadd r8.xyz, r8.xyzx, l(-3, -3, -3, 0)
imax r8.xyz, r8.xyzx, l(0, 0, 0, 0)
imin r8.xyz, r8.xyzx, l(5, 5, 5, 0)
mov r6.y, r5.x
mul r5.xw, r6.xxxy, r7.xxxx
ftoi r5.xw, r5.xxxw
iadd r5.xw, r5.xxxw, r0.xxxy
ishr r6.xy, r5.xwxx, r8.xxxx
mov r6.zw, r8.xxxx
ld_indexable(texture2d)(float,float,float,float) r6.z, r6.xyzw, t0.yzxw
itof r5.xw, r5.xxxw
mad r5.xw, r5.xxxw, cb0[128].xxxy, cb0[128].zzzw
mul r6.xy, r6.zzzz, r5.xwxx
add r6.xyz, -r2.xyzx, r6.xyzx
dp3 r1.z, r6.xyzx, r6.xyzx
dp3 r2.w, r6.xyzx, r4.xyzx
add r3.w, -r1.z, l(1.440000)
max r3.w, r3.w, l(0.000000)
mul r4.w, r3.w, r3.w
mul r3.w, r3.w, r4.w
add r2.w, r2.w, l(-0.025000)
add r1.z, r1.z, l(0.020000)
div r1.z, r2.w, r1.z
max r1.z, r1.z, l(0.000000)
mad r1.z, r3.w, r1.z, r3.x
sincos r3.x, r5.x, r5.y
mov r5.y, r3.x
mul r3.xw, r5.xxxy, r7.yyyy
ftoi r3.xw, r3.xxxw
iadd r3.xw, r3.xxxw, r0.xxxy
ishr r6.xy, r3.xwxx, r8.yyyy
mov r6.zw, r8.yyyy
ld_indexable(texture2d)(float,float,float,float) r5.w, r6.xyzw, t0.yzwx
itof r3.xw, r3.xxxw
mad r3.xw, r3.xxxw, cb0[128].xxxy, cb0[128].zzzw
mul r5.xy, r5.wwww, r3.xwxx
add r5.xyw, -r2.xyxz, r5.xyxw
dp3 r2.w, r5.xywx, r5.xywx
dp3 r3.x, r5.xywx, r4.xyzx
add r3.w, -r2.w, l(1.440000)
max r3.w, r3.w, l(0.000000)
mul r4.w, r3.w, r3.w
mul r3.w, r3.w, r4.w
add r3.x, r3.x, l(-0.025000)
add r2.w, r2.w, l(0.020000)
div r2.w, r3.x, r2.w
max r2.w, r2.w, l(0.000000)
mad r1.z, r3.w, r2.w, r1.z
sincos r3.x, r5.x, r5.z
mov r5.y, r3.x
mul r3.xw, r5.xxxy, r7.zzzz
ftoi r3.xw, r3.xxxw
iadd r3.xw, r3.xxxw, r0.xxxy
ishr r5.xy, r3.xwxx, r8.zzzz
mov r5.zw, r8.zzzz
ld_indexable(texture2d)(float,float,float,float) r5.z, r5.xyzw, t0.yzxw
itof r3.xw, r3.xxxw
mad r3.xw, r3.xxxw, cb0[128].xxxy, cb0[128].zzzw
mul r5.xy, r5.zzzz, r3.xwxx
add r2.xyz, -r2.xyzx, r5.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
dp3 r2.x, r2.xyzx, r4.xyzx
add r2.y, -r2.w, l(1.440000)
max r2.y, r2.y, l(0.000000)
mul r2.z, r2.y, r2.y
mul r2.y, r2.y, r2.z
add r2.x, r2.x, l(-0.025000)
add r2.z, r2.w, l(0.020000)
div r2.x, r2.x, r2.z
max r2.x, r2.x, l(0.000000)
mad r1.z, r2.y, r2.x, r1.z
mad r1.z, -r1.z, l(0.060891), l(1.000000)
max r1.z, r1.z, l(0.000000)
deriv_rtx_coarse r2.x, r1.x
lt r2.x, |r2.x|, l(0.100000)
deriv_rtx_fine r2.y, r1.z
and r2.z, r0.x, l(1)
itof r2.z, r2.z
add r2.z, r2.z, l(-0.500000)
mad r2.y, -r2.y, r2.z, r1.z
movc r1.z, r2.x, r2.y, r1.z
deriv_rty_coarse r2.x, r1.x
deriv_rty_fine r2.y, r1.z
if_nz r1.y
  mov o0.xw, l(1.000000,0,0,1.000000)
  mov o0.yz, r3.yyzy
  ret 
endif 
ld_indexable(texture2d)(float,float,float,float) r0.xz, r0.xyzw, t4.xzyw
add r0.xz, r0.xxzx, l(-0.498000, 0.000000, -0.498000, 0.000000)
mad r0.xz, r0.xxzx, l(-0.125000, 0.000000, 0.125000, 0.000000), v1.xxyx
sample_l_indexable(texture2d)(float,float,float,float) r0.xzw, r0.xzxx, t3.xwyz, s1, l(0.000000)
dp2 r0.z, r0.zwzz, l(0.996109, 0.003891, 0.000000, 0.000000)
lt r0.w, |r2.x|, l(0.100000)
and r0.y, r0.y, l(1)
itof r0.y, r0.y
add r0.y, r0.y, l(-0.500000)
mad r0.y, -r2.y, r0.y, r1.z
movc r0.y, r0.w, r0.y, r1.z
mad_sat r0.w, r1.x, l(-0.500000), l(-0.100000)
add r0.y, r0.y, l(-1.000000)
mad r0.y, r0.w, r0.y, l(1.000000)
add r0.z, -r0.z, r1.w
mad r0.z, -|r0.z|, l(200.000000), l(1.000000)
max r0.z, r0.z, l(0.000000)
mul r0.z, r0.z, l(0.600000)
add r0.x, -r0.y, r0.x
mad o0.x, r0.z, r0.x, r0.y
mov o0.yz, r3.yyzy
mov o0.w, l(1.000000)
ret 
// Approximately 358 instruction slots used
 
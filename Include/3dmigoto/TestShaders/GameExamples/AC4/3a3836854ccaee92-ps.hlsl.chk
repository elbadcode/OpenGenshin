// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:39:13 2019

cbuffer SMAAFilterConstantscb : register(b1)
{

  struct
  {
    float2 m_OneOverWidthHeight;
    float2 m_ThresholdParams;
    int4 m_SubsampleIndices;
    float4 m_MiscParams;
  } g_SMAAFilterConstants : packoffset(c0);

}

SamplerState LinearSampler_s_s : register(s5);
SamplerState PointSampler_s_s : register(s6);
Texture2D<float4> g_EdgesTexture_NG : register(t5);
Texture2D<float4> g_AreaTexture_NG : register(t6);
Texture2D<float4> g_SearchTexture_NG : register(t7);


// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  float2 w1 : TEXCOORD1,
  float4 v2 : TEXCOORD2,
  float4 v3 : TEXCOORD3,
  float4 v4 : TEXCOORD4,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, v1.xy, 0).xyzw;
  r0.y = cmp(0 < r0.y);
  if (r0.y != 0) {
    r0.y = cmp(0 < r0.x);
    r1.xyzw = g_SMAAFilterConstants.m_OneOverWidthHeight.xyxy * float4(-1,1,1,-1) + v1.xyxy;
    r0.zw = r1.xy;
    r2.xy = float2(0,0);
    while (true) {
      r2.z = cmp(r2.y >= 8);
      if (r2.z != 0) break;
      r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r0.zw, 0).xyzw;
      r2.z = dot(r3.xy, float2(1,1));
      r2.z = cmp(r2.z < 1.89999998);
      r2.x = r3.y;
      if (r2.z != 0) break;
      r0.zw = g_SMAAFilterConstants.m_OneOverWidthHeight.xy * float2(-1,1) + r0.zw;
      r2.y = 1 + r2.y;
      r2.x = r3.y;
    }
    r0.z = cmp(0.899999976 < r2.x);
    r0.z = r0.z ? 1.000000 : 0;
    r0.z = r2.y + r0.z;
    r2.y = r0.y ? r0.z : 0;
    r0.yz = r1.zw;
    r0.w = 0;
    while (true) {
      r1.x = cmp(r0.w >= 8);
      if (r1.x != 0) break;
      r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r0.yz, 0).xyzw;
      r1.x = dot(r3.xy, float2(1,1));
      r1.x = cmp(r1.x < 1.89999998);
      if (r1.x != 0) break;
      r0.yz = g_SMAAFilterConstants.m_OneOverWidthHeight.xy * float2(1,-1) + r0.yz;
      r0.w = 1 + r0.w;
    }
    r0.y = r2.y + r0.w;
    r0.y = cmp(2 < r0.y);
    if (r0.y != 0) {
      r2.x = -r2.y;
      r2.zw = float2(1,-1) * r0.ww;
      r1.xyzw = r2.xyzw * g_SMAAFilterConstants.m_OneOverWidthHeight.xyxy + v1.xyxy;
      r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r1.xy, 0, int2(0, 0)).xyzw;
      r4.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r1.xy, 0, int2(0, 0)).xyzw;
      r5.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r1.zw, 0, int2(0, 0)).yxzw;
      r1.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r1.zw, 0, int2(0, 0)).xyzw;
      r5.y = r3.y;
      r1.y = r4.x;
      r0.yz = r5.xy * float2(2,2) + r1.xy;
      r1.xy = cmp(float2(7,7) >= r2.zy);
      r1.xy = r1.xy ? float2(1,1) : 0;
      r0.yz = r1.xy * r0.yz;
      r0.w = (int)g_SMAAFilterConstants.m_SubsampleIndices.z;
      r0.yz = r0.yz * float2(20,20) + r2.zy;
      r1.xy = r0.yz * float2(0.00178599998,0.00625000009) + float2(0.000892999989,0.503125012);
      r1.z = r0.w * 0.142857 + r1.x;
      r1.xyzw = g_AreaTexture_NG.SampleLevel(LinearSampler_s_s, r1.yz, 0).xyzw;
    } else {
      r1.xy = float2(0,0);
    }
    r0.yz = -g_SMAAFilterConstants.m_OneOverWidthHeight.xy + v1.xy;
    r1.zw = r0.yz;
    r2.x = 0;
    while (true) {
      r0.w = cmp(r2.x >= 8);
      if (r0.w != 0) break;
      r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r1.zw, 0).xyzw;
      r4.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r1.zw, 0, int2(0, 0)).xyzw;
      r3.x = r4.x;
      r0.w = dot(r3.xy, float2(1,1));
      r0.w = cmp(r0.w < 1.89999998);
      if (r0.w != 0) break;
      r1.zw = -g_SMAAFilterConstants.m_OneOverWidthHeight.xy + r1.zw;
      r2.x = 1 + r2.x;
    }
    r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, v1.xy, 0, int2(0, 0)).xyzw;
    r0.y = cmp(0 < r3.x);
    r0.zw = g_SMAAFilterConstants.m_OneOverWidthHeight.xy + v1.xy;
    r1.zw = r0.zw;
    r2.w = 0;
    r3.x = 0;
    while (true) {
      r3.y = cmp(r3.x >= 8);
      if (r3.y != 0) break;
      r4.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r1.zw, 0).xyzw;
      r5.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r1.zw, 0, int2(0, 0)).xyzw;
      r4.x = r5.x;
      r3.y = dot(r4.xy, float2(1,1));
      r3.y = cmp(r3.y < 1.89999998);
      r2.w = r4.y;
      if (r3.y != 0) break;
      r1.zw = g_SMAAFilterConstants.m_OneOverWidthHeight.xy + r1.zw;
      r3.x = 1 + r3.x;
      r2.w = r4.y;
    }
    r0.z = cmp(0.899999976 < r2.w);
    r0.z = r0.z ? 1.000000 : 0;
    r0.z = r3.x + r0.z;
    r2.z = r0.y ? r0.z : 0;
    r0.y = r2.x + r2.z;
    r0.y = cmp(2 < r0.y);
    if (r0.y != 0) {
      r2.y = -r2.x;
      r3.xyzw = r2.yyzz * g_SMAAFilterConstants.m_OneOverWidthHeight.xyxy + v1.xyxy;
      r4.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r3.xy, 0, int2(0, 0)).xyzw;
      r5.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r3.xy, 0, int2(0, 0)).yzwx;
      r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r3.zw, 0, int2(0, 0)).xyzw;
      r5.y = r4.y;
      r5.xz = r3.yx;
      r0.yz = r5.xy * float2(2,2) + r5.zw;
      r1.zw = cmp(float2(7,7) >= r2.zx);
      r1.zw = r1.zw ? float2(1,1) : 0;
      r0.yz = r1.zw * r0.yz;
      r0.w = (int)g_SMAAFilterConstants.m_SubsampleIndices.w;
      r0.yz = r0.yz * float2(20,20) + r2.zx;
      r2.xy = r0.yz * float2(0.00178599998,0.00625000009) + float2(0.000892999989,0.503125012);
      r2.z = r0.w * 0.142857 + r2.x;
      r2.xyzw = g_AreaTexture_NG.SampleLevel(LinearSampler_s_s, r2.yz, 0).xyzw;
      r1.xy = r2.yx + r1.xy;
    }
    r0.y = dot(r1.xy, float2(1,1));
    r0.y = cmp(r0.y == 0.000000);
    if (r0.y != 0) {
      r2.xy = v2.yx;
      r2.z = 1;
      r3.x = 0;
      while (true) {
        r0.y = cmp(v4.x < r2.y);
        r0.z = cmp(0.828100026 < r2.z);
        r0.y = r0.z ? r0.y : 0;
        r0.z = cmp(r3.x == 0.000000);
        r0.y = r0.z ? r0.y : 0;
        if (r0.y == 0) break;
        r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r2.yx, 0).xyzw;
        r2.xy = -g_SMAAFilterConstants.m_OneOverWidthHeight.yx * float2(0,2) + r2.xy;
        r2.z = r3.y;
      }
      r0.y = g_SMAAFilterConstants.m_OneOverWidthHeight.x * 3.25 + r2.y;
      r2.x = 0.5 * r3.x;
      r2.xyzw = g_SearchTexture_NG.SampleLevel(PointSampler_s_s, r2.xz, 0).xyzw;
      r0.z = g_SMAAFilterConstants.m_OneOverWidthHeight.x * r2.x;
      r2.x = -r0.z * 255 + r0.y;
      r2.y = v3.y;
      r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r2.xy, 0).xyzw;
      r4.xy = v2.wz;
      r4.z = 1;
      r5.x = 0;
      while (true) {
        r0.y = cmp(r4.y < v4.y);
        r0.z = cmp(0.828100026 < r4.z);
        r0.y = r0.z ? r0.y : 0;
        r0.z = cmp(r5.x == 0.000000);
        r0.y = r0.z ? r0.y : 0;
        if (r0.y == 0) break;
        r5.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r4.yx, 0).xyzw;
        r4.xy = g_SMAAFilterConstants.m_OneOverWidthHeight.yx * float2(0,2) + r4.xy;
        r4.z = r5.y;
      }
      r0.y = -g_SMAAFilterConstants.m_OneOverWidthHeight.x * 0.25 + r4.y;
      r0.y = g_SMAAFilterConstants.m_OneOverWidthHeight.x * -3 + r0.y;
      r4.x = r5.x * 0.5 + 0.5;
      r4.xyzw = g_SearchTexture_NG.SampleLevel(PointSampler_s_s, r4.xz, 0).xyzw;
      r0.z = g_SMAAFilterConstants.m_OneOverWidthHeight.x * r4.x;
      r2.z = r0.z * 255 + r0.y;
      r0.yz = r2.xz / g_SMAAFilterConstants.m_OneOverWidthHeight.xx;
      r0.yz = -w1.xz + r0.yz;
      r1.zw = sqrt(abs(r0.yz));
      r2.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r2.zy, 0, int2(0, 0)).yxzw;
      r0.w = (int)g_SMAAFilterConstants.m_SubsampleIndices.y;
      r2.x = r3.x;
      r2.xy = float2(4,4) * r2.xy;
      r2.xy = round(r2.xy);
      r1.zw = r2.xy * float2(16,16) + r1.zw;
      r2.xy = r1.zw * float2(0.00625000009,0.00178599998) + float2(0.00312500005,0.000892999989);
      r2.z = r0.w * 0.142857 + r2.y;
      r2.xyzw = g_AreaTexture_NG.SampleLevel(LinearSampler_s_s, r2.xz, 0).xyzw;
      r3.xz = g_SMAAFilterConstants.m_OneOverWidthHeight.xx * r0.yz;
      r3.y = 0;
      r3.xyz = v1.xyx + r3.xyz;
      r4.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r3.xy, 0, int2(0, 0)).xyzw;
      r0.y = cmp(abs(r0.y) < abs(r0.z));
      r5.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r3.xy, 0, int2(0, 0)).yxzw;
      r5.x = r4.x;
      r0.zw = saturate(float2(1.25,1.25) + -r5.xy);
      r0.zw = r2.xy * r0.zw;
      r1.zw = r0.yy ? r0.zw : r2.xy;
      r2.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r3.zy, 0, int2(0, 0)).xyzw;
      r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r3.zy, 0, int2(0, 0)).yxzw;
      r3.x = r2.x;
      r2.xy = saturate(float2(1.25,1.25) + -r3.xy);
      r1.zw = r2.xy * r1.zw;
      o0.xy = r0.yy ? r0.zw : r1.zw;
    } else {
      o0.xy = r1.xy;
      r0.x = 0;
    }
  } else {
    o0.xy = float2(0,0);
  }
  r0.x = cmp(0 < r0.x);
  if (r0.x != 0) {
    r0.xy = v3.xy;
    r0.z = 1;
    r1.x = 0;
    while (true) {
      r0.w = cmp(v4.z < r0.y);
      r2.x = cmp(0.828100026 < r0.z);
      r0.w = r0.w ? r2.x : 0;
      r2.x = cmp(r1.x == 0.000000);
      r0.w = r0.w ? r2.x : 0;
      if (r0.w == 0) break;
      r1.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r0.xy, 0).yxzw;
      r0.xy = -g_SMAAFilterConstants.m_OneOverWidthHeight.xy * float2(0,2) + r0.xy;
      r0.z = r1.y;
    }
    r0.y = g_SMAAFilterConstants.m_OneOverWidthHeight.y * 3.25 + r0.y;
    r0.x = 0.5 * r1.x;
    r1.xyzw = g_SearchTexture_NG.SampleLevel(PointSampler_s_s, r0.xz, 0).xyzw;
    r0.x = g_SMAAFilterConstants.m_OneOverWidthHeight.y * r1.x;
    r0.x = -r0.x * 255 + r0.y;
    r0.y = v2.x;
    r1.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r0.yx, 0).xyzw;
    r2.xy = v3.zw;
    r2.z = 1;
    r3.x = 0;
    while (true) {
      r0.w = cmp(r2.y < v4.w);
      r1.x = cmp(0.828100026 < r2.z);
      r0.w = r0.w ? r1.x : 0;
      r1.x = cmp(r3.x == 0.000000);
      r0.w = r0.w ? r1.x : 0;
      if (r0.w == 0) break;
      r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r2.xy, 0).yxzw;
      r2.xy = g_SMAAFilterConstants.m_OneOverWidthHeight.xy * float2(0,2) + r2.xy;
      r2.z = r3.y;
    }
    r0.w = -g_SMAAFilterConstants.m_OneOverWidthHeight.y * 0.25 + r2.y;
    r0.w = g_SMAAFilterConstants.m_OneOverWidthHeight.y * -3 + r0.w;
    r2.x = r3.x * 0.5 + 0.5;
    r2.xyzw = g_SearchTexture_NG.SampleLevel(PointSampler_s_s, r2.xz, 0).xyzw;
    r1.x = g_SMAAFilterConstants.m_OneOverWidthHeight.y * r2.x;
    r0.z = r1.x * 255 + r0.w;
    r0.xw = r0.xz / g_SMAAFilterConstants.m_OneOverWidthHeight.yy;
    r2.yz = -w1.yw + r0.xw;
    r0.xw = sqrt(abs(r2.yz));
    r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r0.yz, 0, int2(0, 0)).xyzw;
    r0.y = (int)g_SMAAFilterConstants.m_SubsampleIndices.x;
    r3.x = r1.y;
    r1.xy = float2(4,4) * r3.xy;
    r1.xy = round(r1.xy);
    r0.xz = r1.xy * float2(16,16) + r0.xw;
    r1.xy = r0.xz * float2(0.00625000009,0.00178599998) + float2(0.00312500005,0.000892999989);
    r1.z = r0.y * 0.142857 + r1.y;
    r0.xyzw = g_AreaTexture_NG.SampleLevel(LinearSampler_s_s, r1.xz, 0).xyzw;
    r2.x = 0;
    r1.xyz = r2.xyz * g_SMAAFilterConstants.m_OneOverWidthHeight.xyy + v1.xyy;
    r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r1.xy, 0, int2(0, 0)).xyzw;
    r0.z = cmp(abs(r2.y) < abs(r2.z));
    r2.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r1.xy, 0, int2(0, 0)).xzwy;
    r2.z = r3.y;
    r1.yw = saturate(float2(1.25,1.25) + -r2.zw);
    r1.yw = r1.yw * r0.xy;
    r0.xy = r0.zz ? r1.yw : r0.xy;
    r2.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r1.xz, 0, int2(0, 0)).xyzw;
    r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s_s, r1.xz, 0, int2(0, 0)).xzwy;
    r3.z = r2.y;
    r1.xz = saturate(float2(1.25,1.25) + -r3.zw);
    r0.xy = r1.xz * r0.xy;
    o0.zw = r0.zz ? r1.yw : r0.xy;
  } else {
    o0.zw = float2(0,0);
  }
  return;
}
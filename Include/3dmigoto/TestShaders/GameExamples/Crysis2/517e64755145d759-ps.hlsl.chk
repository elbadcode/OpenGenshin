// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:39:53 2019

cbuffer PER_INSTANCE : register(b1)
{
  float4 Ambient : packoffset(c0);
  float4 AvgFogVolumeContrib : packoffset(c1);
  float4 AlphaTest : packoffset(c2);
}

cbuffer PER_FRAME : register(b3)
{
  float4 g_PS_SunColor : packoffset(c1);
  float4 g_PS_SunLightDir : packoffset(c2);
  float4 g_PS_FogColor : packoffset(c3);
}

cbuffer PER_MATERIAL : register(b4)
{
  float4 MatDifColor : packoffset(c0);
  float4 MatSpecColor : packoffset(c1);
  float4 MatEmissiveColor : packoffset(c2);
  float3 __0FresnelScale__1FresnelPower__2FresnelBias__3 : packoffset(c4);
  float4 DirtTint : packoffset(c8);
  float4 __0DirtStrength__1DirtGlossFactor__2DirtMapAlphaInfluence__3DirtTiling : packoffset(c9);
}

cbuffer PER_LIGHT : register(b5)
{
  float4 LDiffuses0 : packoffset(c0);
  float4 WorldLightsPos0 : packoffset(c1);
  float4 ShadowChanMasks0 : packoffset(c2);
  float4 LDiffuses1 : packoffset(c3);
  float4 WorldLightsPos1 : packoffset(c4);
  float4 ShadowChanMasks1 : packoffset(c5);
  float4 LDiffuses2 : packoffset(c6);
  float4 WorldLightsPos2 : packoffset(c7);
  float4 ShadowChanMasks2 : packoffset(c8);
  float4 LDiffuses3 : packoffset(c9);
  float4 WorldLightsPos3 : packoffset(c10);
  float4 ShadowChanMasks3 : packoffset(c11);
}

SamplerState diffuseMapSampler_s_s : register(s0);
SamplerState dirtMapSampler_s_s : register(s2);
SamplerState sceneSpecularAccSampler_s_s : register(s10);
SamplerState decalsAccSampler_s_s : register(s11);
SamplerState sceneNormalsSampler_s_s : register(s12);
SamplerState sceneDiffuseAccSampler_s_s : register(s13);
SamplerState sceneNormalsBentSampler_s_s : register(s14);
Texture2D<float4> diffuseMapSampler : register(t0);
Texture2D<float4> dirtMapSampler : register(t2);
Texture2D<float4> sceneSpecularAccSampler : register(t10);
Texture2D<float4> decalsAccSampler : register(t11);
Texture2D<float4> sceneNormalsSampler : register(t12);
Texture2D<float4> sceneDiffuseAccSampler : register(t13);
Texture2D<float4> sceneNormalsBentSampler : register(t14);


// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  linear centroid float4 v3 : TEXCOORD2,
  float4 v4 : COLOR0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = MatSpecColor.w * 0.159154996 + 0.318309993;
  r0.y = MatSpecColor.w + 9.99999997e-07;
  r0.z = dot(-v2.xyz, -v2.xyz);
  r0.z = rsqrt(r0.z);
  r1.xyz = -v2.xyz * r0.zzz + g_PS_SunLightDir.xyz;
  r2.xyz = -v2.xyz * r0.zzz;
  r0.z = dot(r1.xyz, r1.xyz);
  r0.z = rsqrt(r0.z);
  r1.xyz = r1.xyz * r0.zzz;
  r0.zw = v3.xy / v3.ww;
  r3.xyzw = sceneNormalsSampler.Sample(sceneNormalsSampler_s_s, r0.zw).xyzw;
  r3.xyz = r3.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r1.w = 1 + -r3.w;
  r2.w = dot(r3.xyz, r3.xyz);
  r2.w = rsqrt(r2.w);
  r3.xyz = r3.xyz * r2.www;
  r1.x = saturate(dot(r3.xyz, r1.xyz));
  r1.x = log2(r1.x);
  r0.y = r1.x * r0.y;
  r0.y = exp2(r0.y);
  r0.x = r0.x * r0.y;
  r0.y = dot(g_PS_SunLightDir.xyz, r3.xyz);
  r1.x = saturate(dot(r2.xyz, r3.xyz));
  r1.x = 1.00100005 + -r1.x;
  r1.x = log2(r1.x);
  r1.x = __0FresnelScale__1FresnelPower__2FresnelBias__3.y * r1.x;
  r1.x = exp2(r1.x);
  r1.x = __0FresnelScale__1FresnelPower__2FresnelBias__3.x * r1.x + __0FresnelScale__1FresnelPower__2FresnelBias__3.z;
  r2.xyzw = sceneNormalsBentSampler.Sample(sceneNormalsBentSampler_s_s, r0.zw).xyzw;
  r2.xyz = r2.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r1.y = saturate(dot(g_PS_SunLightDir.xyz, r2.xyz));
  r1.y = saturate(-r1.y + r0.y);
  r1.y = sqrt(r1.y);
  r1.y = r1.y * r2.w;
  r1.y = saturate(AlphaTest.z * r1.y);
  r1.y = 1 + -r1.y;
  r0.y = saturate(r1.y * r0.y);
  r0.x = r0.x * r0.y;
  r2.xyz = LDiffuses0.xyz * r0.yyy;
  r2.xyz = r2.xyz * r1.www;
  r3.xyz = LDiffuses0.xyz * LDiffuses0.www;
  r3.xyz = r3.xyz * r0.xxx;
  r1.yzw = r3.xyz * r1.www;
  r3.xyz = sceneSpecularAccSampler.Sample(sceneSpecularAccSampler_s_s, r0.zw).xyz;
  r1.yzw = r3.xyz * g_PS_SunColor.www + r1.yzw;
  r0.xy = __0DirtStrength__1DirtGlossFactor__2DirtMapAlphaInfluence__3DirtTiling.ww * v1.xy;
  r3.xyzw = dirtMapSampler.Sample(dirtMapSampler_s_s, r0.xy).xyzw;
  r0.x = -1 + r3.w;
  r0.x = __0DirtStrength__1DirtGlossFactor__2DirtMapAlphaInfluence__3DirtTiling.z * r0.x + 1;
  r0.x = __0DirtStrength__1DirtGlossFactor__2DirtMapAlphaInfluence__3DirtTiling.x * r0.x;
  r0.y = 1 + -v4.w;
  r0.x = r0.x * r0.y;
  r4.xyzw = diffuseMapSampler.Sample(diffuseMapSampler_s_s, v1.xy).xyzw;
  r0.y = r4.w * __0DirtStrength__1DirtGlossFactor__2DirtMapAlphaInfluence__3DirtTiling.y + -r4.w;
  r0.y = r0.x * r0.y + r4.w;
  r1.yzw = r1.yzw * r0.yyy;
  r1.yzw = MatSpecColor.xyz * r1.yzw;
  r1.xyz = r1.yzw * r1.xxx;
  r5.xyz = sceneDiffuseAccSampler.Sample(sceneDiffuseAccSampler_s_s, r0.zw).xyz;
  r6.xyzw = decalsAccSampler.Sample(decalsAccSampler_s_s, r0.zw).xyzw;
  r0.yzw = r5.xyz * g_PS_SunColor.www + r2.xyz;
  r0.yzw = MatEmissiveColor.xyz + r0.yzw;
  r2.xyz = r3.xyz * DirtTint.xyz + -r4.xyz;
  r2.xyz = r0.xxx * r2.xyz + r4.xyz;
  o0.w = r4.w;
  r2.xyz = MatDifColor.xyz * r2.xyz;
  r3.xyz = r6.xyz * r6.xyz;
  r0.x = 1 + -r6.w;
  r2.xyz = r2.xyz * r0.xxx + r3.xyz;
  r0.xyz = r2.xyz * r0.yzw + r1.xyz;
  o0.xyz = g_PS_SunLightDir.www * r0.xyz;
  return;
}
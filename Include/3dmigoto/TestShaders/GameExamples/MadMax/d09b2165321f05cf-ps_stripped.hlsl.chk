// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:40:27 2019
Texture2DArray<float4> t14 : register(t14);

Texture2D<float4> t8 : register(t8);

TextureCube<float4> t7 : register(t7);

TextureCube<float4> t6 : register(t6);

Texture2D<float4> t5 : register(t5);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s15_s : register(s15);

SamplerComparisonState s14_s : register(s14);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb1 : register(b1)
{
  float4 cb1[39];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[17];
}




// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = t0.Sample(s0_s, v1.xy).x;
  r0.y = cmp(0 < r0.x);
  r0.x = r0.x * cb1[0].x + cb1[0].y;
  r0.x = 1 / r0.x;
  r1.xyz = v2.xyz * r0.xxx;
  r2.xyz = r0.xxx * v2.xyz + cb0[4].xyz;
  r3.xyz = cb1[1].xyz * r1.xxx + cb1[4].xyz;
  r1.xyw = cb1[2].xyz * r1.yyy + r3.xyz;
  r1.xyz = cb1[3].xyz * r1.zzz + r1.xyw;
  r3.x = cb1[21].w;
  r3.z = 1;
  r3.xyz = r1.xyz * r3.xxz + cb1[21].xyz;
  r4.x = cb1[22].w;
  r4.z = 1;
  r4.xyz = r1.xyz * r4.xxz + cb1[22].xyz;
  r0.zw = r1.xy * float2(10,10) + float2(-5,-5);
  r5.xy = r3.xy * float2(10,10) + float2(-5,-5);
  r0.z = max(abs(r0.z), abs(r0.w));
  r0.w = max(abs(r5.x), abs(r5.y));
  r1.w = dot(v0.xy, float2(0.467943996,-0.703647971));
  r5.x = frac(r1.w);
  r1.w = dot(v0.xy, float2(0.834930003,-0.629559994));
  r5.y = frac(r1.w);
  r0.zw = r5.xx + r0.zw;
  r0.zw = cmp(r0.zw < float2(4.94999981,4.94999981));
  r3.xyz = r0.www ? r3.xyz : r4.xyz;
  r3.xyz = r0.zzz ? r1.zxy : r3.zxy;
  r0.w = r0.w ? 1 : 2;
  r6.z = r0.z ? 0 : r0.w;
  r0.zw = float2(-0.5,-0.5) + r5.xy;
  r5.xy = float2(0.00195299997,0.00195299997) * r0.zw;
  r7.xyzw = cb0[12].wwww * float4(0.75,0.25,-0.25,0.75) + r3.yzyz;
  r6.xy = r0.zw * float2(0.00195299997,0.00195299997) + r7.xy;
  r7.xy = -r0.zw * float2(0.00195299997,0.00195299997) + r7.zw;
  r8.xyzw = cb0[12].wwww * float4(-0.75,-0.25,0.25,-0.75) + r3.yzyz;
  r5.z = -r5.x;
  r9.xy = r8.xy + r5.yz;
  r8.xy = r8.zw + -r5.yz;
  r10.xyzw = cb0[12].wwww * float4(1.5,0.5,-0.5,1.5) + r3.yzyz;
  r11.xy = r10.xy + -r5.yz;
  r5.xy = r10.zw + r5.yz;
  r10.xyzw = cb0[12].wwww * float4(-1.5,-0.5,0.5,-1.5) + r3.yzyz;
  r12.xy = r0.zw * float2(0.00195299997,0.00195299997) + r10.xy;
  r10.xy = -r0.zw * float2(0.00195299997,0.00195299997) + r10.zw;
  r0.z = t14.Sample(s15_s, r6.xyz).x;
  r7.z = r6.z;
  r0.w = t14.Sample(s15_s, r7.xyz).x;
  r9.z = r7.z;
  r1.z = t14.Sample(s15_s, r9.xyz).x;
  r8.z = r9.z;
  r1.w = t14.Sample(s15_s, r8.xyz).x;
  r11.z = r8.z;
  r2.w = t14.Sample(s15_s, r11.xyz).x;
  r5.z = r11.z;
  r3.y = t14.Sample(s15_s, r5.xyz).x;
  r12.z = r5.z;
  r3.z = t14.Sample(s15_s, r12.xyz).x;
  r10.z = r12.z;
  r3.w = t14.Sample(s15_s, r10.xyz).x;
  r4.zw = -cb1[29].xz + r2.xz;
  r4.zw = r4.zw * float2(0.00130200002,0.00130200002) + float2(0.501953006,0.501953006);
  r13.xyzw = t8.Sample(s2_s, r4.zw).xyzw;
  if (r0.y != 0) {
    r14.xyzw = t1.Sample(s0_s, v1.xy).xyzw;
    r15.xyz = t2.Sample(s1_s, v1.xy).xyz;
    r15.xyz = r15.xyz * float3(2,2,2) + float3(-1,-1,-1);
    r16.xyzw = t3.Sample(s0_s, v1.xy).xyzw;
    r17.xyz = float3(0.125,1,0.5) + -r16.yyz;
    r17.x = saturate(r17.x);
    r0.y = cmp(r16.x < 0.411765009);
    r18.x = r16.x + r16.x;
    r4.zw = float2(-0.501960993,-0.5) + r16.xz;
    r19.xy = saturate(r4.zw + r4.zw);
    r18.z = 0;
    r19.z = 0;
    r18.xyz = saturate(r0.yyy ? r18.xzz : r19.zxx);
    r0.y = dot(-v2.xyz, -v2.xyz);
    r0.y = rsqrt(r0.y);
    r19.xzw = -v2.xyz * r0.yyy;
    r20.xyz = -v2.xyz * r0.yyy + -r15.xyz;
    r15.xyz = r17.xxx * r20.xyz + r15.xyz;
    r4.z = dot(r15.xyz, r15.xyz);
    r4.z = rsqrt(r4.z);
    r15.xyz = r15.xyz * r4.zzz;
    r4.z = 3 * r16.y;
    r20.xyz = r16.ywz * float3(8,1.60000002,4.5999999) + float3(1,0.200000003,-1.29999995);
    r4.w = exp2(r20.x);
    r5.w = 5 * r17.y;
    r6.w = cmp(r18.z == 0.000000);
    r7.w = saturate(r17.z + r17.z);
    r7.w = r7.w * r7.w;
    r7.w = r7.w * r7.w;
    r21.x = 0.800000012 * r7.w;
    r21.y = min(0.400000006, r21.x);
    r17.xz = r6.ww ? r21.xy : 0;
    r6.w = r19.y * 4 + 9.99999975e-05;
    r21.xyz = -v2.xyz * r0.yyy + -cb0[3].xyz;
    r7.w = dot(r21.xyz, r21.xyz);
    r7.w = rsqrt(r7.w);
    r21.xyz = r21.xyz * r7.www;
    r7.w = dot(r19.xzw, r15.xyz);
    r8.w = saturate(r7.w);
    r4.xy = r4.xy * float2(10,10) + float2(-5,-5);
    r4.x = max(abs(r4.x), abs(r4.y));
    r3.x = saturate(r3.x);
    r4.y = cmp(0 < r18.z);
    if (r4.y != 0) {
      r9.w = r18.z * 0.300000012 + 0.0500000007;
      r9.w = cb1[34].x / r9.w;
      r0.zw = r3.xx + -r0.zw;
      r0.zw = saturate(r0.zw * r9.ww);
      r0.z = 1 + -r0.z;
      r0.z = r0.z + -r0.w;
      r0.z = 1 + r0.z;
      r0.w = r3.x + -r1.z;
      r0.w = saturate(r0.w * r9.w);
      r0.z = r0.z + -r0.w;
      r0.z = 1 + r0.z;
      r0.w = r3.x + -r1.w;
      r0.w = saturate(r0.w * r9.w);
      r0.z = r0.z + -r0.w;
      r0.z = 1 + r0.z;
      r0.w = r3.x + -r2.w;
      r0.w = saturate(r0.w * r9.w);
      r0.z = r0.z + -r0.w;
      r0.z = 1 + r0.z;
      r0.w = r3.x + -r3.y;
      r0.w = saturate(r0.w * r9.w);
      r0.z = r0.z + -r0.w;
      r0.z = 1 + r0.z;
      r0.w = r3.x + -r3.z;
      r0.w = saturate(r0.w * r9.w);
      r0.z = r0.z + -r0.w;
      r0.z = 1 + r0.z;
      r0.w = r3.x + -r3.w;
      r0.w = saturate(r0.w * r9.w);
      r0.z = r0.z + -r0.w;
      r0.z = 1 + r0.z;
      r0.z = 0.125 * r0.z;
      r0.z = r0.z * r0.z;
      r0.z = r0.z * r0.z;
    } else {
      r0.w = t14.SampleCmpLevelZero(s14_s, r6.xyz, r3.x).x;
      r1.z = t14.SampleCmpLevelZero(s14_s, r7.xyz, r3.x).x;
      r0.w = r1.z + r0.w;
      r1.z = t14.SampleCmpLevelZero(s14_s, r9.xyz, r3.x).x;
      r0.w = r1.z + r0.w;
      r1.z = t14.SampleCmpLevelZero(s14_s, r8.xyz, r3.x).x;
      r0.w = r1.z + r0.w;
      r1.z = t14.SampleCmpLevelZero(s14_s, r11.xyz, r3.x).x;
      r0.w = r1.z + r0.w;
      r1.z = t14.SampleCmpLevelZero(s14_s, r5.xyz, r3.x).x;
      r0.w = r1.z + r0.w;
      r1.z = t14.SampleCmpLevelZero(s14_s, r12.xyz, r3.x).x;
      r0.w = r1.z + r0.w;
      r1.z = t14.SampleCmpLevelZero(s14_s, r10.xyz, r3.x).x;
      r0.w = r1.z + r0.w;
      r0.z = 0.125 * r0.w;
    }
    r0.w = saturate(-4 + r4.x);
    r0.z = r0.z + r0.w;
    r0.z = min(1, r0.z);
    r3.xyz = -cb0[5].xyz + r2.xyz;
    r0.w = dot(r3.xyz, r3.xyz);
    r0.w = sqrt(r0.w);
    r0.w = cb1[36].w * r0.w;
    r1.zw = cb1[15].yz + r2.xz;
    r3.x = cb0[1].w * r2.y;
    r3.y = cb0[3].w * r2.y;
    r1.zw = -r3.xy + r1.zw;
    r1.zw = cb1[15].ww * r1.zw;
    r0.w = t5.SampleLevel(s4_s, r1.zw, r0.w).x;
    r0.w = saturate(cb1[15].x + r0.w);
    r1.z = r0.z * r0.w;
    r1.w = saturate(r15.y * 0.5 + 0.5);
    r2.xzw = -cb0[11].xyz + cb0[10].xyz;
    r2.xzw = r1.www * r2.xzw + cb0[11].xyz;
    r1.w = dot(r15.xyz, -cb0[3].xyz);
    r3.x = r1.w + r17.z;
    r3.y = 1 + r17.z;
    r3.x = saturate(r3.x / r3.y);
    r3.y = -1 + r3.x;
    r3.y = r17.x * r3.y + 1;
    r3.x = r3.x * r3.y;
    r3.y = r3.x * r8.w + 9.99999975e-05;
    r3.y = log2(r3.y);
    r3.y = r6.w * r3.y;
    r3.y = exp2(r3.y);
    r3.y = r3.y * r3.x;
    r3.y = min(1, r3.y);
    r3.z = 2.5 * r18.y;
    r3.w = saturate(r18.x * 0.5 + -r1.w);
    r3.y = r3.w * r18.x + r3.y;
    r3.y = min(1, r3.y);
    r5.xyz = r16.www * cb1[35].xyz + cb1[36].xyz;
    r3.w = saturate(cb1[35].w + r5.y);
    r3.w = -cb1[35].w + r3.w;
    r4.x = 1 + -cb1[35].w;
    r3.w = r3.w / r4.x;
    r1.xy = r1.xy * float2(10,10) + float2(-5,-25);
    r1.x = max(abs(r1.x), abs(r1.y));
    r1.x = saturate(-3.70000005 + r1.x);
    r1.x = 1 + -r1.x;
    r1.y = cb1[34].y * 0.0480000004 + 1;
    r1.x = r1.x / r1.y;
    r1.y = 0.300000012 + r1.w;
    r1.y = saturate(0.769231021 * r1.y);
    r1.y = r1.y * r0.z;
    r4.x = 5 * r1.y;
    r4.x = min(1, r4.x);
    r6.xyz = r4.xxx * float3(0.100000001,0.790000021,0.939999998) + float3(0.899999976,0.209999993,0.0599999987);
    r6.xyz = r6.xyz * r3.www;
    r1.w = 0.150000006 + -r1.w;
    r1.w = saturate(r1.w + r1.w);
    r0.z = r1.w * r0.z;
    r7.xyz = float3(0.200000003,0.0460000001,0.00999999978) * r0.zzz;
    r0.z = min(1, r3.z);
    r7.xyz = r7.xyz * r0.zzz;
    r7.xyz = r7.xyz * r1.xxx;
    r1.xyw = r6.xyz * r1.yyy + r7.xyz;
    r1.xyw = r1.xyw * r0.www;
    r0.z = r3.y * r1.z;
    r0.z = r0.z * r3.w;
    r1.xyw = r4.yyy ? r1.xyw : r0.zzz;
    r2.xzw = cb1[0].zzz * r2.xzw;
    r0.z = saturate(r16.z * 2 + -1);
    r0.z = r0.z * 0.649999976 + 0.0500000007;
    r0.w = 1 + -r0.z;
    r3.z = saturate(r7.w * 0.899999976 + 0.100000001);
    r3.z = 1.00100005 + -r3.z;
    r3.z = min(1, r3.z);
    r3.w = r3.z * r3.z;
    r3.w = r3.w * r3.w;
    r3.z = r3.z * r3.w;
    r0.z = r0.w * r3.z + r0.z;
    r0.z = min(1, r0.z);
    r0.w = 8 + r4.w;
    r0.w = 0.0398089997 * r0.w;
    r3.z = r4.w * 1.44269502 + 1.44269502;
    r3.w = dot(r21.xyz, r15.xyz);
    r3.w = r3.z * r3.w + -r3.z;
    r3.w = exp2(r3.w);
    r3.w = min(1, r3.w);
    r3.w = r3.w * r0.w;
    r6.xyz = float3(0.00999999978,0.00999999978,0.00999999978) + r14.xyz;
    r4.x = dot(r6.xyz, r6.xyz);
    r4.x = rsqrt(r4.x);
    r6.xyz = r6.xyz * r4.xxx + float3(-1,-1,-1);
    r6.xyz = r19.yyy * r6.xyz + float3(1,1,1);
    r7.xyz = cb0[1].xyz * r6.xyz;
    r7.xyz = r7.xyz * r3.xxx;
    r7.xyz = r7.xyz * r16.www;
    r7.xyz = r7.xyz * r1.zzz;
    r7.xyz = r7.xyz * r3.www;
    r0.w = r16.w * r0.w;
    r0.w = r0.w * r0.z;
    r3.w = r3.w * r3.x;
    r3.w = r3.w * r0.z;
    r4.x = dot(cb1[18].xyz, r15.xyz);
    r4.w = 0.25 + r4.x;
    r4.w = 0.800000012 * r4.w;
    r4.x = saturate(r4.y ? r4.w : r4.x);
    r8.xyz = -v2.xyz * r0.yyy + cb1[18].xyz;
    r4.y = dot(r8.xyz, r8.xyz);
    r4.y = rsqrt(r4.y);
    r8.xyz = r8.xyz * r4.yyy;
    r4.y = cb1[17].x * r4.x;
    r4.x = r4.x * r0.w;
    r4.w = dot(r8.xyz, r15.xyz);
    r4.w = r3.z * r4.w + -r3.z;
    r4.w = exp2(r4.w);
    r4.w = min(1, r4.w);
    r4.x = r4.x * r4.w;
    r4.x = cb1[17].y * r4.x;
    r8.xyz = cb1[25].xyz * r3.yyy;
    r8.xyz = cb1[16].xyz * r4.yyy + r8.xyz;
    r9.xyz = cb1[26].xyz * r3.www;
    r4.xyw = cb1[16].xyz * r4.xxx + r9.xyz;
    r2.xzw = r2.xzw * r5.xxx;
    r3.y = dot(cb1[31].xy, cb1[31].xy);
    r3.y = cmp(r3.y != 0.000000);
    if (r3.y != 0) {
      r9.xy = float2(0.300000012,1.29999995) + r17.zz;
      r5.y = 128 * r13.w;
      r5.x = r13.w * 128 + cb1[28].w;
      r3.yw = -r5.xy + r2.yy;
      r5.xy = cmp(r3.yw < float2(0,0));
      r5.xy = r5.xy ? cb1[30].yy : cb1[30].xx;
      r3.yw = saturate(r5.xy * r3.yw);
      r3.yw = float2(1,1) + -r3.yw;
      r5.x = dot(cb1[28].xyz, r15.xyz);
      r9.z = -r9.x;
      r5.xy = r9.xz + r5.xx;
      r9.w = -1 + -r9.x;
      r5.xy = r5.xy / r9.yw;
      r3.yw = r3.yw * r3.yw;
      r3.yw = saturate(r3.yw * r5.xy);
      r3.yw = cb1[31].xy * r3.yw;
      r3.y = r3.y + r3.w;
      r9.xyz = r13.xyz * r3.yyy;
      r10.xyz = -v2.xyz * r0.yyy + cb1[28].xyz;
      r0.y = dot(r10.xyz, r10.xyz);
      r0.y = rsqrt(r0.y);
      r10.xyz = r10.xyz * r0.yyy;
      r11.xyz = cb0[2].xyz * r9.xyz;
      r9.xyz = cb0[1].xyz * r9.xyz;
      r9.xyz = r9.xyz * r0.www;
      r0.y = dot(r10.xyz, r15.xyz);
      r0.y = r3.z * r0.y + -r3.z;
      r0.y = exp2(r0.y);
      r0.y = min(1, r0.y);
      r3.yzw = r9.xyz * r0.yyy;
    } else {
      r11.xyz = float3(0,0,0);
      r3.yzw = float3(0,0,0);
    }
    r0.y = 1 + -r5.z;
    r0.y = r17.z * r0.y + r5.z;
    r9.xyz = r11.xyz * r0.yyy;
    r8.xyz = r8.xyz * r5.zzz + r9.xyz;
    r3.yzw = r3.yzw * r0.yyy;
    r3.yzw = r4.xyw * r5.zzz + r3.yzw;
    r3.yzw = r3.yzw * r6.xyz;
    r1.xyw = cb0[2].xyz * r1.xyw + r2.xzw;
    r1.xyw = r1.xyw + r8.xyz;
    r1.xyw = r1.xyw * r14.xyz;
    r0.y = r7.w + r7.w;
    r2.xzw = r0.yyy * r15.xyz + -r19.xzw;
    r0.yw = cb1[33].yw * r2.ww;
    r5.xz = -r2.xx * cb1[33].xz + r0.yw;
    r0.yw = cb1[38].yw * r2.ww;
    r8.xz = -r2.xx * cb1[38].xz + r0.yw;
    r5.y = r2.z;
    r2.xzw = t6.SampleLevel(s3_s, r5.xyz, r5.w).xyz;
    r8.y = r5.y;
    r4.xyw = t7.SampleLevel(s3_s, r8.xyz, r5.w).xyz;
    r4.xyw = r4.xyw + -r2.xzw;
    r2.xzw = cb1[0].www * r4.xyw + r2.xzw;
    r2.xzw = r2.xzw * r6.xyz;
    r2.xzw = cb1[20].zzz * r2.xzw;
    r0.y = saturate(-r16.z * 2 + 1);
    r0.y = r0.y + r0.y;
    r0.y = max(r0.y, r18.z);
    r0.w = -r18.z * 8 + 1;
    r0.w = saturate(r4.z * r0.w + -1);
    r4.xy = float2(2,1) + r0.yy;
    r0.y = r16.w * r4.x + -r4.y;
    r0.w = max(r19.y, r0.w);
    r4.x = r20.y + -r0.y;
    r0.y = saturate(r0.w * r4.x + r0.y);
    r0.w = dot(float3(0.212500006,0.715399981,0.0720999986), cb0[10].zzz);
    r0.w = 3 * r0.w;
    r4.x = dot(float3(0.212500006,0.715399981,0.0720999986), cb0[2].xyz);
    r4.x = max(0.100000001, r4.x);
    r0.w = r0.w / r4.x;
    r0.w = max(0.100000001, r0.w);
    r0.w = min(1, r0.w);
    r4.x = r19.y * r17.y + r16.y;
    r1.z = r3.x * r1.z;
    r0.w = r1.z * 6 + r0.w;
    r0.w = min(1, r0.w);
    r0.w = cb1[31].z * r0.w + -1;
    r0.w = cb1[31].z * r0.w;
    r0.w = r4.x * r0.w + 1;
    r0.y = r0.w * r0.y;
    r0.y = r0.y * r4.x;
    r0.w = max(0.0799999982, r20.z);
    r0.w = min(1, r0.w);
    r0.w = min(r0.z, r0.w);
    r0.y = saturate(r0.w * r0.y);
    r0.w = 1 + -r0.y;
    r1.z = 1 + -r19.y;
    r0.w = r1.z * r0.w;
    r2.xzw = r2.xzw * r0.yyy;
    r1.xyz = r1.xyw * r0.www + r2.xzw;
    r0.yzw = r7.xyz * r0.zzz + r3.yzw;
    r0.yzw = r1.xyz + r0.yzw;
    r1.x = saturate(cb0[16].w * r0.x);
    r1.y = r2.y * cb0[16].z + -cb0[16].x;
    r1.y = min(cb0[16].y, r1.y);
    r1.y = 1 + -r1.y;
    r1.x = r1.x * r1.y + -cb0[14].w;
    r0.x = r0.x * cb0[15].w + r1.x;
    r1.x = dot(cb1[37].xyz, r19.xzw);
    r1.x = 0.5 + r1.x;
    r2.x = 1;
    r2.yzw = cb0[13].www * float3(1,1.79999995,2.79999995) + float3(1,1,1);
    r2.xyzw = r2.xyzw * -r0.xxxx;
    r2.xyzw = exp2(r2.xyzw);
    r2.xyzw = min(float4(1,1,1,1), r2.xyzw);
    r0.x = 1 + -r2.x;
    r1.y = r1.x * r1.x;
    r1.x = r1.y * r1.x;
    r1.xyz = r1.xxx * cb0[14].xyz + cb0[15].xyz;
    r1.xyz = r1.xyz * r0.xxx;
    o0.xyz = r0.yzw * r2.yzw + r1.xyz;
    o0.w = r14.w;
  } else {
    o0.xyzw = float4(0,0,0,0);
  }
  return;
}
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4x4 _ViewRotProjectionMatrix; // Offset:    0 Size:    64 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:   64 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  128 Size:    64 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  192 Size:    64
//   float4x4 _InvProjectionMatrixDepth;// Offset:  256 Size:    64 [unused]
//   float4x4 _DepthTextureTransform;   // Offset:  320 Size:    64 [unused]
//   float4x3 _ViewMatrix;              // Offset:  384 Size:    48 [unused]
//   float4x3 _InvViewMatrix;           // Offset:  432 Size:    48
//   float4x4 _PreviousViewProjectionMatrix;// Offset:  480 Size:    64 [unused]
//   float4 _CameraDistances;           // Offset:  544 Size:    16 [unused]
//   float4 _ViewportSize;              // Offset:  560 Size:    16 [unused]
//   float4 _CameraPosition_MaxStaticReflectionMipIndex;// Offset:  576 Size:    16
//   float4 _CameraDirection_MaxParaboloidReflectionMipIndex;// Offset:  592 Size:    16 [unused]
//   float4 _ViewPoint_ExposureScale;   // Offset:  608 Size:    16
//   float4 _FogColorVector_ExposedWhitePointOverExposureScale;// Offset:  624 Size:    16 [unused]
//   float3 _SideFogColor;              // Offset:  640 Size:    12 [unused]
//   float3 _SunFogColorDelta;          // Offset:  656 Size:    12 [unused]
//   float3 _OppositeFogColorDelta;     // Offset:  672 Size:    12 [unused]
//   float4 _FogValues0;                // Offset:  688 Size:    16 [unused]
//   float4 _FogValues1;                // Offset:  704 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:  720 Size:    16 [unused]
//   float4 _UncompressDepthWeights_ShadowProjDepthMinValue;// Offset:  736 Size:    16 [unused]
//   float4 _UncompressDepthWeightsWS_ReflectionFadeTarget;// Offset:  752 Size:    16 [unused]
//   float4 _WorldAmbientColorParams0;  // Offset:  768 Size:    16 [unused]
//   float4 _WorldAmbientColorParams1;  // Offset:  784 Size:    16 [unused]
//   float4 _WorldAmbientColorParams2;  // Offset:  800 Size:    16 [unused]
//   float4 _GlobalWorldTextureParams;  // Offset:  816 Size:    16 [unused]
//   float4 _CullingCameraPosition_OneOverAutoExposureScale;// Offset:  832 Size:    16 [unused]
//   float4 _AmbientSkyColor_ReflectionScaleStrength;// Offset:  848 Size:    16 [unused]
//   float4 _AmbientGroundColor_ReflectionScaleDistanceMul;// Offset:  864 Size:    16 [unused]
//   float4 _FacettedShadowCastParams;  // Offset:  880 Size:    16 [unused]
//   float4 _FSMClipPlanes;             // Offset:  896 Size:    16 [unused]
//   float2 _ReflectionGIControl;       // Offset:  912 Size:     8 [unused]
//
// }
//
// cbuffer LightData
// {
//
//   float4 _CascadedShadowDepthRanges; // Offset:    0 Size:    16 [unused]
//   float4 _CascadedShadowRanges;      // Offset:   16 Size:    16 [unused]
//   float4 _CascadedShadowScale;       // Offset:   32 Size:    16 [unused]
//   float4 _CascadedShadowSliceDepthOffsets;// Offset:   48 Size:    16 [unused]
//   float4 _CascadedShadowSliceDepthScales;// Offset:   64 Size:    16 [unused]
//   float4 _CascadedShadowSliceScaleOffsets[3];// Offset:   80 Size:    48 [unused]
//   float4 _CascadedShadowSliceScaleOffsetsBiased[3];// Offset:  128 Size:    48 [unused]
//   float4 _FacettedShadowReceiveParams;// Offset:  176 Size:    16 [unused]
//   float4 _LightCapsuleDivLength;     // Offset:  192 Size:    16 [unused]
//   float4 _LightFadingClipPlanes[8];  // Offset:  208 Size:   128
//   float4 _LightProjectedVideoUnpack[8];// Offset:  336 Size:   128 [unused]
//   float4 _LightShadowFactor;         // Offset:  464 Size:    16
//   float4 _LightShadowMapSize;        // Offset:  480 Size:    16
//   float4x4 _LightSpotShadowProjections;// Offset:  496 Size:    64 [unused]
//   float4x4 _LightVolumeTransform;    // Offset:  560 Size:    64 [unused]
//   float4 _LongRangeShadowVolumePosScaleBias;// Offset:  624 Size:    16 [unused]
//   float4 _LongRangeShadowVolumeUvScaleBias;// Offset:  640 Size:    16 [unused]
//   float4 _RainLightViewpointLPS_DistVPToEdgesLPS;// Offset:  656 Size:    16 [unused]
//   float3 _LightAttenuation;          // Offset:  672 Size:    12
//   float _LightSpecularIntensity;     // Offset:  684 Size:     4
//   float3 _LightCapsuleMulLength;     // Offset:  688 Size:    12 [unused]
//   float _LightSpotNearClipFactor;    // Offset:  700 Size:     4 [unused]
//   float3 _LightDirection;            // Offset:  704 Size:    12 [unused]
//   float3 _LightFrontColor;           // Offset:  720 Size:    12
//   float3 _LightPosition;             // Offset:  736 Size:    12
//   float2 _LightCapsuleParams;        // Offset:  752 Size:     8 [unused]
//   float2 _LightShadowDepthTransform; // Offset:  760 Size:     8 [unused]
//   float2 _LightSpotConeFactors;      // Offset:  768 Size:     8 [unused]
//
// }
//
// cbuffer DeferredLightingCommon
// {
//
//   float4 _LongRangeShadowTileDebug;  // Offset:    0 Size:    16 [unused]
//   float4 _PositionScaleOffset;       // Offset:   16 Size:    16 [unused]
//   float4 _UVToViewSpace;             // Offset:   32 Size:    16
//   float4 _VPosOffset;                // Offset:   48 Size:    16
//   float4 _VPosScale;                 // Offset:   64 Size:    16
//   int _MSAALevel;                    // Offset:   80 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// ShadowRealSampler               sampler_c      NA          NA    0        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    0        1
// DeferredLightingCommon__AlbedoTextureMS    texture  float4        2dMS    1        1
// DeferredLightingCommon__DepthSamplerMS    texture  float4        2dMS    2        1
// DeferredLightingCommon__NormalTextureMS    texture  float4        2dMS    3        1
// DeferredLightingCommon__OtherTextureMS    texture  float4        2dMS    4        1
// Viewport                          cbuffer      NA          NA    0        1
// LightData                         cbuffer      NA          NA    1        1
// DeferredLightingCommon            cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// SV_SampleIndex           0   x           1   SAMPLE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[39], immediateIndexed
dcl_constantbuffer cb1[47], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2dms(0) (float,float,float,float) t1
dcl_resource_texture2dms(0) (float,float,float,float) t2
dcl_resource_texture2dms(0) (float,float,float,float) t3
dcl_resource_texture2dms(0) (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps_sgv v1.x, sampleIndex
dcl_output o0.xyzw
dcl_temps 8
samplepos r0.xy, t2.xyxx, v1.x
add r0.xy, r0.xyxx, v0.xyxx
mad r0.xy, r0.xyxx, cb2[4].xyxx, cb2[3].xyxx
mad r0.xy, cb2[2].xyxx, r0.xyxx, cb2[2].zwzz
mov r1.y, l(1.000000)
ftoi r2.xy, v0.xyxx
mov r2.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r1.x, r2.xyww, t2.xyzw, v1.x
dp2 r0.z, r1.xyxx, cb0[14].zwzz
dp2 r0.w, r1.xyxx, cb0[15].zwzz
div r0.z, -r0.z, r0.w
mov r1.z, -r0.z
mul r1.xy, r0.xyxx, r1.zzzz
mov r1.w, l(1.000000)
dp4 r0.x, r1.xyzw, cb0[27].xyzw
dp4 r0.y, r1.xyzw, cb0[28].xyzw
dp4 r0.z, r1.xyzw, cb0[29].xyzw
add r1.xyz, r0.xyzx, -cb1[46].xyzx
mov r1.w, -r1.z
dp3 r3.x, r1.xywx, r1.xywx
rsq r3.y, r3.x
sqrt r3.x, r3.x
mul r4.z, r3.x, cb1[29].z
mul r1.xyw, r1.xyxw, r3.yyyy
mad r1.w, r1.w, l(2.000000), l(2.000000)
div r1.xy, r1.xyxx, r1.wwww
mad r4.xy, r1.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r1.xyw, cb1[30].zwzw, l(-1.000000, -1.000000, 0.000000, 0.000000), r4.xyxz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.xxxx, s0, r1.w
mad r3.xyz, cb1[30].zwwz, l(1.000000, -1.000000, 0.000000, 0.000000), r4.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.y, r3.xyxx, t0.xxxx, s0, r3.z
add r1.x, r1.y, r1.x
mad r3.xyz, cb1[30].zwwz, l(1.000000, 1.000000, 0.000000, 0.000000), r4.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.y, r3.xyxx, t0.xxxx, s0, r3.z
add r1.x, r1.y, r1.x
mad r3.xyz, cb1[30].zwwz, l(-1.000000, 1.000000, 0.000000, 0.000000), r4.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.y, r3.xyxx, t0.xxxx, s0, r3.z
add r1.x, r1.y, r1.x
mad r3.xyz, cb1[30].zwwz, l(-2.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.y, r3.xyxx, t0.xxxx, s0, r3.z
add r1.x, r1.y, r1.x
mad r3.xyz, cb1[30].zwwz, l(2.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.y, r3.xyxx, t0.xxxx, s0, r3.z
add r1.x, r1.y, r1.x
mad r3.xyz, cb1[30].zwwz, l(0.000000, -2.000000, 0.000000, 0.000000), r4.xyzx
mad r4.xyz, cb1[30].zwwz, l(0.000000, 2.000000, 0.000000, 0.000000), r4.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.y, r4.xyxx, t0.xxxx, s0, r4.z
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r3.z
add r1.x, r1.w, r1.x
add r1.x, r1.y, r1.x
mad r1.x, r1.x, l(0.125000), l(-1.000000)
mul_sat r1.y, |r1.z|, cb1[29].w
lt r1.z, -r1.z, l(0.000000)
mad r1.x, r1.y, r1.x, l(1.000000)
movc r1.x, r1.z, l(1.000000), r1.x
mad r1.x, r1.x, cb1[29].x, cb1[29].y
mul r1.xyzw, r1.xxxx, cb1[45].xyzz
mov r0.w, l(1.000000)
dp4 r3.x, cb1[13].xyzw, r0.xyzw
dp4 r0.w, cb1[14].xyzw, r0.xyzw
min_sat r0.w, r0.w, r3.x
add r3.xyz, -r0.xyzx, cb1[46].xyzx
add r0.xyz, -r0.xyzx, cb0[36].xyzx
dp3 r3.w, r3.xyzx, r3.xyzx
sqrt r4.x, r3.w
add r4.x, r4.x, l(1.000000)
mul r4.x, r4.x, r4.x
div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
lt r4.y, l(0.000000), cb1[42].x
movc r4.x, r4.y, r4.x, r3.w
rsq r3.w, r3.w
mad_sat r4.x, r4.x, cb1[42].y, cb1[42].z
mul r0.w, r0.w, r4.x
mul r1.xyzw, r0.wwww, r1.xyzw
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad r4.xyz, r3.xyzx, r3.wwww, r0.xyzx
mul r3.xyz, r3.wwww, r3.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
dp3_sat r0.w, r3.xyzx, r4.xyzx
add r0.w, -r0.w, l(1.000000)
mul r3.w, r0.w, r0.w
mul r3.w, r3.w, r3.w
mul r0.w, r0.w, r3.w
ldms_indexable(texture2dms)(float,float,float,float) r5.xyzw, r2.xyzw, t4.xyzw, v1.x
add r2.z, -r5.x, l(1.000000)
mad r0.w, r2.z, r0.w, r5.x
ldms_indexable(texture2dms)(float,float,float,float) r6.xyzw, r2.xyww, t1.xyzw, v1.x
ldms_indexable(texture2dms)(float,float,float,float) r2.xyzw, r2.xyww, t3.xyzw, v1.x
mul r3.w, r5.z, r6.w
mul r6.xyzw, r6.wwww, r6.xyzz
mul r0.w, r0.w, r3.w
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
round_z r2.w, r2.w
mul r5.xz, r2.wwww, l(0.500000, 0.000000, 0.250000, 0.000000)
dp3 r2.w, r2.xyzx, r2.xyzx
eq r2.w, r2.w, l(0.000000)
movc r2.xyz, r2.wwww, l(0,0,1.000000,0), r2.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
dp3_sat r2.w, r2.xyzx, r4.xyzx
log r2.w, r2.w
mul r3.w, r5.y, l(13.000000)
exp r3.w, r3.w
mul r2.w, r2.w, r3.w
mad r3.w, r3.w, l(0.039744), l(0.085683)
exp r2.w, r2.w
mul r0.w, r0.w, r2.w
mul r0.w, r3.w, r0.w
dp3_sat r0.x, r2.xyzx, r0.xyzx
dp3 r0.y, r2.xyzx, r3.xyzx
mov_sat r0.z, r0.y
max r0.x, r0.x, r0.z
max r0.x, r0.x, l(0.000000)
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mul r0.x, r0.x, r0.w
mul r0.x, r0.z, r0.x
mul r2.xyzw, r1.xyzw, r0.xxxx
mul r2.xyzw, r2.xyzw, cb1[42].wwww
mad r3.xyzw, r0.yyyy, l(0.450000, 0.500000, 0.500000, 0.500000), l(0.550000, 0.500000, 0.500000, 0.500000)
mov_sat r4.xyzw, r3.xyzw
ge r0.xz, r5.xxzx, -r5.xxzx
frc r3.xy, |r5.xzxx|
movc r0.xz, r0.xxzx, r3.xxyx, -r3.xxyx
eq r0.x, r0.x, l(0.500000)
ge r0.z, r0.z, l(0.500000)
movc r4.xyzw, r0.xxxx, r4.xyzw, r0.yyyy
mov_sat r0.y, -r0.y
mul r7.xyzw, r1.xyww, r0.yyyy
mul r5.xyzw, r5.wwww, r7.xyzw
or r0.x, r0.z, r0.x
movc r3.xyzw, r0.zzzz, r3.wwww, r4.xyzw
mul r4.xyzw, r3.xwww, r3.xwww
mul r4.xyzw, r4.xyzw, r4.xyzw
movc_sat r0.xyzw, r0.xxxx, r4.xyzw, r3.xyzw
mad r0.xyzw, r0.xyzw, r1.xyzw, r5.xyzw
mad r0.xyzw, r6.xyzw, r0.xyzw, r2.xyzw
mul o0.xyzw, r0.xyzw, cb0[38].wwww
ret 
// Approximately 143 instruction slots used
 
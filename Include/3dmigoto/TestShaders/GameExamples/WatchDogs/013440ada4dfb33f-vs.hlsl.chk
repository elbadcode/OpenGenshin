// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:41:51 2019

cbuffer Viewport : register(b0)
{
  float4x4 _ViewRotProjectionMatrix : packoffset(c0);
  float4x4 _ViewProjectionMatrix : packoffset(c4);
  float4x4 _ProjectionMatrix : packoffset(c8);
  float4x4 _InvProjectionMatrix : packoffset(c12);
  float4x4 _InvProjectionMatrixDepth : packoffset(c16);
  float4x4 _DepthTextureTransform : packoffset(c20);
  float4x3 _ViewMatrix : packoffset(c24);
  float4x3 _InvViewMatrix : packoffset(c27);
  float4x4 _PreviousViewProjectionMatrix : packoffset(c30);
  float4 _CameraDistances : packoffset(c34);
  float4 _ViewportSize : packoffset(c35);
  float4 _CameraPosition_MaxStaticReflectionMipIndex : packoffset(c36);
  float4 _CameraDirection_MaxParaboloidReflectionMipIndex : packoffset(c37);
  float4 _ViewPoint_ExposureScale : packoffset(c38);
  float4 _FogColorVector_ExposedWhitePointOverExposureScale : packoffset(c39);
  float3 _SideFogColor : packoffset(c40);
  float3 _SunFogColorDelta : packoffset(c41);
  float3 _OppositeFogColorDelta : packoffset(c42);
  float4 _FogValues0 : packoffset(c43);
  float4 _FogValues1 : packoffset(c44);
  float4 _CameraNearPlaneSize : packoffset(c45);
  float4 _UncompressDepthWeights_ShadowProjDepthMinValue : packoffset(c46);
  float4 _UncompressDepthWeightsWS_ReflectionFadeTarget : packoffset(c47);
  float4 _WorldAmbientColorParams0 : packoffset(c48);
  float4 _WorldAmbientColorParams1 : packoffset(c49);
  float4 _WorldAmbientColorParams2 : packoffset(c50);
  float4 _GlobalWorldTextureParams : packoffset(c51);
  float4 _CullingCameraPosition_OneOverAutoExposureScale : packoffset(c52);
  float4 _AmbientSkyColor_ReflectionScaleStrength : packoffset(c53);
  float4 _AmbientGroundColor_ReflectionScaleDistanceMul : packoffset(c54);
  float4 _FacettedShadowCastParams : packoffset(c55);
  float4 _FSMClipPlanes : packoffset(c56);
  float2 _ReflectionGIControl : packoffset(c57);
}

cbuffer SceneGeometry : register(b1)
{
  float4 _GeometryPickingID : packoffset(c0);
  float4 _GeometryUserData : packoffset(c1);
  float4 _MeshDecompression : packoffset(c2);
  float4 _UVDecompression : packoffset(c3);
  float3 _GeometryBBoxMax : packoffset(c4);
  float3 _GeometryBBoxMin : packoffset(c5);
}



// 3Dmigoto declarations
#define cmp -


void main(
  int4 v0 : position0,
  int4 v1 : texcoord2,
  float4 v2 : normal0,
  float4 v3 : color1,
  float4 v4 : texcoord4,
  float4 v5 : texcoord5,
  float4 v6 : texcoord6,
  int4 v7 : texcoord7,
  out float o0 : SV_ClipDistance0,
  out float4 o1 : SV_Position0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = v6.xyz;
  r1.x = v4.w;
  r1.y = v5.w;
  r1.z = v6.w;
  r2.xyzw = (int4)v7.xyzw;
  r1.xyw = r2.xzy + r1.xzy;
  r2.x = r2.w * 0.000976999989 + 32;
  r0.w = r1.y;
  r2.yzw = (int3)v0.xyz;
  r2.yzw = r2.yzw * _MeshDecompression.yyy + _MeshDecompression.xxx;
  r2.xyz = r2.yzw * r2.xxx;
  r2.w = 1;
  r0.z = dot(r2.xyzw, r0.xyzw);
  o0.x = _CameraPosition_MaxStaticReflectionMipIndex.z + -r0.z;
  r3.w = r1.x;
  r3.xyz = v4.xyz;
  r0.x = dot(r2.xyzw, r3.xyzw);
  r1.xyz = v5.xyz;
  r0.y = dot(r2.xyzw, r1.xyzw);
  r0.xyz = -_CameraPosition_MaxStaticReflectionMipIndex.xyz + r0.xyz;
  r1.x = _ViewRotProjectionMatrix._m10 * r0.y;
  r1.z = _ViewRotProjectionMatrix._m12 * r0.y;
  r1.y = _ViewRotProjectionMatrix._m11 * r0.y;
  r2.x = r0.z * _ViewRotProjectionMatrix._m20 + _ViewRotProjectionMatrix._m30;
  r2.y = r0.z * _ViewRotProjectionMatrix._m21 + _ViewRotProjectionMatrix._m31;
  r2.z = r0.z * _ViewRotProjectionMatrix._m22 + _ViewRotProjectionMatrix._m32;
  r0.yzw = r2.xyz + r1.xyz;
  r1.y = _ViewRotProjectionMatrix._m01 * r0.x;
  r1.z = _ViewRotProjectionMatrix._m02 * r0.x;
  r1.x = _ViewRotProjectionMatrix._m00 * r0.x;
  r0.xyz = r1.xyz + r0.yzw;
  r0.w = max(_UncompressDepthWeights_ShadowProjDepthMinValue.w, r0.z);
  r0.z = dot(r0.xyw, r0.xyw);
  r0.z = sqrt(r0.z);
  r0.xyw = r0.xyw / r0.zzz;
  r0.z = -_CameraDistances.x + r0.z;
  o1.z = _CameraDistances.w * r0.z;
  r0.z = -1 + r0.w;
  o1.xy = r0.xy / r0.zz;
  o1.w = 1;
  return;
}
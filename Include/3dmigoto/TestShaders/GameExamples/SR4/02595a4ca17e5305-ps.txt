//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer vc0
// {
//
//   float4 Detail_Normal_Map_Tiling;   // Offset:    0 Size:    16 [unused]
//   float2 Detail_Normal_Map_Amount;   // Offset:   16 Size:     8 [unused]
//   float2 High_Detail_Cutoff_Dist;    // Offset:   32 Size:     8
//   float Normal_Map_Refl_Offset;      // Offset:   48 Size:     4
//   float Reflection_Plane_Height;     // Offset:   64 Size:     4 [unused]
//   float Base_Reflectivity;           // Offset:   80 Size:     4
//   float3 TOD_Light_Direction;        // Offset:   96 Size:    12
//   float3 TOD_Light_Color;            // Offset:  112 Size:    12
//   float Specular_Power;              // Offset:  128 Size:     4
//   float3 Specular_Color;             // Offset:  144 Size:    12
//   float Specular_Alpha;              // Offset:  160 Size:     4
//   float Min_Opacity;                 // Offset:  176 Size:     4
//   float Max_Fresnel;                 // Offset:  192 Size:     4
//   float3 Crest_Color;                // Offset:  208 Size:    12
//   float Crest_Threshold;             // Offset:  224 Size:     4
//   float4 Blend_Map_Extents;          // Offset:  240 Size:    16 [unused]
//   float4 Diffuse_Color2;             // Offset:  256 Size:    16
//   float Max_Fog_Depth2;              // Offset:  272 Size:     4 [unused]
//   float2 Max_Fog_Depth;              // Offset:  288 Size:     8 [unused]
//   float4 Diffuse_Color;              // Offset:  304 Size:    16
//
// }
//
// cbuffer vc1
// {
//
//   float4 Time;                       // Offset:    0 Size:    16
//   float2 Target_dimensions;          // Offset:   32 Size:     8
//
// }
//
// cbuffer vc4
// {
//
//   float4 Tint_color;                 // Offset:   16 Size:    16
//   float4 Fog_color;                  // Offset:   64 Size:    16
//   float4 IR_Similarity_Data;         // Offset:  160 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Normal_MapSampler                 sampler      NA          NA    0        1
// Reflection_MapSampler             sampler      NA          NA    1        1
// Blend_MapSampler                  sampler      NA          NA    2        1
// Diffuse_MapSampler                sampler      NA          NA    3        1
// Normal_MapSampler                 texture  float4          2d    0        1
// Reflection_MapSampler             texture  float4          2d    1        1
// Blend_MapSampler                  texture  float4          2d    2        1
// Diffuse_MapSampler                texture  float4          2d    3        1
// vc0                               cbuffer      NA          NA    0        1
// vc1                               cbuffer      NA          NA    1        1
// vc4                               cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float     zw
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// TEXCOORD                 7   xyz         8     NONE   float   x z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[3], immediateIndexed
dcl_constantbuffer cb4[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear centroid v1.zw
dcl_input_ps linear centroid v2.xyz
dcl_input_ps linear centroid v3.xyz
dcl_input_ps linear centroid v5.xyz
dcl_input_ps linear centroid v6.xyw
dcl_input_ps linear centroid v7.xyw
dcl_input_ps linear centroid v8.xz
dcl_output o0.xyzw
dcl_temps 6
dp3 r0.x, v3.xyzx, v3.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v3.xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v2.xyzx
add r2.xyzw, v8.xzxz, l(2011.000000, 1640.000000, 252.000000, 338.000000)
dp2 r0.w, r2.zwzz, r2.zwzz
mul_sat r2.xy, r2.xyxx, l(0.000228, 0.000291, 0.000000, 0.000000)
sqrt r0.w, r0.w
add r1.w, cb1[0].x, cb1[0].x
mad r0.w, r0.w, l(0.100000), -r1.w
sincos r0.w, null, r0.w
dp3 r1.w, v5.xyzx, v5.xyzx
sqrt r2.w, r1.w
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v5.xyzx
add r1.w, r2.w, l(-70.000000)
mul_sat r1.w, r1.w, l(0.033333)
mul r0.w, r0.w, r1.w
mul r1.w, r0.w, l(0.400000)
mad r4.x, r0.w, l(0.400000), l(-0.500000)
mad r0.w, -r1.w, r1.w, l(1.000000)
sqrt r0.w, r0.w
mul r1.xyz, r1.xyzx, r0.wwww
mad r0.xyz, r1.wwww, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, r0.xyzx
add r1.x, r0.w, r0.w
mov_sat r0.w, r0.w
add r0.w, -r0.w, l(1.000000)
mad r1.xyz, r1.xxxx, r0.xyzx, -r3.xyzx
dp3_sat r1.x, r1.xyzx, cb0[6].xyzx
log r1.x, r1.x
mul r1.y, l(20.000000), cb0[8].x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x
mul r1.x, r1.x, l(50.000000)
mul r1.yzw, cb0[7].xxyz, cb0[9].xxyz
mul r1.xyz, r1.xxxx, r1.yzwy
mul r1.xyz, r1.xyzx, cb0[10].xxxx
mul r1.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
add r1.w, l(1.000000), -cb0[5].x
mad r0.w, r0.w, r1.w, cb0[5].x
mul r3.xyz, r0.wwww, r1.xyzx
mad r1.xyz, -r1.xyzx, r0.wwww, cb0[13].xyzx
dp3 r1.w, r0.xyzx, r0.xyzx
rsq r1.w, r1.w
mul r1.w, r0.z, r1.w
ge r1.w, r1.w, cb0[14].x
and r1.w, r1.w, l(0x3f800000)
mad r1.xyz, r1.wwww, r1.xyzx, r3.xyzx
mad r0.y, r0.y, l(300.000000), l(-298.000000)
mul r0.xz, r0.xxzx, cb0[3].xxxx
add r1.w, l(2.500000), cb1[0].x
mad r3.xy, r1.wwww, l(0.100000, 0.100000, 0.000000, 0.000000), v1.zwzz
sample r3.xyzw, r3.xyxx, t0.xyzw, s0
mad r0.y, r3.x, l(4.000000), r0.y
add_sat r0.y, r0.y, l(-2.000000)
mad r1.w, -r2.w, l(0.020000), l(1.000000)
max r1.w, r1.w, l(0.000000)
mul r0.y, r0.y, r1.w
div r3.zw, l(1.000000, 1.000000, 1.000000, 1.000000), cb1[2].xxxy
mul r0.xz, r0.xxzx, r3.zzwz
div r1.w, l(100.000000), r2.w
add r2.w, r2.w, -cb0[2].x
mul_sat r2.w, r2.w, cb0[2].y
add r2.w, -r2.w, l(1.000000)
min r1.w, r1.w, l(1.000000)
div r3.zw, v6.xxxy, v6.wwww
mad r5.xy, r3.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
add r5.z, -r5.y, l(1.000000)
mad r0.xz, r0.xxzx, r1.wwww, r5.xxzx
mad r0.xz, r3.xxyx, l(0.050000, 0.000000, 0.050000, 0.000000), r0.xxzx
sample r3.xyzw, r0.xzxx, t1.xyzw, s1
mul r3.xyz, r0.wwww, r3.xyzx
lt r0.x, r3.w, l(1.000000)
and r0.x, r0.x, l(0x3f800000)
min r0.z, r0.w, cb0[12].x
div r3.xyz, r3.xyzx, cb4[1].xyzx
add r5.xyz, -r3.xyzx, l(1.661540, 0.317922, 0.122492, 0.000000)
mad r3.xyz, r0.yyyy, r5.xyzx, r3.xyzx
mov r2.z, -r2.x
sample r5.xyzw, r2.zyzz, t2.xyzw, s2
add r2.xyz, cb0[16].xyzx, -cb0[19].xyzx
mad r2.xyz, r5.zzzz, r2.xyzx, cb0[19].xyzx
add r0.y, -r5.z, l(0.300000)
mul_sat r0.y, r0.y, l(3.333333)
add r3.xyz, -r2.xyzx, r3.xyzx
mad r3.xyz, r0.zzzz, r3.xyzx, r2.xyzx
mad r0.xzw, r0.xxxx, r1.xxyz, r3.xxyz
mad r1.x, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r1.x
mov r4.y, l(-0.500000)
mul r1.xyzw, v8.xzxz, l(0.001000, 0.001000, 0.040000, 0.040000)
mad r1.zw, r4.xxxy, l(0.000000, 0.000000, 0.017000, 0.017000), r1.zzzw
sample r3.xyzw, r1.xyxx, t3.xyzw, s3
sample r1.xyzw, r1.zwzz, t3.xyzw, s3
mul r1.xyz, r3.zzzz, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[7].xyzx
mad r1.yzw, r1.xxyz, r0.yyyy, -r2.xxyz
mad r0.y, r1.x, r0.y, l(-0.100000)
add_sat r0.y, r0.y, r0.y
mad r1.x, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r1.x
mad r1.xyz, r0.yyyy, r1.yzwy, r2.xyzx
mul r0.y, r2.w, r0.y
add r1.xyz, -r0.xzwx, r1.xyzx
mad r0.xyz, r0.yyyy, r1.xyzx, r0.xzwx
mul r0.w, -v5.y, v7.x
mul r1.x, r0.w, l(-1.442695)
exp r1.x, r1.x
add r1.x, -r1.x, l(1.000000)
div r0.w, r1.x, r0.w
lt r1.x, l(0.050000), |v5.y|
movc r0.w, r1.x, r0.w, l(1.000000)
dp3 r1.x, -v5.xyzx, -v5.xyzx
sqrt r1.x, r1.x
mul r1.x, r1.x, v7.y
mad r0.w, r0.w, r1.x, -v7.w
exp r0.w, -r0.w
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
add r1.x, -r0.w, l(1.000000)
mul r0.xyz, r0.xyzx, r1.xxxx
mad r0.xyz, r0.wwww, cb4[4].xyzx, r0.xyzx
max r0.w, l(1.000000), cb0[11].x
mul o0.xyzw, r0.xyzw, cb4[1].xyzw
ret 
// Approximately 134 instruction slots used
 
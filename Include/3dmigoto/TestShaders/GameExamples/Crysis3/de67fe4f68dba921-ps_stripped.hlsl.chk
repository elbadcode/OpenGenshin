// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:39:59 2019
Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

TextureCube<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb3 : register(b3)
{
  float4 cb3[9];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[224];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[9];
}




// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.z = cb0[7].w * v2.w;
  r1.xy = v2.xy / v2.ww;
  r1.x = t0.Sample(s3_s, r1.xy).x;
  r1.x = -v2.w * cb0[7].w + r1.x;
  r1.x = cmp(r1.x < 0);
  if (r1.x != 0) discard;
  r1.xyz = cb0[4].xyz + -v5.xyz;
  r1.xyz = r1.zzz * float3(-0,-0,-2) + r1.xyz;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = rsqrt(r1.w);
  r1.xyz = r1.xyz * r1.www;
  r2.xyz = cb0[6].xyz + cb0[5].xyz;
  r3.xyz = float3(0.5,0.5,0.5) * r2.xyz;
  r4.xyz = -r2.xyz * float3(0.5,0.5,0.5) + cb0[6].xyz;
  r4.xyz = cb3[8].www * r4.xyz + r3.xyz;
  r5.xyz = -r2.xyz * float3(0.5,0.5,0.5) + cb0[5].xyz;
  r3.xyz = cb3[8].www * r5.xyz + r3.xyz;
  r4.xyz = -v5.xyz + r4.xyz;
  r4.xyz = r4.xyz / r1.xyz;
  r3.xyz = -v5.xyz + r3.xyz;
  r3.xyz = r3.xyz / r1.xyz;
  r5.xyz = cmp(float3(0,0,0) < r1.xyz);
  r3.xyz = r5.xyz ? r3.xyz : r4.xyz;
  r1.w = min(r3.x, r3.y);
  r1.w = min(r1.w, r3.z);
  r1.xyz = r1.xyz * r1.www + v5.xyz;
  r1.xyz = -r2.xyz * float3(0.5,0.5,0.5) + r1.xyz;
  r1.w = -cb3[1].w * 6 + 6;
  r1.xyzw = t1.SampleLevel(s2_s, r1.xyz, r1.w).xyzw;
  r1.w = r1.w * r1.w;
  r1.w = 16 * r1.w;
  r1.xyz = r1.xyz * r1.www;
  r1.xyz = cb3[1].xyz * r1.xyz;
  r1.w = 0.150000006 * cb0[8].y;
  r2.xyz = -cb0[4].xyz + v5.xyz;
  r2.w = dot(r2.xyz, r2.xyz);
  r2.w = rsqrt(r2.w);
  r2.xyz = r2.xyz * r2.www;
  r3.xyz = r2.zzz * float3(-0,-0,-2) + r2.xyz;
  r2.w = dot(r3.xyz, r3.xyz);
  r2.w = rsqrt(r2.w);
  r3.xyz = r3.xyz * r2.www;
  r4.xyz = v5.xyz;
  r4.w = 1;
  r5.x = dot(cb1[0].xyzw, r4.xyzw);
  r5.y = dot(cb1[1].xyzw, r4.xyzw);
  r0.w = dot(cb1[3].xyzw, r4.xyzw);
  r2.w = 0.5 * r0.w;
  r5.xy = r5.xy * float2(0.5,-0.5) + r2.ww;
  r0.xy = cb0[8].xy * r5.xy;
  r5.xyz = r3.xyz * float3(129,129,129) + v5.xyz;
  r5.w = 1;
  r6.x = dot(cb1[0].xyzw, r5.xyzw);
  r6.y = dot(cb1[1].xyzw, r5.xyzw);
  r2.w = dot(cb1[3].xyzw, r5.xyzw);
  r3.w = 0.5 * r2.w;
  r5.xy = r6.xy * float2(0.5,-0.5) + r3.ww;
  r5.xy = cb0[8].xy * r5.xy;
  r5.xy = r5.xy / r2.ww;
  r2.w = 1 + -r5.y;
  r2.w = min(r2.w, r5.y);
  r3.w = cmp(r1.w < r2.w);
  r2.w = saturate(r2.w / r1.w);
  r6.w = r3.w ? 1 : r2.w;
  r2.w = 3.1875 / cb0[7].y;
  r7.xyz = r3.xyz * float3(17,17,17) + v5.xyz;
  r7.w = 1;
  r8.x = dot(cb1[0].xyzw, r7.xyzw);
  r8.y = dot(cb1[1].xyzw, r7.xyzw);
  r3.w = dot(cb1[2].xyzw, r7.xyzw);
  r7.w = dot(cb1[3].xyzw, r7.xyzw);
  r3.w = r3.w / r7.w;
  r3.w = -cb2[223].x + r3.w;
  r7.z = cb2[223].y / r3.w;
  r3.w = 0.5 * r7.w;
  r5.zw = r8.xy * float2(0.5,-0.5) + r3.ww;
  r7.xy = cb0[8].xy * r5.zw;
  r8.xyzw = r7.xyzw + -r0.xyzw;
  r9.xyzw = r8.xyzw * float4(0.125,0.125,0.125,0.125) + r0.xyzw;
  r5.zw = r9.xy / r9.ww;
  r3.w = t0.Sample(s3_s, r5.zw).x;
  r3.w = r3.w + -r9.z;
  r3.w = cmp(abs(r3.w) >= r2.w);
  r9.xyzw = r8.xyzw * float4(0.25,0.25,0.25,0.25) + r0.xyzw;
  r5.zw = r9.xy / r9.ww;
  r5.z = t0.Sample(s3_s, r5.zw).x;
  r10.xyzw = r8.xyzw * float4(0.375,0.375,0.375,0.375) + r0.xyzw;
  r9.xy = r10.xy / r10.ww;
  r5.w = t0.Sample(s3_s, r9.xy).x;
  r11.xyzw = r8.xyzw * float4(0.5,0.5,0.5,0.5) + r0.xyzw;
  r9.xy = r11.xy / r11.ww;
  r9.x = t0.Sample(s3_s, r9.xy).x;
  r12.xyzw = r8.xyzw * float4(0.625,0.625,0.625,0.625) + r0.xyzw;
  r9.yw = r12.xy / r12.ww;
  r9.y = t0.Sample(s3_s, r9.yw).x;
  r13.xyzw = r8.xyzw * float4(0.75,0.75,0.75,0.75) + r0.xyzw;
  r10.xy = r13.xy / r13.ww;
  r9.w = t0.Sample(s3_s, r10.xy).x;
  r14.xyzw = r8.xyzw * float4(0.875,0.875,0.875,0.875) + r0.xyzw;
  r10.xy = r14.xy / r14.ww;
  r0.z = t0.Sample(s3_s, r10.xy).x;
  r7.xy = r7.xy / r7.ww;
  r7.x = t0.Sample(s3_s, r7.xy).x;
  if (r3.w != 0) {
    r3.w = r5.z + -r9.z;
    r3.w = cmp(abs(r3.w) >= r2.w);
    if (r3.w != 0) {
      r3.w = r5.w + -r10.z;
      r3.w = cmp(abs(r3.w) >= r2.w);
      if (r3.w != 0) {
        r3.w = r9.x + -r11.z;
        r3.w = cmp(abs(r3.w) >= r2.w);
        if (r3.w != 0) {
          r3.w = r9.y + -r12.z;
          r3.w = cmp(abs(r3.w) >= r2.w);
          if (r3.w != 0) {
            r3.w = r9.w + -r13.z;
            r3.w = cmp(abs(r3.w) >= r2.w);
            if (r3.w != 0) {
              r0.z = r0.z + -r14.z;
              r0.z = cmp(abs(r0.z) >= r2.w);
              if (r0.z != 0) {
                r0.z = r7.x + -r7.z;
                r0.z = cmp(abs(r0.z) >= r2.w);
                r0.z = r0.z ? 0 : 1;
              } else {
                r0.z = 0.875;
              }
            } else {
              r0.z = 0.75;
            }
          } else {
            r0.z = 0.625;
          }
        } else {
          r0.z = 0.5;
        }
      } else {
        r0.z = 0.375;
      }
    } else {
      r0.z = 0.25;
    }
  } else {
    r0.z = 0.125;
  }
  r2.w = cmp(0 < r0.z);
  if (r2.w != 0) {
    r0.xyw = r8.xyw * r0.zzz + r0.xyw;
    r0.xy = r0.xy / r0.ww;
    r7.xyzw = t2.SampleLevel(s0_s, r0.xy, 0).xyzw;
    r0.x = 32 * r7.w;
    r6.xyz = r7.xyz * r0.xxx;
    r0.x = 1 + -r0.y;
    r0.x = min(r0.x, r0.y);
    r0.y = cmp(r1.w < r0.x);
    r0.x = saturate(r0.x / r1.w);
    r0.x = r0.y ? 1 : r0.x;
    r0.y = 1 + -r0.z;
    r6.w = r0.x * r0.y + r6.w;
  } else {
    r0.xyzw = t2.SampleLevel(s0_s, r5.xy, 0).xyzw;
    r0.w = 32 * r0.w;
    r6.xyz = r0.xyz * r0.www;
  }
  r0.x = dot(r2.xyz, r3.xyz);
  r0.x = saturate(0.5 + r0.x);
  r0.xyzw = r6.xyzw * r0.xxxx;
  r0.xyz = r0.xyz * r0.www;
  r0.xyz = r0.xyz / cb2[2].www;
  r1.xyz = cb3[6].yyy * r1.xyz;
  r0.w = min(1, r0.w);
  r0.xyz = r0.xyz * cb3[6].xxx + -r1.xyz;
  r0.xyz = r0.www * r0.xyz + r1.xyz;
  r1.x = dot(cb0[0].xyzw, r4.xyzw);
  r1.y = dot(cb0[1].xyzw, r4.xyzw);
  r0.w = dot(cb0[3].xyzw, r4.xyzw);
  r1.xy = r1.xy * float2(1,-1) + r0.ww;
  r1.xy = float2(0.5,0.5) * r1.xy;
  r1.xy = r1.xy / r0.ww;
  r2.x = cb0[8].z * r1.x;
  r0.w = 1 + -r1.y;
  r2.y = -r0.w * cb0[8].w + 1;
  r1.xyzw = t3.Sample(s1_s, r2.xy).xyzw;
  r0.w = r1.w * r1.w;
  r0.w = 32 * r0.w;
  r1.xyz = r1.xyz * r0.www;
  r1.xyz = r1.xyz / cb2[2].www;
  r1.xyz = float3(0.25,0.25,0.25) * r1.xyz;
  r0.xyz = r0.xyz * float3(0.75,0.75,0.75) + r1.xyz;
  r0.xyz = cb2[2].www * r0.xyz;
  r0.w = 1;
  r0.w = saturate(dot(r0.xyzw, float4(0.03125,0.03125,0.03125,0.00392200006)));
  r0.w = 255 * r0.w;
  r0.w = ceil(r0.w);
  r1.xy = float2(0.00392200006,0.125489995) * r0.ww;
  o0.xyz = r0.xyz / r1.yyy;
  o0.w = sqrt(r1.x);
  return;
}
// ---- Created with 3Dmigoto v1.3.14 on Sat Feb 23 16:49:50 2019

struct foo
{
    float foo;                     // Offset:    0
    uint bar;                      // Offset:    4
    float baz;                     // Offset:    8
    int buz;                       // Offset:   12
    float4 f4;                     // Offset:   16
    float4 g4;                     // Offset:   32
    float oopsie;                  // Offset:   48
    float4 m4;                     // Offset:   52
    float4 n4;                     // Offset:   68
};

struct bar
{
    float foofoo;                  // Offset:    0
    uint foobar;                   // Offset:    4
    float foobaz;                  // Offset:    8
    int foobuz[8];                 // Offset:   12
    float binary_decompiler_array_size_calculation_looks_sketchy;// Offset:   44
    int2 really[3];                // Offset:   48
    float sketchy;                 // Offset:   72
    float3 did[5];                 // Offset:   76
    float i;                       // Offset:  136
    float4 mention[7];             // Offset:  140
    float how_sketchy;             // Offset:  252
};

StructuredBuffer<foo> struct_buf_1 : register(t110);
StructuredBuffer<bar> struct_buf_2 : register(t111);
StructuredBuffer<foo> struct_buf_3 : register(t112);


// 3Dmigoto declarations
#define cmp -


void main(
  nointerpolation uint4 v0 : TEXCOORD0,
  float v1 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = struct_buf_1[2].bar;
  r0.x = (uint)r0.x;
  r0.y = struct_buf_1[0].foo;
  r0.x = r0.y + r0.x;
  r0.y = struct_buf_1[1].baz;
  r0.x = r0.x + r0.y;
  r0.y = struct_buf_1[3].buz;
  r0.y = (int)r0.y;
  r0.x = r0.x + r0.y;
  r0.yz = (int2)v0.xx + int2(1,2);
  r1.x = struct_buf_1[r0.y].f4.x;
  r1.y = struct_buf_1[r0.y].f4.y;
  r1.z = struct_buf_1[r0.y].f4.z;
  r1.w = struct_buf_1[r0.y].f4.w;
  r2.x = struct_buf_1[r0.z].g4.x;
  r2.y = struct_buf_1[r0.z].g4.y;
  r2.z = struct_buf_1[r0.z].g4.z;
  r2.w = struct_buf_1[r0.z].g4.w;
  r0.w = dot(r1.xyzw, r2.xyzw);
  r0.x = r0.x + r0.w;
  r1.x = struct_buf_1[r0.y].m4.x;
  r1.y = struct_buf_1[r0.y].m4.y;
  r1.z = struct_buf_1[r0.y].m4.z;
  r1.w = struct_buf_1[r0.y].m4.w;
  r2.x = struct_buf_1[r0.z].n4.x;
  r2.y = struct_buf_1[r0.z].n4.y;
  r2.z = struct_buf_1[r0.z].n4.z;
  r2.w = struct_buf_1[r0.z].n4.w;
  r0.y = dot(r1.xyzw, r2.xyzw);
  r0.x = r0.x + r0.y;
  r0.y = struct_buf_2[v0.x].foofoo;
  r0.z = struct_buf_2[v0.x].foobar;
  r0.w = struct_buf_2[v0.x].foobaz;
  r0.x = r0.x + r0.y;
  r0.y = (uint)r0.z;
  r0.x = r0.x + r0.y;
  r0.x = r0.x + r0.w;
  r0.y = struct_buf_2[v0.x].foobuz[7];
  r0.z = struct_buf_2[v0.x].binary_decompiler_array_size_calculation_looks_sketchy;
  r0.y = (int)r0.y;
  r0.x = r0.x + r0.y;
  r0.x = r0.x + r0.z;
  r0.y = struct_buf_2[v0.x].really[2].y;
  r0.z = struct_buf_2[v0.x].sketchy;
  r0.y = (int)r0.y;
  r0.x = r0.x + r0.y;
  r0.x = r0.x + r0.z;
  r0.y = struct_buf_2[v0.x].did[4].z;
  r0.z = struct_buf_2[v0.x].i;
  r0.x = r0.x + r0.y;
  r0.x = r0.x + r0.z;
  r0.y = struct_buf_2[v0.x].mention[6].w;
  r0.z = struct_buf_2[v0.x].how_sketchy;
  r0.x = r0.x + r0.y;
  r0.x = r0.x + r0.z;
  r1.x = struct_buf_3[v0.x].foo;
  r1.y = struct_buf_3[v0.x].bar;
  r1.z = struct_buf_3[v0.x].baz;
  r1.w = struct_buf_3[v0.x].buz;
  r0.x = r1.x + r0.x;
  r0.y = (uint)r1.y;
  r0.x = r0.x + r0.y;
  r0.x = r0.x + r1.z;
  r0.y = (int)r1.w;
  o0.xyzw = r0.xxxx + r0.yyyy;
  return;
}